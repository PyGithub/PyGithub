name: CI
on:
  push:
    branches:
      - main
      - release-v*
  pull_request:
  merge_group:
env:
  openapi_api: api.github.com
  openapi_version: 2022-11-28

jobs:
  build:
    uses: "./.github/workflows/_build-pkg.yml"
    with:
      artifact-name: package

  test:
    runs-on: ${{ matrix.os }}
    name: test (Python ${{ matrix.python-version }} on ${{ matrix.os-label }})
    strategy:
      fail-fast: false
      matrix:
        # keep in sync with tox.ini [gh-actions] section
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-latest"]
        os-label: ["Ubuntu"]
        include:
          - {python-version: "3.8", os: "windows-latest", os-label: "Windows"}
          - {python-version: "3.8", os: "macos-latest", os-label: "macOS"}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run tests
        run: tox
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Python ${{ matrix.python-version }} on ${{ matrix.os-label }})
          path: pytest.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  test_success:
    # this aggregates success state of all jobs listed in `needs`
    # this is the only required check to pass CI
    name: "Test success"
    if: always()
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: "Success"
        if: needs.test.result == 'success'
        run: true
        shell: bash
      - name: "Failure"
        if: needs.test.result != 'success'
        run: false
        shell: bash

  schemas:
    name: "Add schemas"
    needs: "test_success"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: head
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r head/requirements/scripts.txt
      - name: Add schemas
        run: |
          python head/scripts/openapi.py fetch ${{ env.openapi_api }} ${{ env.openapi_version }} openapi.json

          echo "::group::Head schema suggestions:"
          python head/scripts/openapi.py index head/github openapi.head.index
          python head/scripts/openapi.py --dry-run suggest openapi.json openapi.head.index | tee schemas.head.txt
          echo "::endgroup::"

          echo "::group::Base schema suggestions:"
          python head/scripts/openapi.py index base/github openapi.base.index
          python head/scripts/openapi.py --dry-run suggest openapi.json openapi.base.index | tee schemas.base.txt
          echo "::endgroup::"

          echo "Difference:"
          diff schemas.base.txt schemas.head.txt

  implementations:
    name: "Implement schemas"
    needs: "test_success"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: head
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r head/requirements/scripts.txt
      - name: Add implementations
        run: |
          python head/scripts/openapi.py fetch ${{ env.openapi_api }} ${{ env.openapi_version }} openapi.json

          echo "::group::Head implementations:"
          python head/scripts/openapi.py index head/github openapi.head.index
          python head/scripts/openapi.py --dry-run apply --tests openapi.json openapi.head.index | tee implementation.head.txt
          echo "::endgroup::"

          echo "::group::Base implementations:"
          python head/scripts/openapi.py index base/github openapi.base.index
          python head/scripts/openapi.py --dry-run apply --tests openapi.json openapi.base.index | tee implementation.base.txt
          echo "::endgroup::"

          echo "Difference:"
          diff implementation.base.txt implementation.head.txt

  sort:
    name: "Sort classes"
    needs: "test_success"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r requirements/scripts.txt
      - name: Sort classes
        run: |
          echo "::group::Sort classes"
          python scripts/openapi.py index github openapi.index
          python scripts/sort_class.py openapi.index $(jq -r ".indices.class_to_descendants.GithubObject | @tsv" < openapi.index)
          echo "::endgroup::"

          echo "Changes:"
          git diff

  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
