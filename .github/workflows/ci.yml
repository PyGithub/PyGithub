name: CI
on:
  push:
    branches:
      - main
      - release-v*
  pull_request:
  merge_group:
env:
  openapi_api: api.github.com
  openapi_version: 2022-11-28
permissions: {}

jobs:
  build:
    uses: "./.github/workflows/_build-pkg.yml"
    with:
      artifact-name: package

  test:
    runs-on: ${{ matrix.os }}
    name: test (Python ${{ matrix.python-version }} on ${{ matrix.os-label }})
    strategy:
      fail-fast: false
      matrix:
        # keep in sync with tox.ini [gh-actions] section
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-latest"]
        os-label: ["Ubuntu"]
        include:
          - {python-version: "3.8", os: "windows-latest", os-label: "Windows"}
          - {python-version: "3.8", os: "macos-latest", os-label: "macOS"}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run tests
        run: tox
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (Python ${{ matrix.python-version }} on ${{ matrix.os-label }})
          path: pytest.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  test_success:
    # this aggregates success state of all jobs listed in `needs`
    # this is the only required check to pass CI
    name: "Test success"
    if: always()
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: "Success"
        if: needs.test.result == 'success'
        run: true
        shell: bash
      - name: "Failure"
        if: needs.test.result != 'success'
        run: false
        shell: bash

  index:
    name: "Check verbs"
    needs: "test_success"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          path: head
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r head/requirements/scripts.txt
      - name: Check verbs
        shell: bash
        run: |
          # Check verbs
          set -euo pipefail

          echo "::group::Head verb checking:"
          python head/scripts/openapi.py --verbose index --check-verbs head/github openapi.head.index | tee verbs.head.txt
          echo "::endgroup::"

          echo "::group::Base verb checking:"
          python head/scripts/openapi.py --verbose index --check-verbs base/github openapi.base.index | tee verbs.base.txt
          echo "::endgroup::"

          if ! (diff <(grep -v -E -e "^Index(ing|ed) " verbs.base.txt) <(grep -v -E -e "^Index(ing|ed) " verbs.head.txt) > diff.txt)
          then
            echo ""
            echo "Difference:"
            cat diff.txt
            echo ""
            echo "To fix this revisit the verbs in :calls: doc-string line of the respective method."
            echo ""
            echo "Fix warnings like 'Not found any … call in …' by adding the method name "
            echo "and verb to the 'known method verbs' section in github/openapi.index.json."
            echo ""
            echo "Fix warnings like 'Method … is known to call …' by fixing "
            echo "the doc-string or github/openapi.index.json."
            false
          fi

  schemas:
    name: "Add schemas"
    needs: "test_success"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          path: head
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r head/requirements/scripts.txt
      - name: Add schemas
        shell: bash
        run: |
          # Add schemas
          set -euo pipefail

          python head/scripts/openapi.py --verbose fetch ${{ env.openapi_api }} ${{ env.openapi_version }} openapi.json

          echo "::group::Head schema suggestions:"
          python head/scripts/openapi.py --verbose index head/github openapi.json openapi.head.index
          python head/scripts/openapi.py --verbose suggest schemas openapi.json openapi.head.index | tee schemas.head.txt
          echo "::endgroup::"

          echo "::group::Base schema suggestions:"
          python head/scripts/openapi.py --verbose index base/github openapi.json openapi.base.index
          python head/scripts/openapi.py --verbose suggest schemas openapi.json openapi.base.index | tee schemas.base.txt
          echo "::endgroup::"

          if ! (diff <(grep -v -E -e "^Index(ing|ed) " schemas.base.txt) <(grep -v -E -e "^Index(ing|ed) " schemas.head.txt) > diff.txt)
          then
            echo ""
            echo "Difference:"
            cat diff.txt
            echo ""
            (grep -E -e "^> Class \w+:$" diff.txt | sed -E -e "s/^> Class (\w+):$/\1/" || true) | while read class
            do
              echo "::group::Add schema to $class:"
              python head/scripts/openapi.py --verbose suggest schemas --add openapi.json openapi.head.index "$class" > /dev/null
              (cd head; git diff; git reset --hard --quiet HEAD)
              echo "::endgroup::"
            done
            echo ""
            echo "Run the following commands to add the suggested schemas:"
            echo "python3 -m venv venv"
            echo "source venv/bin/activate"
            echo "pip install -r requirements/scripts.txt"
            echo python scripts/openapi.py fetch api.github.com 2022-11-28 openapi.json
            echo python scripts/openapi.py index github openapi.json openapi.index
            echo python scripts/openapi.py suggest schemas --add openapi.json openapi.index $(grep -E -e "^> Class \w+:$" diff.txt | sed -E -e "s/^> Class (\w+):$/\1/")
            false
          fi

  implementations:
    name: "Implement schemas"
    needs: "test_success"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          path: head
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up dependencies
        run: |
          pip install -r head/requirements/scripts.txt
      - name: Add implementations
        shell: bash
        run: |
          # Add implementations
          set -euo pipefail

          python head/scripts/openapi.py --verbose fetch ${{ env.openapi_api }} ${{ env.openapi_version }} openapi.json

          echo "::group::Head implementations:"
          python head/scripts/openapi.py --verbose index head/github openapi.json openapi.head.index
          python head/scripts/openapi.py --verbose --dry-run apply --tests head/github openapi.json openapi.head.index | tee implementation.head.txt
          echo "::endgroup::"

          echo "::group::Base implementations:"
          python head/scripts/openapi.py --verbose index base/github openapi.json openapi.base.index
          python head/scripts/openapi.py --verbose --dry-run apply --tests base/github openapi.json openapi.base.index | tee implementation.base.txt
          echo "::endgroup::"

          if ! (diff <(sed -E -e "s/^[@]{2} .+ [@]{2}$/…/" -e "s%[(]base/github/%(github/%" -e "s%Test base/%Test %" implementation.base.txt) <(sed -E -e "s/^[@]{2} .+ [@]{2}$/…/" -e "s%[(]head/github/%(github/%" -e "s%Test head/%Test %" implementation.head.txt) > diff.txt)
          then
            echo ""
            echo "Difference:"
            cat diff.txt
            echo ""
            (grep -E -e "^> Class \w+ changed$" diff.txt | sed -E -e "s/^> Class (\w+) changed$/\1/" || true) | while read class
            do
              echo "::group::Apply schema to $class:"
              python head/scripts/openapi.py --verbose apply --tests --new-schemas create-class head/github openapi.json openapi.head.index "$class" > /dev/null
              (cd head; git diff; git reset --hard --quiet HEAD)
              echo "::endgroup::"
            done
            echo ""
            echo "Run the following commands to apply the schemas:"
            echo "python3 -m venv venv"
            echo "source venv/bin/activate"
            echo "pip install -r requirements/scripts.txt"
            echo python scripts/openapi.py fetch api.github.com 2022-11-28 openapi.json
            echo python scripts/openapi.py index github openapi.index
            echo python scripts/openapi.py apply --tests --new-schemas create-class github openapi.json openapi.index $(grep -E -e "^> Class \w+:$" diff.txt | sed -E -e "s/^> Class (\w+):$/\1/")
            (grep -E -e "^> Test .+ changed$" diff.txt | sed -E -e "s/^> Test (.+) changed$/\1/" || true) | while read test
            do
              echo python scripts/prepare-for-update-assertions.py "$test" testAttributes
              echo bash scripts/update-assertions.sh "$test" testAttributes
            done
            echo pre-commit run --all-files
            echo ""
            echo "You may need to fix the tests afterwards:"
            echo pip install . -r requirements/test.txt
            echo pytest tests
            echo
            false
          fi

  sort:
    name: "Sort classes"
    needs: "test_success"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/sort-classes
      - name: changes
        run: |
          if ! (git diff --exit-code > diff.txt)
          then
            echo ""
            echo "Changes:"
            cat diff.txt
            git reset --hard --quiet HEAD
            echo ""
            echo "To fix this, run the following commands:"
            echo "python3 -m venv venv"
            echo "source venv/bin/activate"
            echo "pip install -r requirements/scripts.txt"
            echo python scripts/openapi.py index github openapi.index
            for class in $(jq -r ".indices.class_to_descendants.GithubObject | @tsv" < openapi.index)
            do
              python scripts/sort_class.py openapi.index $class > /dev/null
              if ! git diff --quiet --exit-code
              then
                echo python scripts/sort_class.py openapi.index $class
                git reset --hard --quiet HEAD
              fi
            done
            false
          fi

  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}
