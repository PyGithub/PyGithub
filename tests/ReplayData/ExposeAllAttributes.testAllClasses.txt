https
GET
api.github.com
None
/users/nvie
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4896'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '8af842fb-ea9b-4237-bb36-ba65ee012cca'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1218'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 13:38:58 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"ded215d39a497c6d2de00dd5e5a5deb6"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:00 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"login":"nvie","id":83844,"avatar_url":"https://1.gravatar.com/avatar/466ef7561a0b100dc5a1021959962d28?d=https%3A%2F%2Fidenticons.github.com%2Fe6d0513ce49cc06cb956251623cb8fd9.png","gravatar_id":"466ef7561a0b100dc5a1021959962d28","url":"https://api.github.com/users/nvie","html_url":"https://github.com/nvie","followers_url":"https://api.github.com/users/nvie/followers","following_url":"https://api.github.com/users/nvie/following{/other_user}","gists_url":"https://api.github.com/users/nvie/gists{/gist_id}","starred_url":"https://api.github.com/users/nvie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nvie/subscriptions","organizations_url":"https://api.github.com/users/nvie/orgs","repos_url":"https://api.github.com/users/nvie/repos","events_url":"https://api.github.com/users/nvie/events{/privacy}","received_events_url":"https://api.github.com/users/nvie/received_events","type":"User","name":"Vincent Driessen","company":"3rd Cloud","blog":"http://nvie.com","location":"Netherlands","email":"vincent@3rdcloud.com","hireable":true,"bio":null,"public_repos":87,"followers":542,"following":45,"created_at":"2009-05-12T21:19:38Z","updated_at":"2013-09-06T13:38:58Z","public_gists":38}

https
GET
api.github.com
None
/user
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4895'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'bd7ef47e-9e8f-47b2-8367-f5d1185f675d'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1471'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:01 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User","name":"Vincent Jacques","company":"","blog":"http://vincent-jacques.net","location":"Paris, France","email":"vincent@vincent-jacques.net","hireable":false,"bio":"","public_repos":17,"followers":28,"following":40,"created_at":"2010-07-09T06:10:06Z","updated_at":"2013-09-06T12:51:22Z","public_gists":5,"total_private_repos":4,"owned_private_repos":4,"disk_usage":19212,"collaborators":1,"plan":{"name":"micro","space":614400,"collaborators":1,"private_repos":5},"private_gists":6,"site_admin":false}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4894'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '8834e1c1-f4f5-4da8-a92e-4b985517e4fd'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '4644'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:02 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"id":3544490,"name":"PyGithub","full_name":"jacquev6/PyGithub","owner":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"private":false,"html_url":"https://github.com/jacquev6/PyGithub","description":"Python library implementing the full Github API v3","fork":false,"url":"https://api.github.com/repos/jacquev6/PyGithub","forks_url":"https://api.github.com/repos/jacquev6/PyGithub/forks","keys_url":"https://api.github.com/repos/jacquev6/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/jacquev6/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/jacquev6/PyGithub/teams","hooks_url":"https://api.github.com/repos/jacquev6/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/jacquev6/PyGithub/events","assignees_url":"https://api.github.com/repos/jacquev6/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/jacquev6/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/jacquev6/PyGithub/tags","blobs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/jacquev6/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/jacquev6/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/jacquev6/PyGithub/languages","stargazers_url":"https://api.github.com/repos/jacquev6/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/jacquev6/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/jacquev6/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/jacquev6/PyGithub/subscription","commits_url":"https://api.github.com/repos/jacquev6/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/jacquev6/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/jacquev6/PyGithub/merges","archive_url":"https://api.github.com/repos/jacquev6/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/jacquev6/PyGithub/downloads","issues_url":"https://api.github.com/repos/jacquev6/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/jacquev6/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/jacquev6/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/labels{/name}","created_at":"2012-02-25T12:53:47Z","updated_at":"2013-09-06T12:41:05Z","pushed_at":"2013-09-06T12:41:05Z","git_url":"git://github.com/jacquev6/PyGithub.git","ssh_url":"git@github.com:jacquev6/PyGithub.git","clone_url":"https://github.com/jacquev6/PyGithub.git","svn_url":"https://github.com/jacquev6/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":820,"watchers_count":256,"language":"Python","has_issues":true,"has_downloads":true,"has_wiki":true,"forks_count":76,"mirror_url":null,"open_issues_count":15,"forks":76,"open_issues":15,"watchers":256,"master_branch":"master","default_branch":"master","permissions":{"admin":true,"push":true,"pull":true},"network_count":76}

https
GET
api.github.com
None
/orgs/BeaverSoftware
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4893'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'aadd8ce1-31df-4c38-b3d9-33ba75cfaf08'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1030'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 23 Jan 2013 12:15:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"99d8ce990ccf1acbb3508bd20d9883e4"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:03 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"login":"BeaverSoftware","id":1424031,"url":"https://api.github.com/orgs/BeaverSoftware","repos_url":"https://api.github.com/orgs/BeaverSoftware/repos","events_url":"https://api.github.com/orgs/BeaverSoftware/events","members_url":"https://api.github.com/orgs/BeaverSoftware/members{/member}","public_members_url":"https://api.github.com/orgs/BeaverSoftware/public_members{/member}","avatar_url":"https://0.gravatar.com/avatar/d563e337cac2fdc644e2aaaad1e23266?d=https%3A%2F%2Fidenticons.github.com%2Fde8dec416975d0a85845b1b88385b9d5.png","name":null,"company":null,"blog":null,"location":"Paris, France","email":null,"public_repos":1,"public_gists":0,"followers":0,"following":0,"html_url":"https://github.com/BeaverSoftware","created_at":"2012-02-09T19:20:12Z","updated_at":"2013-01-23T12:15:22Z","type":"Organization","total_private_repos":0,"owned_private_repos":0,"private_gists":0,"disk_usage":84,"collaborators":0,"billing_email":"BeaverSoftware@vincent-jacques.net","plan":{"name":"free","space":307200,"private_repos":0}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/branches/master
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4892'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '43800e7e-e879-402b-8701-255c06ec7c33'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '3317'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"4363de8c7d91e18a17cec5a495ab091a"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:04 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"name":"master","commit":{"sha":"ed781f8b1b96e1d2a342d36ca53114ea28862fa8","commit":{"author":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"committer":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"message":"Fix date of 1.18.0","tree":{"sha":"e90c43164378222f04883c0f6547102df818d1ef","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/e90c43164378222f04883c0f6547102df818d1ef"},"url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comment_count":0},"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","html_url":"https://github.com/jacquev6/PyGithub/commit/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8/comments","author":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"committer":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"parents":[{"sha":"2c4e3cbc24581c214f44682bfc3e7f438bae127a","url":"https://api.github.com/repos/jacquev6/PyGithub/commits/2c4e3cbc24581c214f44682bfc3e7f438bae127a","html_url":"https://github.com/jacquev6/PyGithub/commit/2c4e3cbc24581c214f44682bfc3e7f438bae127a"}]},"_links":{"self":"https://api.github.com/repos/jacquev6/PyGithub/branches/master","html":"https://github.com/jacquev6/PyGithub/tree/master"}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/commits/1292bf0e22c796e91cc3d6e24b544aece8c21f2a
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4891'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '223c6b24-a4ca-4539-8d78-38adeb061554'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '5275'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 09 May 2012 16:22:33 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"91582e2dc24ad5461e61062c01b32969"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:05 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"sha":"1292bf0e22c796e91cc3d6e24b544aece8c21f2a","commit":{"author":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2012-05-09T16:22:33Z"},"committer":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2012-05-09T16:22:33Z"},"message":"Remove completion functions from GitAuthor","tree":{"sha":"4c6bd50994f0f9823f898b1c6c964ad7d4fa11ab","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/4c6bd50994f0f9823f898b1c6c964ad7d4fa11ab"},"url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/1292bf0e22c796e91cc3d6e24b544aece8c21f2a","comment_count":0},"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/1292bf0e22c796e91cc3d6e24b544aece8c21f2a","html_url":"https://github.com/jacquev6/PyGithub/commit/1292bf0e22c796e91cc3d6e24b544aece8c21f2a","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/commits/1292bf0e22c796e91cc3d6e24b544aece8c21f2a/comments","author":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"committer":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"parents":[{"sha":"b46ed0dfde5ad02d3b91eb54a41c5ed960710eae","url":"https://api.github.com/repos/jacquev6/PyGithub/commits/b46ed0dfde5ad02d3b91eb54a41c5ed960710eae","html_url":"https://github.com/jacquev6/PyGithub/commit/b46ed0dfde5ad02d3b91eb54a41c5ed960710eae"}],"stats":{"total":20,"additions":0,"deletions":20},"files":[{"sha":"ca6a3c616fc1367b6d01d04a7cf6ee27cf216f26","filename":"github/GithubObjects/GitAuthor.py","status":"modified","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/jacquev6/PyGithub/blob/1292bf0e22c796e91cc3d6e24b544aece8c21f2a/github/GithubObjects/GitAuthor.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/1292bf0e22c796e91cc3d6e24b544aece8c21f2a/github/GithubObjects/GitAuthor.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/github/GithubObjects/GitAuthor.py?ref=1292bf0e22c796e91cc3d6e24b544aece8c21f2a","patch":"@@ -14,22 +14,17 @@ def __init__( self, requester, attributes, lazy ):\n         self.__completed = False\n         self.__initAttributes()\n         self.__useAttributes( attributes )\n-        if not lazy:\n-            self.__complete()\n \n     @property\n     def date( self ):\n-        self.__completeIfNeeded( self.__date )\n         return self.__date\n \n     @property\n     def email( self ):\n-        self.__completeIfNeeded( self.__email )\n         return self.__email\n \n     @property\n     def name( self ):\n-        self.__completeIfNeeded( self.__name )\n         return self.__name\n \n     def __initAttributes( self ):\n@@ -37,21 +32,6 @@ def __initAttributes( self ):\n         self.__email = None\n         self.__name = None\n \n-    def __completeIfNeeded( self, testedAttribute ):\n-        if not self.__completed and testedAttribute is None:\n-            self.__complete()\n-\n-    # @todo Do not generate __complete if type has no url attribute\n-    def __complete( self ):\n-        status, headers, data = self.__requester.request(\n-            \"GET\",\n-            self.__url,\n-            None,\n-            None\n-        )\n-        self.__useAttributes( data )\n-        self.__completed = True\n-\n     def __useAttributes( self, attributes ):\n          #@todo No need to check if attribute is in attributes when attribute is mandatory\n         if \"date\" in attributes and attributes[ \"date\" ] is not None:"}]}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/statuses/1292bf0e22c796e91cc3d6e24b544aece8c21f2a
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4890'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'bfc3ae14-6a54-4607-9d33-e51833d38736'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '2539'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"97c44c9e1c063b88767ef99e812a077b"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:06 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"url":"https://api.github.com/repos/jacquev6/PyGithub/statuses/1292bf0e22c796e91cc3d6e24b544aece8c21f2a","id":277040,"state":"success","description":"Status successfully created by PyGithub","target_url":"https://github.com/jacquev6/PyGithub/issues/67","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2012-09-08T11:30:56Z","updated_at":"2012-09-08T11:30:56Z"},{"url":"https://api.github.com/repos/jacquev6/PyGithub/statuses/1292bf0e22c796e91cc3d6e24b544aece8c21f2a","id":277031,"state":"pending","description":null,"target_url":null,"creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2012-09-08T11:27:12Z","updated_at":"2012-09-08T11:27:12Z"}]

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/milestones/17
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4889'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '77d21e66-086b-4a25-a708-948a4c057bf8'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1338'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:08 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/17","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/17/labels","id":215837,"number":17,"title":"Version 1.9.1","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":0,"closed_issues":2,"state":"closed","created_at":"2012-11-20T07:36:46Z","updated_at":"2012-11-20T18:42:30Z","due_on":null}

https
GET
api.github.com
None
/gists/149016
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4888'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '9a8fb974-29df-453c-a56c-0da8b8ce072c'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '32105'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 13:04:59 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"1aaa6053c05e25abbc1703b90bd409b9"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:09 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/gists/149016","forks_url":"https://api.github.com/gists/149016/forks","commits_url":"https://api.github.com/gists/149016/commits","id":"149016","git_pull_url":"https://gist.github.com/149016.git","git_push_url":"https://gist.github.com/149016.git","html_url":"https://gist.github.com/149016","files":{".gitignore":{"filename":".gitignore","type":"text/plain","language":null,"raw_url":"https://gist.github.com/raw/149016/e056704ebab0fbcd7bf937169b4057d378d09cf8/.gitignore","size":145,"content":"*.aux\n*.glo\n*.idx\n*.log\n*.toc\n*.ist\n*.acn\n*.acr\n*.alg\n*.bbl\n*.blg\n*.dvi\n*.glg\n*.gls\n*.ilg\n*.ind\n*.lof\n*.lot\n*.maf\n*.mtc\n*.mtc1\n*.out\n*.synctex.gz"}},"public":true,"created_at":"2009-07-17T11:37:42Z","updated_at":"2013-09-06T13:04:59Z","description":"Git: .gitignore file for LaTeX projects","comments":18,"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"comments_url":"https://api.github.com/gists/149016/comments","forks":[{"url":"https://api.github.com/gists/452042","user":{"login":"cflewis","id":43708,"avatar_url":"https://2.gravatar.com/avatar/5f986018993d9f078927fe29ee912cf2?d=https%3A%2F%2Fidenticons.github.com%2F287915711d06ce6d90e2c18e1d89d3a6.png","gravatar_id":"5f986018993d9f078927fe29ee912cf2","url":"https://api.github.com/users/cflewis","html_url":"https://github.com/cflewis","followers_url":"https://api.github.com/users/cflewis/followers","following_url":"https://api.github.com/users/cflewis/following{/other_user}","gists_url":"https://api.github.com/users/cflewis/gists{/gist_id}","starred_url":"https://api.github.com/users/cflewis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cflewis/subscriptions","organizations_url":"https://api.github.com/users/cflewis/orgs","repos_url":"https://api.github.com/users/cflewis/repos","events_url":"https://api.github.com/users/cflewis/events{/privacy}","received_events_url":"https://api.github.com/users/cflewis/received_events","type":"User"},"id":"452042","created_at":"2010-06-24T21:51:00Z","updated_at":"2010-06-24T21:51:25Z"},{"url":"https://api.github.com/gists/871983","user":{"login":"rbochet","id":56806,"avatar_url":"https://2.gravatar.com/avatar/54925726f7c3a2b76028718eddb8522a?d=https%3A%2F%2Fidenticons.github.com%2F8818556ce6ba4bc9302dca9ec1979591.png","gravatar_id":"54925726f7c3a2b76028718eddb8522a","url":"https://api.github.com/users/rbochet","html_url":"https://github.com/rbochet","followers_url":"https://api.github.com/users/rbochet/followers","following_url":"https://api.github.com/users/rbochet/following{/other_user}","gists_url":"https://api.github.com/users/rbochet/gists{/gist_id}","starred_url":"https://api.github.com/users/rbochet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbochet/subscriptions","organizations_url":"https://api.github.com/users/rbochet/orgs","repos_url":"https://api.github.com/users/rbochet/repos","events_url":"https://api.github.com/users/rbochet/events{/privacy}","received_events_url":"https://api.github.com/users/rbochet/received_events","type":"User"},"id":"871983","created_at":"2011-03-16T03:48:24Z","updated_at":"2013-08-16T00:46:15Z"},{"url":"https://api.github.com/gists/980414","user":{"login":"j10","id":250070,"avatar_url":"https://0.gravatar.com/avatar/7eb0a4d397a695f7fd15069a4f24ad44?d=https%3A%2F%2Fidenticons.github.com%2F6019c728e12af5d048c3d2decb9800cd.png","gravatar_id":"7eb0a4d397a695f7fd15069a4f24ad44","url":"https://api.github.com/users/j10","html_url":"https://github.com/j10","followers_url":"https://api.github.com/users/j10/followers","following_url":"https://api.github.com/users/j10/following{/other_user}","gists_url":"https://api.github.com/users/j10/gists{/gist_id}","starred_url":"https://api.github.com/users/j10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j10/subscriptions","organizations_url":"https://api.github.com/users/j10/orgs","repos_url":"https://api.github.com/users/j10/repos","events_url":"https://api.github.com/users/j10/events{/privacy}","received_events_url":"https://api.github.com/users/j10/received_events","type":"User"},"id":"980414","created_at":"2011-05-19T08:43:14Z","updated_at":"2011-05-19T08:43:20Z"},{"url":"https://api.github.com/gists/1404741","user":{"login":"Vaguery","id":81171,"avatar_url":"https://0.gravatar.com/avatar/db04d40ecceb0a4c0683a60462d11794?d=https%3A%2F%2Fidenticons.github.com%2Fc3ea21d464d21b7bf62431791ec01b78.png","gravatar_id":"db04d40ecceb0a4c0683a60462d11794","url":"https://api.github.com/users/Vaguery","html_url":"https://github.com/Vaguery","followers_url":"https://api.github.com/users/Vaguery/followers","following_url":"https://api.github.com/users/Vaguery/following{/other_user}","gists_url":"https://api.github.com/users/Vaguery/gists{/gist_id}","starred_url":"https://api.github.com/users/Vaguery/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vaguery/subscriptions","organizations_url":"https://api.github.com/users/Vaguery/orgs","repos_url":"https://api.github.com/users/Vaguery/repos","events_url":"https://api.github.com/users/Vaguery/events{/privacy}","received_events_url":"https://api.github.com/users/Vaguery/received_events","type":"User"},"id":"1404741","created_at":"2011-11-29T13:05:35Z","updated_at":"2011-11-29T13:05:35Z"},{"url":"https://api.github.com/gists/1422904","user":{"login":"phieber","id":1208351,"avatar_url":"https://1.gravatar.com/avatar/e2f846ae903d79fa8750763d0809cab5?d=https%3A%2F%2Fidenticons.github.com%2F09c10f8d5454910d48c67ff6081e8601.png","gravatar_id":"e2f846ae903d79fa8750763d0809cab5","url":"https://api.github.com/users/phieber","html_url":"https://github.com/phieber","followers_url":"https://api.github.com/users/phieber/followers","following_url":"https://api.github.com/users/phieber/following{/other_user}","gists_url":"https://api.github.com/users/phieber/gists{/gist_id}","starred_url":"https://api.github.com/users/phieber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phieber/subscriptions","organizations_url":"https://api.github.com/users/phieber/orgs","repos_url":"https://api.github.com/users/phieber/repos","events_url":"https://api.github.com/users/phieber/events{/privacy}","received_events_url":"https://api.github.com/users/phieber/received_events","type":"User"},"id":"1422904","created_at":"2011-12-02T11:25:46Z","updated_at":"2011-12-02T11:25:46Z"},{"url":"https://api.github.com/gists/1585783","user":{"login":"pbroschwitz","id":92129,"avatar_url":"https://1.gravatar.com/avatar/68e33f71f778ec322d68ca15ef2a7315?d=https%3A%2F%2Fidenticons.github.com%2F8417990ede5b8e7dc3295d4dd63e4062.png","gravatar_id":"68e33f71f778ec322d68ca15ef2a7315","url":"https://api.github.com/users/pbroschwitz","html_url":"https://github.com/pbroschwitz","followers_url":"https://api.github.com/users/pbroschwitz/followers","following_url":"https://api.github.com/users/pbroschwitz/following{/other_user}","gists_url":"https://api.github.com/users/pbroschwitz/gists{/gist_id}","starred_url":"https://api.github.com/users/pbroschwitz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pbroschwitz/subscriptions","organizations_url":"https://api.github.com/users/pbroschwitz/orgs","repos_url":"https://api.github.com/users/pbroschwitz/repos","events_url":"https://api.github.com/users/pbroschwitz/events{/privacy}","received_events_url":"https://api.github.com/users/pbroschwitz/received_events","type":"User"},"id":"1585783","created_at":"2012-01-09T23:59:07Z","updated_at":"2012-02-20T11:18:52Z"},{"url":"https://api.github.com/gists/2549120","user":{"login":"gaving","id":43741,"avatar_url":"https://2.gravatar.com/avatar/839485ec6b0111d4ccc69646789d6728?d=https%3A%2F%2Fidenticons.github.com%2F781870bb5979fcc948dcc48da5fb798a.png","gravatar_id":"839485ec6b0111d4ccc69646789d6728","url":"https://api.github.com/users/gaving","html_url":"https://github.com/gaving","followers_url":"https://api.github.com/users/gaving/followers","following_url":"https://api.github.com/users/gaving/following{/other_user}","gists_url":"https://api.github.com/users/gaving/gists{/gist_id}","starred_url":"https://api.github.com/users/gaving/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaving/subscriptions","organizations_url":"https://api.github.com/users/gaving/orgs","repos_url":"https://api.github.com/users/gaving/repos","events_url":"https://api.github.com/users/gaving/events{/privacy}","received_events_url":"https://api.github.com/users/gaving/received_events","type":"User"},"id":"2549120","created_at":"2012-04-29T09:57:32Z","updated_at":"2012-04-29T09:57:32Z"},{"url":"https://api.github.com/gists/2549928","user":{"login":"pbelmans","id":700126,"avatar_url":"https://2.gravatar.com/avatar/bf4c56431003682b725b72668e7de35f?d=https%3A%2F%2Fidenticons.github.com%2Fb6e0db3b4d374eb7e8d52b9f271f4822.png","gravatar_id":"bf4c56431003682b725b72668e7de35f","url":"https://api.github.com/users/pbelmans","html_url":"https://github.com/pbelmans","followers_url":"https://api.github.com/users/pbelmans/followers","following_url":"https://api.github.com/users/pbelmans/following{/other_user}","gists_url":"https://api.github.com/users/pbelmans/gists{/gist_id}","starred_url":"https://api.github.com/users/pbelmans/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pbelmans/subscriptions","organizations_url":"https://api.github.com/users/pbelmans/orgs","repos_url":"https://api.github.com/users/pbelmans/repos","events_url":"https://api.github.com/users/pbelmans/events{/privacy}","received_events_url":"https://api.github.com/users/pbelmans/received_events","type":"User"},"id":"2549928","created_at":"2012-04-29T12:07:11Z","updated_at":"2012-05-14T11:08:39Z"},{"url":"https://api.github.com/gists/3061207","user":{"login":"robEllenberg","id":1210940,"avatar_url":"https://1.gravatar.com/avatar/cee0a0313cb89262ccaf408cf42eeae8?d=https%3A%2F%2Fidenticons.github.com%2Fb927fc8b72fac9a5b05e8afd1545e069.png","gravatar_id":"cee0a0313cb89262ccaf408cf42eeae8","url":"https://api.github.com/users/robEllenberg","html_url":"https://github.com/robEllenberg","followers_url":"https://api.github.com/users/robEllenberg/followers","following_url":"https://api.github.com/users/robEllenberg/following{/other_user}","gists_url":"https://api.github.com/users/robEllenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/robEllenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robEllenberg/subscriptions","organizations_url":"https://api.github.com/users/robEllenberg/orgs","repos_url":"https://api.github.com/users/robEllenberg/repos","events_url":"https://api.github.com/users/robEllenberg/events{/privacy}","received_events_url":"https://api.github.com/users/robEllenberg/received_events","type":"User"},"id":"3061207","created_at":"2012-07-06T16:34:35Z","updated_at":"2012-07-06T16:34:35Z"},{"url":"https://api.github.com/gists/3073850","user":{"login":"naught101","id":167164,"avatar_url":"https://2.gravatar.com/avatar/20cb8dcc17ad4334c0f8cb1ddc28bcd0?d=https%3A%2F%2Fidenticons.github.com%2F16a0a5f3381b862da55875130a94ad3f.png","gravatar_id":"20cb8dcc17ad4334c0f8cb1ddc28bcd0","url":"https://api.github.com/users/naught101","html_url":"https://github.com/naught101","followers_url":"https://api.github.com/users/naught101/followers","following_url":"https://api.github.com/users/naught101/following{/other_user}","gists_url":"https://api.github.com/users/naught101/gists{/gist_id}","starred_url":"https://api.github.com/users/naught101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naught101/subscriptions","organizations_url":"https://api.github.com/users/naught101/orgs","repos_url":"https://api.github.com/users/naught101/repos","events_url":"https://api.github.com/users/naught101/events{/privacy}","received_events_url":"https://api.github.com/users/naught101/received_events","type":"User"},"id":"3073850","created_at":"2012-07-09T02:17:21Z","updated_at":"2012-07-09T02:17:21Z"},{"url":"https://api.github.com/gists/3683565","user":{"login":"TKAB","id":66597,"avatar_url":"https://1.gravatar.com/avatar/7a66c8124726c66cf9901d7e09f4f3cb?d=https%3A%2F%2Fidenticons.github.com%2F4bec99ec5bd39630575692948d9e8169.png","gravatar_id":"7a66c8124726c66cf9901d7e09f4f3cb","url":"https://api.github.com/users/TKAB","html_url":"https://github.com/TKAB","followers_url":"https://api.github.com/users/TKAB/followers","following_url":"https://api.github.com/users/TKAB/following{/other_user}","gists_url":"https://api.github.com/users/TKAB/gists{/gist_id}","starred_url":"https://api.github.com/users/TKAB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TKAB/subscriptions","organizations_url":"https://api.github.com/users/TKAB/orgs","repos_url":"https://api.github.com/users/TKAB/repos","events_url":"https://api.github.com/users/TKAB/events{/privacy}","received_events_url":"https://api.github.com/users/TKAB/received_events","type":"User"},"id":"3683565","created_at":"2012-09-09T09:58:43Z","updated_at":"2012-09-09T09:58:43Z"},{"url":"https://api.github.com/gists/3802139","user":{"login":"linchen04","id":1383767,"avatar_url":"https://1.gravatar.com/avatar/4380e7c4928005fc0eaf9772e1fe64b7?d=https%3A%2F%2Fidenticons.github.com%2F39a2a9b3f884c9a2e97ce61cb56e02fd.png","gravatar_id":"4380e7c4928005fc0eaf9772e1fe64b7","url":"https://api.github.com/users/linchen04","html_url":"https://github.com/linchen04","followers_url":"https://api.github.com/users/linchen04/followers","following_url":"https://api.github.com/users/linchen04/following{/other_user}","gists_url":"https://api.github.com/users/linchen04/gists{/gist_id}","starred_url":"https://api.github.com/users/linchen04/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linchen04/subscriptions","organizations_url":"https://api.github.com/users/linchen04/orgs","repos_url":"https://api.github.com/users/linchen04/repos","events_url":"https://api.github.com/users/linchen04/events{/privacy}","received_events_url":"https://api.github.com/users/linchen04/received_events","type":"User"},"id":"3802139","created_at":"2012-09-28T21:20:16Z","updated_at":"2012-09-28T21:20:16Z"},{"url":"https://api.github.com/gists/3958094","user":{"login":"macalicious","id":717205,"avatar_url":"https://2.gravatar.com/avatar/59eb80f68e015e725e9eeb90f24987b2?d=https%3A%2F%2Fidenticons.github.com%2F1d2591e0232d5734561c3c71252a2efa.png","gravatar_id":"59eb80f68e015e725e9eeb90f24987b2","url":"https://api.github.com/users/macalicious","html_url":"https://github.com/macalicious","followers_url":"https://api.github.com/users/macalicious/followers","following_url":"https://api.github.com/users/macalicious/following{/other_user}","gists_url":"https://api.github.com/users/macalicious/gists{/gist_id}","starred_url":"https://api.github.com/users/macalicious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/macalicious/subscriptions","organizations_url":"https://api.github.com/users/macalicious/orgs","repos_url":"https://api.github.com/users/macalicious/repos","events_url":"https://api.github.com/users/macalicious/events{/privacy}","received_events_url":"https://api.github.com/users/macalicious/received_events","type":"User"},"id":"3958094","created_at":"2012-10-26T10:37:44Z","updated_at":"2012-10-26T10:37:44Z"},{"url":"https://api.github.com/gists/4362953","user":{"login":"dermesser","id":1042327,"avatar_url":"https://0.gravatar.com/avatar/1f99406671a26d17de4f0a52a41ad0c7?d=https%3A%2F%2Fidenticons.github.com%2F1b2f62f9f8f36eeb3c2a1ed42d1a2249.png","gravatar_id":"1f99406671a26d17de4f0a52a41ad0c7","url":"https://api.github.com/users/dermesser","html_url":"https://github.com/dermesser","followers_url":"https://api.github.com/users/dermesser/followers","following_url":"https://api.github.com/users/dermesser/following{/other_user}","gists_url":"https://api.github.com/users/dermesser/gists{/gist_id}","starred_url":"https://api.github.com/users/dermesser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermesser/subscriptions","organizations_url":"https://api.github.com/users/dermesser/orgs","repos_url":"https://api.github.com/users/dermesser/repos","events_url":"https://api.github.com/users/dermesser/events{/privacy}","received_events_url":"https://api.github.com/users/dermesser/received_events","type":"User"},"id":"4362953","created_at":"2012-12-23T11:04:08Z","updated_at":"2013-08-07T18:49:16Z"},{"url":"https://api.github.com/gists/4401093","user":{"login":"szalansky","id":323025,"avatar_url":"https://1.gravatar.com/avatar/b96196ac5b306a6f0d302dd9f82a24ee?d=https%3A%2F%2Fidenticons.github.com%2F6470274ac82665a71a91d36c419016ce.png","gravatar_id":"b96196ac5b306a6f0d302dd9f82a24ee","url":"https://api.github.com/users/szalansky","html_url":"https://github.com/szalansky","followers_url":"https://api.github.com/users/szalansky/followers","following_url":"https://api.github.com/users/szalansky/following{/other_user}","gists_url":"https://api.github.com/users/szalansky/gists{/gist_id}","starred_url":"https://api.github.com/users/szalansky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szalansky/subscriptions","organizations_url":"https://api.github.com/users/szalansky/orgs","repos_url":"https://api.github.com/users/szalansky/repos","events_url":"https://api.github.com/users/szalansky/events{/privacy}","received_events_url":"https://api.github.com/users/szalansky/received_events","type":"User"},"id":"4401093","created_at":"2012-12-28T19:28:03Z","updated_at":"2012-12-28T19:28:03Z"},{"url":"https://api.github.com/gists/4568476","user":{"login":"flomey","id":3226735,"avatar_url":"https://1.gravatar.com/avatar/3143afe043a2fdcd6a22a537e4cc3c8e?d=https%3A%2F%2Fidenticons.github.com%2F9271b5a509f2dabd1c5850acf684759c.png","gravatar_id":"3143afe043a2fdcd6a22a537e4cc3c8e","url":"https://api.github.com/users/flomey","html_url":"https://github.com/flomey","followers_url":"https://api.github.com/users/flomey/followers","following_url":"https://api.github.com/users/flomey/following{/other_user}","gists_url":"https://api.github.com/users/flomey/gists{/gist_id}","starred_url":"https://api.github.com/users/flomey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flomey/subscriptions","organizations_url":"https://api.github.com/users/flomey/orgs","repos_url":"https://api.github.com/users/flomey/repos","events_url":"https://api.github.com/users/flomey/events{/privacy}","received_events_url":"https://api.github.com/users/flomey/received_events","type":"User"},"id":"4568476","created_at":"2013-01-18T20:59:25Z","updated_at":"2013-01-18T20:59:25Z"},{"url":"https://api.github.com/gists/4732801","user":{"login":"mhebing","id":905115,"avatar_url":"https://2.gravatar.com/avatar/14e2a01d187cb0a167942e24e9234f95?d=https%3A%2F%2Fidenticons.github.com%2Fb874dedd9bb70a549db142d519aa6648.png","gravatar_id":"14e2a01d187cb0a167942e24e9234f95","url":"https://api.github.com/users/mhebing","html_url":"https://github.com/mhebing","followers_url":"https://api.github.com/users/mhebing/followers","following_url":"https://api.github.com/users/mhebing/following{/other_user}","gists_url":"https://api.github.com/users/mhebing/gists{/gist_id}","starred_url":"https://api.github.com/users/mhebing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhebing/subscriptions","organizations_url":"https://api.github.com/users/mhebing/orgs","repos_url":"https://api.github.com/users/mhebing/repos","events_url":"https://api.github.com/users/mhebing/events{/privacy}","received_events_url":"https://api.github.com/users/mhebing/received_events","type":"User"},"id":"4732801","created_at":"2013-02-07T17:57:21Z","updated_at":"2013-02-07T17:59:53Z"},{"url":"https://api.github.com/gists/5074215","user":{"login":"fumingshih","id":171536,"avatar_url":"https://0.gravatar.com/avatar/cdaeda52c7e0e7db119ec242652a7eac?d=https%3A%2F%2Fidenticons.github.com%2Ff3daf33ead84c02b32d673addce28321.png","gravatar_id":"cdaeda52c7e0e7db119ec242652a7eac","url":"https://api.github.com/users/fumingshih","html_url":"https://github.com/fumingshih","followers_url":"https://api.github.com/users/fumingshih/followers","following_url":"https://api.github.com/users/fumingshih/following{/other_user}","gists_url":"https://api.github.com/users/fumingshih/gists{/gist_id}","starred_url":"https://api.github.com/users/fumingshih/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fumingshih/subscriptions","organizations_url":"https://api.github.com/users/fumingshih/orgs","repos_url":"https://api.github.com/users/fumingshih/repos","events_url":"https://api.github.com/users/fumingshih/events{/privacy}","received_events_url":"https://api.github.com/users/fumingshih/received_events","type":"User"},"id":"5074215","created_at":"2013-03-03T02:30:54Z","updated_at":"2013-03-03T02:30:54Z"},{"url":"https://api.github.com/gists/5126805","user":{"login":"xiddw","id":742519,"avatar_url":"https://2.gravatar.com/avatar/e3aea2d1cdb375467416bff41c614582?d=https%3A%2F%2Fidenticons.github.com%2Ffd082f32f1f9679671081ba58bb37459.png","gravatar_id":"e3aea2d1cdb375467416bff41c614582","url":"https://api.github.com/users/xiddw","html_url":"https://github.com/xiddw","followers_url":"https://api.github.com/users/xiddw/followers","following_url":"https://api.github.com/users/xiddw/following{/other_user}","gists_url":"https://api.github.com/users/xiddw/gists{/gist_id}","starred_url":"https://api.github.com/users/xiddw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiddw/subscriptions","organizations_url":"https://api.github.com/users/xiddw/orgs","repos_url":"https://api.github.com/users/xiddw/repos","events_url":"https://api.github.com/users/xiddw/events{/privacy}","received_events_url":"https://api.github.com/users/xiddw/received_events","type":"User"},"id":"5126805","created_at":"2013-03-10T02:21:30Z","updated_at":"2013-03-10T02:21:30Z"},{"url":"https://api.github.com/gists/5353918","user":{"login":"stared","id":1001610,"avatar_url":"https://2.gravatar.com/avatar/1b324e4900e79878eb518c1263b41795?d=https%3A%2F%2Fidenticons.github.com%2F031dfe1b6a9e475fa708179fb35beb3b.png","gravatar_id":"1b324e4900e79878eb518c1263b41795","url":"https://api.github.com/users/stared","html_url":"https://github.com/stared","followers_url":"https://api.github.com/users/stared/followers","following_url":"https://api.github.com/users/stared/following{/other_user}","gists_url":"https://api.github.com/users/stared/gists{/gist_id}","starred_url":"https://api.github.com/users/stared/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stared/subscriptions","organizations_url":"https://api.github.com/users/stared/orgs","repos_url":"https://api.github.com/users/stared/repos","events_url":"https://api.github.com/users/stared/events{/privacy}","received_events_url":"https://api.github.com/users/stared/received_events","type":"User"},"id":"5353918","created_at":"2013-04-10T11:42:03Z","updated_at":"2013-04-10T11:43:47Z"},{"url":"https://api.github.com/gists/5600181","user":{"login":"huashuai","id":256761,"avatar_url":"https://1.gravatar.com/avatar/279030da669c3950fc54dea37ee3109e?d=https%3A%2F%2Fidenticons.github.com%2Fc66590f0228b4de1b7d16d1b8f10161c.png","gravatar_id":"279030da669c3950fc54dea37ee3109e","url":"https://api.github.com/users/huashuai","html_url":"https://github.com/huashuai","followers_url":"https://api.github.com/users/huashuai/followers","following_url":"https://api.github.com/users/huashuai/following{/other_user}","gists_url":"https://api.github.com/users/huashuai/gists{/gist_id}","starred_url":"https://api.github.com/users/huashuai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huashuai/subscriptions","organizations_url":"https://api.github.com/users/huashuai/orgs","repos_url":"https://api.github.com/users/huashuai/repos","events_url":"https://api.github.com/users/huashuai/events{/privacy}","received_events_url":"https://api.github.com/users/huashuai/received_events","type":"User"},"id":"5600181","created_at":"2013-05-17T16:15:32Z","updated_at":"2013-05-17T16:15:32Z"},{"url":"https://api.github.com/gists/5639946","user":{"login":"simardcasanova","id":739940,"avatar_url":"https://0.gravatar.com/avatar/63c42221c8ed3dfc335a0d1b19397e36?d=https%3A%2F%2Fidenticons.github.com%2F819fcce6467f36e0beb6ffc69afa9f21.png","gravatar_id":"63c42221c8ed3dfc335a0d1b19397e36","url":"https://api.github.com/users/simardcasanova","html_url":"https://github.com/simardcasanova","followers_url":"https://api.github.com/users/simardcasanova/followers","following_url":"https://api.github.com/users/simardcasanova/following{/other_user}","gists_url":"https://api.github.com/users/simardcasanova/gists{/gist_id}","starred_url":"https://api.github.com/users/simardcasanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simardcasanova/subscriptions","organizations_url":"https://api.github.com/users/simardcasanova/orgs","repos_url":"https://api.github.com/users/simardcasanova/repos","events_url":"https://api.github.com/users/simardcasanova/events{/privacy}","received_events_url":"https://api.github.com/users/simardcasanova/received_events","type":"User"},"id":"5639946","created_at":"2013-05-23T22:24:19Z","updated_at":"2013-05-23T22:24:57Z"},{"url":"https://api.github.com/gists/5965077","user":{"login":"habi","id":1651235,"avatar_url":"https://1.gravatar.com/avatar/4a0a820ba6c1996bc37d64ce14606ad4?d=https%3A%2F%2Fidenticons.github.com%2Fbaa3c8588d9ab73deea280466d5db7e1.png","gravatar_id":"4a0a820ba6c1996bc37d64ce14606ad4","url":"https://api.github.com/users/habi","html_url":"https://github.com/habi","followers_url":"https://api.github.com/users/habi/followers","following_url":"https://api.github.com/users/habi/following{/other_user}","gists_url":"https://api.github.com/users/habi/gists{/gist_id}","starred_url":"https://api.github.com/users/habi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/habi/subscriptions","organizations_url":"https://api.github.com/users/habi/orgs","repos_url":"https://api.github.com/users/habi/repos","events_url":"https://api.github.com/users/habi/events{/privacy}","received_events_url":"https://api.github.com/users/habi/received_events","type":"User"},"id":"5965077","created_at":"2013-07-10T09:57:15Z","updated_at":"2013-07-10T09:57:40Z"},{"url":"https://api.github.com/gists/6394053","user":{"login":"glaubius","id":5349064,"avatar_url":"https://0.gravatar.com/avatar/ff2451755814a23845b19551371bb026?d=https%3A%2F%2Fidenticons.github.com%2Faa59a5980a33a834ee55c9f386e7c996.png","gravatar_id":"ff2451755814a23845b19551371bb026","url":"https://api.github.com/users/glaubius","html_url":"https://github.com/glaubius","followers_url":"https://api.github.com/users/glaubius/followers","following_url":"https://api.github.com/users/glaubius/following{/other_user}","gists_url":"https://api.github.com/users/glaubius/gists{/gist_id}","starred_url":"https://api.github.com/users/glaubius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glaubius/subscriptions","organizations_url":"https://api.github.com/users/glaubius/orgs","repos_url":"https://api.github.com/users/glaubius/repos","events_url":"https://api.github.com/users/glaubius/events{/privacy}","received_events_url":"https://api.github.com/users/glaubius/received_events","type":"User"},"id":"6394053","created_at":"2013-08-30T20:39:05Z","updated_at":"2013-08-30T20:39:05Z"},{"url":"https://api.github.com/gists/6463518","user":{"login":"janten","id":1794407,"avatar_url":"https://2.gravatar.com/avatar/44f5d723bf2ef2dac40327bfa9815989?d=https%3A%2F%2Fidenticons.github.com%2Fe177a89b246259b7b5a84411923e6881.png","gravatar_id":"44f5d723bf2ef2dac40327bfa9815989","url":"https://api.github.com/users/janten","html_url":"https://github.com/janten","followers_url":"https://api.github.com/users/janten/followers","following_url":"https://api.github.com/users/janten/following{/other_user}","gists_url":"https://api.github.com/users/janten/gists{/gist_id}","starred_url":"https://api.github.com/users/janten/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janten/subscriptions","organizations_url":"https://api.github.com/users/janten/orgs","repos_url":"https://api.github.com/users/janten/repos","events_url":"https://api.github.com/users/janten/events{/privacy}","received_events_url":"https://api.github.com/users/janten/received_events","type":"User"},"id":"6463518","created_at":"2013-09-06T13:04:58Z","updated_at":"2013-09-06T13:04:58Z"}],"history":[{"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"version":"3e0e8350f040f21811ceea13975086158ccae986","committed_at":"2010-06-25T06:52:37Z","change_status":{"total":3,"additions":2,"deletions":1},"url":"https://api.github.com/gists/149016/3e0e8350f040f21811ceea13975086158ccae986"},{"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"version":"a3ce60041fe20410fc55d141e77a25d26e1a562a","committed_at":"2009-07-17T11:37:43Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/149016/a3ce60041fe20410fc55d141e77a25d26e1a562a"}]}

https
GET
api.github.com
None
/gists/149016/comments/4565
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4887'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd7e4322b-0ea1-4673-8e35-b8c763037ecd'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1189'), ('server', 'GitHub.com'), ('last-modified', 'Thu, 29 Aug 2013 01:07:03 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"923dd32a449cce56dae93d3438b9451a"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:10 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/gists/149016/comments/4565","id":4565,"user":{"login":"cflewis","id":43708,"avatar_url":"https://2.gravatar.com/avatar/5f986018993d9f078927fe29ee912cf2?d=https%3A%2F%2Fidenticons.github.com%2F287915711d06ce6d90e2c18e1d89d3a6.png","gravatar_id":"5f986018993d9f078927fe29ee912cf2","url":"https://api.github.com/users/cflewis","html_url":"https://github.com/cflewis","followers_url":"https://api.github.com/users/cflewis/followers","following_url":"https://api.github.com/users/cflewis/following{/other_user}","gists_url":"https://api.github.com/users/cflewis/gists{/gist_id}","starred_url":"https://api.github.com/users/cflewis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cflewis/subscriptions","organizations_url":"https://api.github.com/users/cflewis/orgs","repos_url":"https://api.github.com/users/cflewis/repos","events_url":"https://api.github.com/users/cflewis/events{/privacy}","received_events_url":"https://api.github.com/users/cflewis/received_events","type":"User"},"created_at":"2010-06-24T21:50:00Z","updated_at":"2010-08-04T09:19:53Z","body":"Excellent! Thanks for this!\n\nI might consider adding '*.synctex.gz'. "}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/commits/be37b8a7f3a68631c32672dcd84d9eba27438ee6
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4886'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'deb2e31a-4791-4322-bb88-d697b2b31e72'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '952'), ('server', 'GitHub.com'), ('last-modified', 'Thu, 22 Nov 2012 19:06:01 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"b9013239d62338e81f6ec48bae78699e"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:11 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"sha":"be37b8a7f3a68631c32672dcd84d9eba27438ee6","url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/be37b8a7f3a68631c32672dcd84d9eba27438ee6","html_url":"https://github.com/jacquev6/PyGithub/commits/be37b8a7f3a68631c32672dcd84d9eba27438ee6","author":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2012-11-22T19:06:01Z"},"committer":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2012-11-22T19:06:01Z"},"tree":{"sha":"6f7c2d8c66d78863f7b91792deaead619799a1ce","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/6f7c2d8c66d78863f7b91792deaead619799a1ce"},"message":"Measure coverage simply in publish.sh","parents":[{"sha":"3026eb708fa0a6c669d3829e685663b8a161488b","url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/3026eb708fa0a6c669d3829e685663b8a161488b","html_url":"https://github.com/jacquev6/PyGithub/commits/3026eb708fa0a6c669d3829e685663b8a161488b"}]}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/trees/6f7c2d8c66d78863f7b91792deaead619799a1ce
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4885'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '43062d85-44e9-4b72-ba51-a94ccd029fd7'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '2784'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:12 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"sha":"6f7c2d8c66d78863f7b91792deaead619799a1ce","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/6f7c2d8c66d78863f7b91792deaead619799a1ce","tree":[{"mode":"100644","type":"blob","sha":"55cb5a84a96705c9b23dd6c9b5095aee9284b30a","path":".gitignore","size":83,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/55cb5a84a96705c9b23dd6c9b5095aee9284b30a"},{"mode":"100644","type":"blob","sha":"d1258c3e8ccd002e6ec45473a8fdedc70137c569","path":".travis.yml","size":345,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/d1258c3e8ccd002e6ec45473a8fdedc70137c569"},{"mode":"100644","type":"blob","sha":"94a9ed024d3859793618152ea559a168bbcbb5e2","path":"COPYING","size":35147,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/94a9ed024d3859793618152ea559a168bbcbb5e2"},{"mode":"100644","type":"blob","sha":"65c5ca88a67c30becee01c5a8816d964b03862f9","path":"COPYING.LESSER","size":7651,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/65c5ca88a67c30becee01c5a8816d964b03862f9"},{"mode":"100644","type":"blob","sha":"efbb5203c0bb41b4921999a301a5a35e06e9a8f2","path":"Contributing.md","size":969,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/efbb5203c0bb41b4921999a301a5a35e06e9a8f2"},{"mode":"100644","type":"blob","sha":"1344507c245dd59bc972682cb43163176226c597","path":"ReadMe.md","size":4666,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/1344507c245dd59bc972682cb43163176226c597"},{"mode":"040000","type":"tree","sha":"d612362a2609ca747a4d6526ae2cbdcd7df19600","path":"doc","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/d612362a2609ca747a4d6526ae2cbdcd7df19600"},{"mode":"040000","type":"tree","sha":"b19632adf7f22ba0561b5c2511cd61b904ede4ca","path":"github","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/b19632adf7f22ba0561b5c2511cd61b904ede4ca"},{"mode":"100755","type":"blob","sha":"f3adf2bddb82857f356e8b6a5ea1da8ea35a6c68","path":"publish.sh","size":942,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/f3adf2bddb82857f356e8b6a5ea1da8ea35a6c68"},{"mode":"100644","type":"blob","sha":"609f912230aec315ba1d3c745e472fbc6393eefa","path":"python25-requirements.txt","size":23,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/609f912230aec315ba1d3c745e472fbc6393eefa"},{"mode":"100644","type":"blob","sha":"9a23970d3adfeed83eec1d89fbe27062de0b1bfa","path":"python26-requirements.txt","size":10,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/9a23970d3adfeed83eec1d89fbe27062de0b1bfa"},{"mode":"100755","type":"blob","sha":"0d8eea784e5bce67efd2f25c6ece0cd573896065","path":"setup.py","size":2481,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/0d8eea784e5bce67efd2f25c6ece0cd573896065"}]}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/blobs/681fb61f1761743a02f5c790f1c762cbfe8cfad1
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4884'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'cc0f0761-fe8d-4ccc-bc23-3348ed8945d5'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '299'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"01162d231bc8dfd76e35f833ecebaa0e"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:14 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"sha":"681fb61f1761743a02f5c790f1c762cbfe8cfad1","size":71,"url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/681fb61f1761743a02f5c790f1c762cbfe8cfad1","content":"Ki5weWMKR2l0aHViQ3JlZGVudGlhbHMucHkKL2Rpc3QvCi9idWlsZC8KL01B\nTklGRVNUCi9QeUdpdGh1Yi5lZ2ctaW5mby8=\n","encoding":"base64"}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/ref/tags/v1.17.0
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4883'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'eb4e50d0-67c7-41f4-977e-fd091a501b16'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '282'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:15 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"ref":"refs/tags/v1.17.0","url":"https://api.github.com/repos/jacquev6/PyGithub/git/ref/tags/v1.17.0","object":{"sha":"a08db4387b1294359e283f2a5c2c79584e23450f","type":"tag","url":"https://api.github.com/repos/jacquev6/PyGithub/git/tags/a08db4387b1294359e283f2a5c2c79584e23450f"}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/188
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4882'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '8ca72976-9b88-4917-8fd7-1aa29db18369'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '5443'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:21 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/events","html_url":"https://github.com/jacquev6/PyGithub/issues/188","id":17736533,"number":188,"title":"Getting the status of GitHub","user":{"login":"ruxandraburtica","id":797922,"avatar_url":"https://2.gravatar.com/avatar/5703c5907fc67b679be40fd307b07733?d=https%3A%2F%2Fidenticons.github.com%2F470a720db37e19afad67c34e30ffcd85.png","gravatar_id":"5703c5907fc67b679be40fd307b07733","url":"https://api.github.com/users/ruxandraburtica","html_url":"https://github.com/ruxandraburtica","followers_url":"https://api.github.com/users/ruxandraburtica/followers","following_url":"https://api.github.com/users/ruxandraburtica/following{/other_user}","gists_url":"https://api.github.com/users/ruxandraburtica/gists{/gist_id}","starred_url":"https://api.github.com/users/ruxandraburtica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruxandraburtica/subscriptions","organizations_url":"https://api.github.com/users/ruxandraburtica/orgs","repos_url":"https://api.github.com/users/ruxandraburtica/repos","events_url":"https://api.github.com/users/ruxandraburtica/events{/privacy}","received_events_url":"https://api.github.com/users/ruxandraburtica/received_events","type":"User"},"labels":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Functionalities","name":"Functionalities","color":"e102d8"},{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Requested+by+user","name":"Requested by user","color":"e10c02"}],"state":"closed","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":0,"closed_issues":3,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T09:42:02Z","due_on":null},"comments":2,"created_at":"2013-08-07T08:57:49Z","updated_at":"2013-09-06T09:11:57Z","closed_at":"2013-09-06T09:11:57Z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"Maybe I haven't found it, but it would be very useful to have methods for checking the status of the GitHub API (https://status.github.com/api)","closed_by":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/comments/22686536
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4881'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '49eb6041-cb09-423d-b769-6a927988ef00'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1396'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:22 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/22686536","html_url":"https://github.com/jacquev6/PyGithub/issues/188#issuecomment-22686536","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","id":22686536,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-08-15T05:53:37Z","updated_at":"2013-08-15T05:53:37Z","body":"This seems to be a good idea! I will try to do it in the version after the next one."}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/188/events
{'Accept': 'application/vnd.github.sailor-v-preview+json', 'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4880'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '67185958-5c65-481a-b8fd-86d28ceea272'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '3480'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:23 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"id":60946408,"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events/60946408","actor":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"event":"assigned","commit_id":null,"created_at":"2013-08-15T05:55:32Z"},{"id":64178794,"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events/64178794","actor":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"event":"referenced","commit_id":"c819580ce872f251e8ec23deee95d9fb15ca19c9","created_at":"2013-09-06T09:05:10Z"},{"id":64179485,"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events/64179485","actor":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"event":"closed","commit_id":null,"created_at":"2013-09-06T09:11:57Z"}]

https
GET
api.github.com
None
/gitignore/templates/Python
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4879'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '8276ab6d-803c-4421-9a34-ecc99ff8ddec'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '367'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"7870725c2e426a0c93146449ebc6f176"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:26 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"name":"Python","source":"*.py[cod]\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n"}

https
GET
api.github.com
None
/teams/141487
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4878'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '7cb4a0fc-0363-4bfb-b09e-68f426c6e359'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '276'), ('server', 'GitHub.com'), ('last-modified', 'Sat, 20 Oct 2007 11:24:19 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:27 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"name":"Owners","id":141487,"slug":"owners","permission":"admin","url":"https://api.github.com/teams/141487","members_url":"https://api.github.com/teams/141487/members{/member}","repositories_url":"https://api.github.com/teams/141487/repos","members_count":1,"repos_count":1}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/labels/Bug
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4877'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'ebdad7b3-e224-4923-a10e-2db7e1e75530'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '97'), ('server', 'GitHub.com'), ('last-modified', 'Sat, 20 Oct 2007 11:24:19 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:28 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug","name":"Bug","color":"e10c02"}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/pulls/31
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4876'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '571ddd42-66bf-460c-a9a5-bb5f62ffe987'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '11337'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:29 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/31","id":1436215,"html_url":"https://github.com/jacquev6/PyGithub/pull/31","diff_url":"https://github.com/jacquev6/PyGithub/pull/31.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/31.patch","issue_url":"https://github.com/jacquev6/PyGithub/pull/31","number":31,"state":"closed","title":"Title edited by PyGithub","user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"body":"Body edited by PyGithub","created_at":"2012-05-27T09:25:36Z","updated_at":"2012-11-03T08:19:40Z","closed_at":"2012-05-27T10:29:07Z","merged_at":"2012-05-27T10:29:07Z","merge_commit_sha":"28ae6dd10ebccd5eaf8db8dacb5b699ee7f4a663","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":null,"commits_url":"https://github.com/jacquev6/PyGithub/pull/31/commits","review_comments_url":"https://github.com/jacquev6/PyGithub/pull/31/comments","review_comment_url":"/repos/jacquev6/PyGithub/pulls/comments/{number}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/31/comments","head":{"label":"BeaverSoftware:master","ref":"master","sha":"8a4f306d4b223682dd19410d4a9150636ebe4206","user":{"login":"BeaverSoftware","id":1424031,"avatar_url":"https://2.gravatar.com/avatar/d563e337cac2fdc644e2aaaad1e23266?d=https%3A%2F%2Fidenticons.github.com%2Fde8dec416975d0a85845b1b88385b9d5.png","gravatar_id":"d563e337cac2fdc644e2aaaad1e23266","url":"https://api.github.com/users/BeaverSoftware","html_url":"https://github.com/BeaverSoftware","followers_url":"https://api.github.com/users/BeaverSoftware/followers","following_url":"https://api.github.com/users/BeaverSoftware/following{/other_user}","gists_url":"https://api.github.com/users/BeaverSoftware/gists{/gist_id}","starred_url":"https://api.github.com/users/BeaverSoftware/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BeaverSoftware/subscriptions","organizations_url":"https://api.github.com/users/BeaverSoftware/orgs","repos_url":"https://api.github.com/users/BeaverSoftware/repos","events_url":"https://api.github.com/users/BeaverSoftware/events{/privacy}","received_events_url":"https://api.github.com/users/BeaverSoftware/received_events","type":"Organization"},"repo":null},"base":{"label":"jacquev6:topic/RewriteWithGeneratedCode","ref":"topic/RewriteWithGeneratedCode","sha":"ed866fc43833802ab553e5ff8581c81bb00dd433","user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"repo":{"id":3544490,"name":"PyGithub","full_name":"jacquev6/PyGithub","owner":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"private":false,"html_url":"https://github.com/jacquev6/PyGithub","description":"Python library implementing the full Github API v3","fork":false,"url":"https://api.github.com/repos/jacquev6/PyGithub","forks_url":"https://api.github.com/repos/jacquev6/PyGithub/forks","keys_url":"https://api.github.com/repos/jacquev6/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/jacquev6/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/jacquev6/PyGithub/teams","hooks_url":"https://api.github.com/repos/jacquev6/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/jacquev6/PyGithub/events","assignees_url":"https://api.github.com/repos/jacquev6/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/jacquev6/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/jacquev6/PyGithub/tags","blobs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/jacquev6/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/jacquev6/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/jacquev6/PyGithub/languages","stargazers_url":"https://api.github.com/repos/jacquev6/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/jacquev6/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/jacquev6/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/jacquev6/PyGithub/subscription","commits_url":"https://api.github.com/repos/jacquev6/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/jacquev6/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/jacquev6/PyGithub/merges","archive_url":"https://api.github.com/repos/jacquev6/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/jacquev6/PyGithub/downloads","issues_url":"https://api.github.com/repos/jacquev6/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/jacquev6/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/jacquev6/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/labels{/name}","created_at":"2012-02-25T12:53:47Z","updated_at":"2013-09-06T12:41:05Z","pushed_at":"2013-09-06T12:41:05Z","git_url":"git://github.com/jacquev6/PyGithub.git","ssh_url":"git@github.com:jacquev6/PyGithub.git","clone_url":"https://github.com/jacquev6/PyGithub.git","svn_url":"https://github.com/jacquev6/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":820,"watchers_count":256,"language":"Python","has_issues":true,"has_downloads":true,"has_wiki":true,"forks_count":76,"mirror_url":null,"open_issues_count":15,"forks":76,"open_issues":15,"watchers":256,"master_branch":"master","default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/31"},"html":{"href":"https://github.com/jacquev6/PyGithub/pull/31"},"issue":{"href":"https://api.github.com/repos/jacquev6/PyGithub/issues/31"},"comments":{"href":"https://api.github.com/repos/jacquev6/PyGithub/issues/31/comments"},"review_comments":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/31/comments"}},"merged":true,"mergeable":false,"mergeable_state":"dirty","merged_by":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"comments":1,"review_comments":1,"commits":3,"additions":511,"deletions":384,"changed_files":45}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/pulls/comments/1580134
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4875'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '677bae62-e9e4-4420-a6f7-5572ecd844c9'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '2269'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:31 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/comments/1580134","id":1580134,"body":"Review comment created for PyGithub","diff_hunk":"@@ -70,7 +70,7 @@ def __useAttributes( self, attributes ):\n \n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n {% for attribute in class.attributes|dictsort:\"name\" %}\n-        if \"{{ attribute.name }}\" in attributes and attributes[ \"{{ attribute.name }}\" ] is not None:\n+        if \"{{ attribute.name }}\" in attributes and attributes[ \"{{ attribute.name }}\" ] is not None: # pragma no branch","path":"codegen/templates/GithubObject.py","position":5,"original_position":5,"commit_id":"8a4f306d4b223682dd19410d4a9150636ebe4206","original_commit_id":"8a4f306d4b223682dd19410d4a9150636ebe4206","user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2012-09-11T20:06:32Z","updated_at":"2012-09-11T20:06:32Z","html_url":"https://github.com/jacquev6/PyGithub/pull/31#discussion_r1580134","pull_request_url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/31","_links":{"self":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/comments/1580134"},"html":{"href":"https://github.com/jacquev6/PyGithub/pull/31#discussion_r1580134"},"pull_request":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/31"}}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/pulls/31/files
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4874'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '2e2d4c57-e963-4381-985e-9c6ca34a5692'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '175951'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:32 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"sha":"fb4855905c4825612bdd2db42346833c203e77c8","filename":"codegen/templates/GithubObject.py","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/codegen/templates/GithubObject.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/codegen/templates/GithubObject.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/codegen/templates/GithubObject.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -70,7 +70,7 @@ def __useAttributes( self, attributes ):\n \n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n {% for attribute in class.attributes|dictsort:\"name\" %}\n-        if \"{{ attribute.name }}\" in attributes and attributes[ \"{{ attribute.name }}\" ] is not None:\n+        if \"{{ attribute.name }}\" in attributes and attributes[ \"{{ attribute.name }}\" ] is not None: # pragma no branch\n \n {% if attribute.type.cardinality == \"scalar\" %}\n {% if attribute.type.simple %}"},{"sha":"502f657077e67378a09cd923d8b7629a81469d81","filename":"src/github/AuthenticatedUser.py","status":"modified","additions":25,"deletions":25,"changes":50,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/AuthenticatedUser.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/AuthenticatedUser.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/AuthenticatedUser.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -568,78 +568,78 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"avatar_url\", \"bio\", \"blog\", \"collaborators\", \"company\", \"created_at\", \"disk_usage\", \"email\", \"followers\", \"following\", \"gravatar_id\", \"hireable\", \"html_url\", \"id\", \"location\", \"login\", \"name\", \"owned_private_repos\", \"plan\", \"private_gists\", \"public_gists\", \"public_repos\", \"total_private_repos\", \"type\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None:\n+        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"avatar_url\" ], str )\n             self.__avatar_url = attributes[ \"avatar_url\" ]\n-        if \"bio\" in attributes and attributes[ \"bio\" ] is not None:\n+        if \"bio\" in attributes and attributes[ \"bio\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"bio\" ], str )\n             self.__bio = attributes[ \"bio\" ]\n-        if \"blog\" in attributes and attributes[ \"blog\" ] is not None:\n+        if \"blog\" in attributes and attributes[ \"blog\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"blog\" ], str )\n             self.__blog = attributes[ \"blog\" ]\n-        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None:\n+        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"collaborators\" ], int )\n             self.__collaborators = attributes[ \"collaborators\" ]\n-        if \"company\" in attributes and attributes[ \"company\" ] is not None:\n+        if \"company\" in attributes and attributes[ \"company\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"company\" ], str )\n             self.__company = attributes[ \"company\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None:\n+        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"disk_usage\" ], int )\n             self.__disk_usage = attributes[ \"disk_usage\" ]\n-        if \"email\" in attributes and attributes[ \"email\" ] is not None:\n+        if \"email\" in attributes and attributes[ \"email\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"email\" ], str )\n             self.__email = attributes[ \"email\" ]\n-        if \"followers\" in attributes and attributes[ \"followers\" ] is not None:\n+        if \"followers\" in attributes and attributes[ \"followers\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"followers\" ], int )\n             self.__followers = attributes[ \"followers\" ]\n-        if \"following\" in attributes and attributes[ \"following\" ] is not None:\n+        if \"following\" in attributes and attributes[ \"following\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"following\" ], int )\n             self.__following = attributes[ \"following\" ]\n-        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None:\n+        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"gravatar_id\" ], str )\n             self.__gravatar_id = attributes[ \"gravatar_id\" ]\n-        if \"hireable\" in attributes and attributes[ \"hireable\" ] is not None:\n+        if \"hireable\" in attributes and attributes[ \"hireable\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"hireable\" ], bool )\n             self.__hireable = attributes[ \"hireable\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"location\" in attributes and attributes[ \"location\" ] is not None:\n+        if \"location\" in attributes and attributes[ \"location\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"location\" ], str )\n             self.__location = attributes[ \"location\" ]\n-        if \"login\" in attributes and attributes[ \"login\" ] is not None:\n+        if \"login\" in attributes and attributes[ \"login\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"login\" ], str )\n             self.__login = attributes[ \"login\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None:\n+        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"owned_private_repos\" ], int )\n             self.__owned_private_repos = attributes[ \"owned_private_repos\" ]\n-        if \"plan\" in attributes and attributes[ \"plan\" ] is not None:\n+        if \"plan\" in attributes and attributes[ \"plan\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"plan\" ], dict )\n             self.__plan = Plan.Plan( self.__requester, attributes[ \"plan\" ], completion = LazyCompletion )\n-        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None:\n+        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"private_gists\" ], int )\n             self.__private_gists = attributes[ \"private_gists\" ]\n-        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None:\n+        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_gists\" ], int )\n             self.__public_gists = attributes[ \"public_gists\" ]\n-        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None:\n+        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_repos\" ], int )\n             self.__public_repos = attributes[ \"public_repos\" ]\n-        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None:\n+        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"total_private_repos\" ], int )\n             self.__total_private_repos = attributes[ \"total_private_repos\" ]\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"type\" ], str )\n             self.__type = attributes[ \"type\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"2c2e7ad5c7d5f5f6bbb16bc4149cc2388b870d63","filename":"src/github/Authorization.py","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Authorization.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Authorization.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Authorization.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -117,21 +117,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"app\", \"created_at\", \"id\", \"note\", \"note_url\", \"scopes\", \"token\", \"updated_at\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"app\" in attributes and attributes[ \"app\" ] is not None:\n+        if \"app\" in attributes and attributes[ \"app\" ] is not None: # pragma no branch\n             self.__app = attributes[ \"app\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"note\" in attributes and attributes[ \"note\" ] is not None:\n+        if \"note\" in attributes and attributes[ \"note\" ] is not None: # pragma no branch\n             self.__note = attributes[ \"note\" ]\n-        if \"note_url\" in attributes and attributes[ \"note_url\" ] is not None:\n+        if \"note_url\" in attributes and attributes[ \"note_url\" ] is not None: # pragma no branch\n             self.__note_url = attributes[ \"note_url\" ]\n-        if \"scopes\" in attributes and attributes[ \"scopes\" ] is not None:\n+        if \"scopes\" in attributes and attributes[ \"scopes\" ] is not None: # pragma no branch\n             self.__scopes = attributes[ \"scopes\" ]\n-        if \"token\" in attributes and attributes[ \"token\" ] is not None:\n+        if \"token\" in attributes and attributes[ \"token\" ] is not None: # pragma no branch\n             self.__token = attributes[ \"token\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]"},{"sha":"96ae96478e61087c378e8f5caaf8064ba3b5d9ff","filename":"src/github/Branch.py","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Branch.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Branch.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Branch.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -28,9 +28,9 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"commit\", \"name\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"commit\" in attributes and attributes[ \"commit\" ] is not None:\n+        if \"commit\" in attributes and attributes[ \"commit\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"commit\" ], dict )\n             self.__commit = Commit.Commit( self.__requester, attributes[ \"commit\" ], completion = LazyCompletion )\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]"},{"sha":"bef139283f26710febfd03d3cce3a9193dbbde22","filename":"src/github/Commit.py","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Commit.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Commit.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Commit.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -120,33 +120,33 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"author\", \"commit\", \"committer\", \"files\", \"parents\", \"sha\", \"stats\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"author\" in attributes and attributes[ \"author\" ] is not None:\n+        if \"author\" in attributes and attributes[ \"author\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"author\" ], dict )\n             self.__author = NamedUser.NamedUser( self.__requester, attributes[ \"author\" ], completion = LazyCompletion )\n-        if \"commit\" in attributes and attributes[ \"commit\" ] is not None:\n+        if \"commit\" in attributes and attributes[ \"commit\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"commit\" ], dict )\n             self.__commit = GitCommit.GitCommit( self.__requester, attributes[ \"commit\" ], completion = LazyCompletion )\n-        if \"committer\" in attributes and attributes[ \"committer\" ] is not None:\n+        if \"committer\" in attributes and attributes[ \"committer\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"committer\" ], dict )\n             self.__committer = NamedUser.NamedUser( self.__requester, attributes[ \"committer\" ], completion = LazyCompletion )\n-        if \"files\" in attributes and attributes[ \"files\" ] is not None:\n+        if \"files\" in attributes and attributes[ \"files\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"files\" ], list ) and ( len( attributes[ \"files\" ] ) == 0 or isinstance( attributes[ \"files\" ][ 0 ], dict ) )\n             self.__files = [\n                 CommitFile.CommitFile( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"files\" ]\n             ]\n-        if \"parents\" in attributes and attributes[ \"parents\" ] is not None:\n+        if \"parents\" in attributes and attributes[ \"parents\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"parents\" ], list ) and ( len( attributes[ \"parents\" ] ) == 0 or isinstance( attributes[ \"parents\" ][ 0 ], dict ) )\n             self.__parents = [\n                 Commit( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"parents\" ]\n             ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"stats\" in attributes and attributes[ \"stats\" ] is not None:\n+        if \"stats\" in attributes and attributes[ \"stats\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"stats\" ], dict )\n             self.__stats = CommitStats.CommitStats( self.__requester, attributes[ \"stats\" ], completion = LazyCompletion )\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"6e95e0bac8d227daedbcff076a182a762f4e7229","filename":"src/github/CommitComment.py","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitComment.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitComment.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/CommitComment.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -121,36 +121,36 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"body\", \"commit_id\", \"created_at\", \"html_url\", \"id\", \"line\", \"path\", \"position\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"body\" ], str )\n             self.__body = attributes[ \"body\" ]\n-        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None:\n+        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"commit_id\" ], str )\n             self.__commit_id = attributes[ \"commit_id\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"line\" in attributes and attributes[ \"line\" ] is not None:\n+        if \"line\" in attributes and attributes[ \"line\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"line\" ], int )\n             self.__line = attributes[ \"line\" ]\n-        if \"path\" in attributes and attributes[ \"path\" ] is not None:\n+        if \"path\" in attributes and attributes[ \"path\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"path\" ], str )\n             self.__path = attributes[ \"path\" ]\n-        if \"position\" in attributes and attributes[ \"position\" ] is not None:\n+        if \"position\" in attributes and attributes[ \"position\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"position\" ], int )\n             self.__position = attributes[ \"position\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"updated_at\" ], str )\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"27185b984a57346b0ef4f591b08f9398b1d1cb83","filename":"src/github/CommitFile.py","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitFile.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitFile.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/CommitFile.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -62,21 +62,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"additions\", \"blob_url\", \"changes\", \"deletions\", \"filename\", \"patch\", \"raw_url\", \"sha\", \"status\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"additions\" in attributes and attributes[ \"additions\" ] is not None:\n+        if \"additions\" in attributes and attributes[ \"additions\" ] is not None: # pragma no branch\n             self.__additions = attributes[ \"additions\" ]\n-        if \"blob_url\" in attributes and attributes[ \"blob_url\" ] is not None:\n+        if \"blob_url\" in attributes and attributes[ \"blob_url\" ] is not None: # pragma no branch\n             self.__blob_url = attributes[ \"blob_url\" ]\n-        if \"changes\" in attributes and attributes[ \"changes\" ] is not None:\n+        if \"changes\" in attributes and attributes[ \"changes\" ] is not None: # pragma no branch\n             self.__changes = attributes[ \"changes\" ]\n-        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None:\n+        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None: # pragma no branch\n             self.__deletions = attributes[ \"deletions\" ]\n-        if \"filename\" in attributes and attributes[ \"filename\" ] is not None:\n+        if \"filename\" in attributes and attributes[ \"filename\" ] is not None: # pragma no branch\n             self.__filename = attributes[ \"filename\" ]\n-        if \"patch\" in attributes and attributes[ \"patch\" ] is not None:\n+        if \"patch\" in attributes and attributes[ \"patch\" ] is not None: # pragma no branch\n             self.__patch = attributes[ \"patch\" ]\n-        if \"raw_url\" in attributes and attributes[ \"raw_url\" ] is not None:\n+        if \"raw_url\" in attributes and attributes[ \"raw_url\" ] is not None: # pragma no branch\n             self.__raw_url = attributes[ \"raw_url\" ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             self.__sha = attributes[ \"sha\" ]\n-        if \"status\" in attributes and attributes[ \"status\" ] is not None:\n+        if \"status\" in attributes and attributes[ \"status\" ] is not None: # pragma no branch\n             self.__status = attributes[ \"status\" ]"},{"sha":"772d0eedaf7cf55d3e3e7c6ad040d17de3ec5f80","filename":"src/github/CommitStats.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitStats.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/CommitStats.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/CommitStats.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -32,12 +32,12 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"additions\", \"deletions\", \"total\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"additions\" in attributes and attributes[ \"additions\" ] is not None:\n+        if \"additions\" in attributes and attributes[ \"additions\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"additions\" ], int )\n             self.__additions = attributes[ \"additions\" ]\n-        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None:\n+        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"deletions\" ], int )\n             self.__deletions = attributes[ \"deletions\" ]\n-        if \"total\" in attributes and attributes[ \"total\" ] is not None:\n+        if \"total\" in attributes and attributes[ \"total\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"total\" ], int )\n             self.__total = attributes[ \"total\" ]"},{"sha":"28c49231bb6c27f102b9f5d42505764cdcb79089","filename":"src/github/Download.py","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Download.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Download.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Download.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -162,43 +162,43 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"accesskeyid\", \"acl\", \"bucket\", \"content_type\", \"created_at\", \"description\", \"download_count\", \"expirationdate\", \"html_url\", \"id\", \"mime_type\", \"name\", \"path\", \"policy\", \"prefix\", \"redirect\", \"s3_url\", \"signature\", \"size\", \"url\", \"x-amz-meta-content-disposition\" ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"accesskeyid\" in attributes and attributes[ \"accesskeyid\" ] is not None:\n+        if \"accesskeyid\" in attributes and attributes[ \"accesskeyid\" ] is not None: # pragma no branch\n             self.__accesskeyid = attributes[ \"accesskeyid\" ]\n-        if \"acl\" in attributes and attributes[ \"acl\" ] is not None:\n+        if \"acl\" in attributes and attributes[ \"acl\" ] is not None: # pragma no branch\n             self.__acl = attributes[ \"acl\" ]\n-        if \"bucket\" in attributes and attributes[ \"bucket\" ] is not None:\n+        if \"bucket\" in attributes and attributes[ \"bucket\" ] is not None: # pragma no branch\n             self.__bucket = attributes[ \"bucket\" ]\n-        if \"content_type\" in attributes and attributes[ \"content_type\" ] is not None:\n+        if \"content_type\" in attributes and attributes[ \"content_type\" ] is not None: # pragma no branch\n             self.__content_type = attributes[ \"content_type\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"description\" in attributes and attributes[ \"description\" ] is not None:\n+        if \"description\" in attributes and attributes[ \"description\" ] is not None: # pragma no branch\n             self.__description = attributes[ \"description\" ]\n-        if \"download_count\" in attributes and attributes[ \"download_count\" ] is not None:\n+        if \"download_count\" in attributes and attributes[ \"download_count\" ] is not None: # pragma no branch\n             self.__download_count = attributes[ \"download_count\" ]\n-        if \"expirationdate\" in attributes and attributes[ \"expirationdate\" ] is not None:\n+        if \"expirationdate\" in attributes and attributes[ \"expirationdate\" ] is not None: # pragma no branch\n             self.__expirationdate = attributes[ \"expirationdate\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"mime_type\" in attributes and attributes[ \"mime_type\" ] is not None:\n+        if \"mime_type\" in attributes and attributes[ \"mime_type\" ] is not None: # pragma no branch\n             self.__mime_type = attributes[ \"mime_type\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             self.__name = attributes[ \"name\" ]\n-        if \"path\" in attributes and attributes[ \"path\" ] is not None:\n+        if \"path\" in attributes and attributes[ \"path\" ] is not None: # pragma no branch\n             self.__path = attributes[ \"path\" ]\n-        if \"policy\" in attributes and attributes[ \"policy\" ] is not None:\n+        if \"policy\" in attributes and attributes[ \"policy\" ] is not None: # pragma no branch\n             self.__policy = attributes[ \"policy\" ]\n-        if \"prefix\" in attributes and attributes[ \"prefix\" ] is not None:\n+        if \"prefix\" in attributes and attributes[ \"prefix\" ] is not None: # pragma no branch\n             self.__prefix = attributes[ \"prefix\" ]\n-        if \"redirect\" in attributes and attributes[ \"redirect\" ] is not None:\n+        if \"redirect\" in attributes and attributes[ \"redirect\" ] is not None: # pragma no branch\n             self.__redirect = attributes[ \"redirect\" ]\n-        if \"s3_url\" in attributes and attributes[ \"s3_url\" ] is not None:\n+        if \"s3_url\" in attributes and attributes[ \"s3_url\" ] is not None: # pragma no branch\n             self.__s3_url = attributes[ \"s3_url\" ]\n-        if \"signature\" in attributes and attributes[ \"signature\" ] is not None:\n+        if \"signature\" in attributes and attributes[ \"signature\" ] is not None: # pragma no branch\n             self.__signature = attributes[ \"signature\" ]\n-        if \"size\" in attributes and attributes[ \"size\" ] is not None:\n+        if \"size\" in attributes and attributes[ \"size\" ] is not None: # pragma no branch\n             self.__size = attributes[ \"size\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]"},{"sha":"f04618e50b93c36d1b454fd3c04eda2304c3f953","filename":"src/github/Event.py","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Event.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Event.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Event.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -60,22 +60,22 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"actor\", \"created_at\", \"id\", \"org\", \"payload\", \"public\", \"repo\", \"type\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"actor\" in attributes and attributes[ \"actor\" ] is not None:\n+        if \"actor\" in attributes and attributes[ \"actor\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"actor\" ], dict )\n             self.__actor = NamedUser.NamedUser( self.__requester, attributes[ \"actor\" ], completion = LazyCompletion )\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"org\" in attributes and attributes[ \"org\" ] is not None:\n+        if \"org\" in attributes and attributes[ \"org\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"org\" ], dict )\n             self.__org = Organization.Organization( self.__requester, attributes[ \"org\" ], completion = LazyCompletion )\n-        if \"payload\" in attributes and attributes[ \"payload\" ] is not None:\n+        if \"payload\" in attributes and attributes[ \"payload\" ] is not None: # pragma no branch\n             self.__payload = attributes[ \"payload\" ]\n-        if \"public\" in attributes and attributes[ \"public\" ] is not None:\n+        if \"public\" in attributes and attributes[ \"public\" ] is not None: # pragma no branch\n             self.__public = attributes[ \"public\" ]\n-        if \"repo\" in attributes and attributes[ \"repo\" ] is not None:\n+        if \"repo\" in attributes and attributes[ \"repo\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"repo\" ], dict )\n             self.__repo = Repository.Repository( self.__requester, attributes[ \"repo\" ], completion = LazyCompletion )\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             self.__type = attributes[ \"type\" ]"},{"sha":"56bd080c75f4063321baab79027bddbf48a23063","filename":"src/github/Gist.py","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Gist.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Gist.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Gist.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -220,53 +220,53 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"comments\", \"created_at\", \"description\", \"files\", \"fork_of\", \"forks\", \"git_pull_url\", \"git_push_url\", \"history\", \"html_url\", \"id\", \"public\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"comments\" in attributes and attributes[ \"comments\" ] is not None:\n+        if \"comments\" in attributes and attributes[ \"comments\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"comments\" ], int )\n             self.__comments = attributes[ \"comments\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"description\" in attributes and attributes[ \"description\" ] is not None:\n+        if \"description\" in attributes and attributes[ \"description\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"description\" ], str )\n             self.__description = attributes[ \"description\" ]\n-        if \"files\" in attributes and attributes[ \"files\" ] is not None:\n+        if \"files\" in attributes and attributes[ \"files\" ] is not None: # pragma no branch\n             self.__files = attributes[ \"files\" ]\n-        if \"fork_of\" in attributes and attributes[ \"fork_of\" ] is not None:\n+        if \"fork_of\" in attributes and attributes[ \"fork_of\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"fork_of\" ], dict )\n             self.__fork_of = Gist( self.__requester, attributes[ \"fork_of\" ], completion = LazyCompletion )\n-        if \"forks\" in attributes and attributes[ \"forks\" ] is not None:\n+        if \"forks\" in attributes and attributes[ \"forks\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"forks\" ], list ) and ( len( attributes[ \"forks\" ] ) == 0 or isinstance( attributes[ \"forks\" ][ 0 ], dict ) )\n             self.__forks = [\n                 Gist( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"forks\" ]\n             ]\n-        if \"git_pull_url\" in attributes and attributes[ \"git_pull_url\" ] is not None:\n+        if \"git_pull_url\" in attributes and attributes[ \"git_pull_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"git_pull_url\" ], str )\n             self.__git_pull_url = attributes[ \"git_pull_url\" ]\n-        if \"git_push_url\" in attributes and attributes[ \"git_push_url\" ] is not None:\n+        if \"git_push_url\" in attributes and attributes[ \"git_push_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"git_push_url\" ], str )\n             self.__git_push_url = attributes[ \"git_push_url\" ]\n-        if \"history\" in attributes and attributes[ \"history\" ] is not None:\n+        if \"history\" in attributes and attributes[ \"history\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"history\" ], list ) and ( len( attributes[ \"history\" ] ) == 0 or isinstance( attributes[ \"history\" ][ 0 ], dict ) )\n             self.__history = [\n                 GistHistoryState.GistHistoryState( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"history\" ]\n             ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], str )\n             self.__id = attributes[ \"id\" ]\n-        if \"public\" in attributes and attributes[ \"public\" ] is not None:\n+        if \"public\" in attributes and attributes[ \"public\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public\" ], bool )\n             self.__public = attributes[ \"public\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"updated_at\" ], str )\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"a595ca288f230fbe30416bc854cc8df51682fb65","filename":"src/github/GistComment.py","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GistComment.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GistComment.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GistComment.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -68,16 +68,16 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"body\", \"created_at\", \"id\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             self.__body = attributes[ \"body\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"d325a2b14180a808327beb752c8365467ff4872f","filename":"src/github/GistHistoryState.py","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GistHistoryState.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GistHistoryState.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GistHistoryState.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -44,18 +44,18 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"change_status\", \"committed_at\", \"url\", \"user\", \"version\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"change_status\" in attributes and attributes[ \"change_status\" ] is not None:\n+        if \"change_status\" in attributes and attributes[ \"change_status\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"change_status\" ], dict )\n             self.__change_status = CommitStats.CommitStats( self.__requester, attributes[ \"change_status\" ], completion = LazyCompletion )\n-        if \"committed_at\" in attributes and attributes[ \"committed_at\" ] is not None:\n+        if \"committed_at\" in attributes and attributes[ \"committed_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"committed_at\" ], str )\n             self.__committed_at = attributes[ \"committed_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )\n-        if \"version\" in attributes and attributes[ \"version\" ] is not None:\n+        if \"version\" in attributes and attributes[ \"version\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"version\" ], str )\n             self.__version = attributes[ \"version\" ]"},{"sha":"2c710f56cfbe950099e74565680aee6ef2a20402","filename":"src/github/GitAuthor.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitAuthor.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitAuthor.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitAuthor.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -32,12 +32,12 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"date\", \"email\", \"name\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"date\" in attributes and attributes[ \"date\" ] is not None:\n+        if \"date\" in attributes and attributes[ \"date\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"date\" ], str )\n             self.__date = attributes[ \"date\" ]\n-        if \"email\" in attributes and attributes[ \"email\" ] is not None:\n+        if \"email\" in attributes and attributes[ \"email\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"email\" ], str )\n             self.__email = attributes[ \"email\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]"},{"sha":"4defbde8b71269490ca951e836b5b1e1c540cb64","filename":"src/github/GitBlob.py","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitBlob.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitBlob.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitBlob.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -42,18 +42,18 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"content\", \"encoding\", \"sha\", \"size\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"content\" in attributes and attributes[ \"content\" ] is not None:\n+        if \"content\" in attributes and attributes[ \"content\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"content\" ], str )\n             self.__content = attributes[ \"content\" ]\n-        if \"encoding\" in attributes and attributes[ \"encoding\" ] is not None:\n+        if \"encoding\" in attributes and attributes[ \"encoding\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"encoding\" ], str )\n             self.__encoding = attributes[ \"encoding\" ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"size\" in attributes and attributes[ \"size\" ] is not None:\n+        if \"size\" in attributes and attributes[ \"size\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"size\" ], int )\n             self.__size = attributes[ \"size\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"13382cd7ac3c062fdb71e0873b223dbdd18f244e","filename":"src/github/GitCommit.py","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitCommit.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitCommit.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitCommit.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -55,27 +55,27 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"author\", \"committer\", \"message\", \"parents\", \"sha\", \"tree\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"author\" in attributes and attributes[ \"author\" ] is not None:\n+        if \"author\" in attributes and attributes[ \"author\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"author\" ], dict )\n             self.__author = GitAuthor.GitAuthor( self.__requester, attributes[ \"author\" ], completion = LazyCompletion )\n-        if \"committer\" in attributes and attributes[ \"committer\" ] is not None:\n+        if \"committer\" in attributes and attributes[ \"committer\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"committer\" ], dict )\n             self.__committer = GitAuthor.GitAuthor( self.__requester, attributes[ \"committer\" ], completion = LazyCompletion )\n-        if \"message\" in attributes and attributes[ \"message\" ] is not None:\n+        if \"message\" in attributes and attributes[ \"message\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"message\" ], str )\n             self.__message = attributes[ \"message\" ]\n-        if \"parents\" in attributes and attributes[ \"parents\" ] is not None:\n+        if \"parents\" in attributes and attributes[ \"parents\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"parents\" ], list ) and ( len( attributes[ \"parents\" ] ) == 0 or isinstance( attributes[ \"parents\" ][ 0 ], dict ) )\n             self.__parents = [\n                 GitCommit( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"parents\" ]\n             ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"tree\" in attributes and attributes[ \"tree\" ] is not None:\n+        if \"tree\" in attributes and attributes[ \"tree\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"tree\" ], dict )\n             self.__tree = GitTree.GitTree( self.__requester, attributes[ \"tree\" ], completion = LazyCompletion )\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"05e3067c1014ce22ced1faca83a74fa9215fd97e","filename":"src/github/GitObject.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitObject.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitObject.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitObject.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -32,12 +32,12 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"sha\", \"type\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"type\" ], str )\n             self.__type = attributes[ \"type\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"bfc8d91335cf0f81694a81ce534d79988f1bb0fe","filename":"src/github/GitRef.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitRef.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitRef.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitRef.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -55,12 +55,12 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"object\", \"ref\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"object\" in attributes and attributes[ \"object\" ] is not None:\n+        if \"object\" in attributes and attributes[ \"object\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"object\" ], dict )\n             self.__object = GitObject.GitObject( self.__requester, attributes[ \"object\" ], completion = LazyCompletion )\n-        if \"ref\" in attributes and attributes[ \"ref\" ] is not None:\n+        if \"ref\" in attributes and attributes[ \"ref\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"ref\" ], str )\n             self.__ref = attributes[ \"ref\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"532d3a056c2490883f826da7369067a24d001055","filename":"src/github/GitTag.py","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTag.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTag.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitTag.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -49,21 +49,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"message\", \"object\", \"sha\", \"tag\", \"tagger\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"message\" in attributes and attributes[ \"message\" ] is not None:\n+        if \"message\" in attributes and attributes[ \"message\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"message\" ], str )\n             self.__message = attributes[ \"message\" ]\n-        if \"object\" in attributes and attributes[ \"object\" ] is not None:\n+        if \"object\" in attributes and attributes[ \"object\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"object\" ], dict )\n             self.__object = GitObject.GitObject( self.__requester, attributes[ \"object\" ], completion = LazyCompletion )\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"tag\" in attributes and attributes[ \"tag\" ] is not None:\n+        if \"tag\" in attributes and attributes[ \"tag\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"tag\" ], str )\n             self.__tag = attributes[ \"tag\" ]\n-        if \"tagger\" in attributes and attributes[ \"tagger\" ] is not None:\n+        if \"tagger\" in attributes and attributes[ \"tagger\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"tagger\" ], dict )\n             self.__tagger = GitAuthor.GitAuthor( self.__requester, attributes[ \"tagger\" ], completion = LazyCompletion )\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"321f54fc52bcb0ac7843ecf9de53c091e2ad942c","filename":"src/github/GitTree.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTree.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTree.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitTree.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -33,15 +33,15 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"sha\", \"tree\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"tree\" in attributes and attributes[ \"tree\" ] is not None:\n+        if \"tree\" in attributes and attributes[ \"tree\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"tree\" ], list ) and ( len( attributes[ \"tree\" ] ) == 0 or isinstance( attributes[ \"tree\" ][ 0 ], dict ) )\n             self.__tree = [\n                 GitTreeElement.GitTreeElement( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"tree\" ]\n             ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"97ff07009a4af0d1bacc2c404dbbbff58700b359","filename":"src/github/GitTreeElement.py","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTreeElement.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/GitTreeElement.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/GitTreeElement.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -47,21 +47,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"mode\", \"path\", \"sha\", \"size\", \"type\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"mode\" in attributes and attributes[ \"mode\" ] is not None:\n+        if \"mode\" in attributes and attributes[ \"mode\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"mode\" ], str )\n             self.__mode = attributes[ \"mode\" ]\n-        if \"path\" in attributes and attributes[ \"path\" ] is not None:\n+        if \"path\" in attributes and attributes[ \"path\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"path\" ], str )\n             self.__path = attributes[ \"path\" ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"sha\" ], str )\n             self.__sha = attributes[ \"sha\" ]\n-        if \"size\" in attributes and attributes[ \"size\" ] is not None:\n+        if \"size\" in attributes and attributes[ \"size\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"size\" ], int )\n             self.__size = attributes[ \"size\" ]\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"type\" ], str )\n             self.__type = attributes[ \"type\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"9ac71aa29d8287d57b4d2109754f9da1b0a13fb7","filename":"src/github/Hook.py","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Hook.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Hook.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Hook.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -99,21 +99,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"active\", \"config\", \"created_at\", \"events\", \"id\", \"last_response\", \"name\", \"updated_at\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"active\" in attributes and attributes[ \"active\" ] is not None:\n+        if \"active\" in attributes and attributes[ \"active\" ] is not None: # pragma no branch\n             self.__active = attributes[ \"active\" ]\n-        if \"config\" in attributes and attributes[ \"config\" ] is not None:\n+        if \"config\" in attributes and attributes[ \"config\" ] is not None: # pragma no branch\n             self.__config = attributes[ \"config\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"events\" in attributes and attributes[ \"events\" ] is not None:\n+        if \"events\" in attributes and attributes[ \"events\" ] is not None: # pragma no branch\n             self.__events = attributes[ \"events\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"last_response\" in attributes and attributes[ \"last_response\" ] is not None:\n+        if \"last_response\" in attributes and attributes[ \"last_response\" ] is not None: # pragma no branch\n             self.__last_response = attributes[ \"last_response\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             self.__name = attributes[ \"name\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]"},{"sha":"8c10440882b7a8a0ce52adacff48066cce006a31","filename":"src/github/Issue.py","status":"modified","additions":32,"deletions":21,"changes":53,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Issue.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Issue.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Issue.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -110,7 +110,7 @@ def user( self ):\n         return self.__user\n \n     def add_to_labels( self, *labels ):\n-        post_parameters = labels\n+        post_parameters = [ label.name for label in labels ]\n         status, headers, data = self.__requester.request(\n             \"POST\",\n             str( self.url ) + \"/labels\",\n@@ -131,7 +131,12 @@ def create_comment( self, body ):\n         return IssueComment.IssueComment( self.__requester, data, completion = NoCompletion )\n \n     def delete_labels( self ):\n-        pass\n+        status, headers, data = self.__requester.request(\n+            \"DELETE\",\n+            str( self.url ) + \"/labels\",\n+            None,\n+            None\n+        )\n \n     def edit( self, title = DefaultValueForOptionalParameters, body = DefaultValueForOptionalParameters, assignee = DefaultValueForOptionalParameters, state = DefaultValueForOptionalParameters, milestone = DefaultValueForOptionalParameters, labels = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -216,7 +221,13 @@ def remove_from_labels( self, label ):\n         )\n \n     def set_labels( self, *labels ):\n-        pass\n+        post_parameters = [ label.name for label in labels ]\n+        status, headers, data = self.__requester.request(\n+            \"PUT\",\n+            str( self.url ) + \"/labels\",\n+            None,\n+            post_parameters\n+        )\n \n     def __initAttributes( self ):\n         self.__assignee = None\n@@ -257,59 +268,59 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"assignee\", \"body\", \"closed_at\", \"closed_by\", \"comments\", \"created_at\", \"html_url\", \"id\", \"labels\", \"milestone\", \"number\", \"pull_request\", \"repository\", \"state\", \"title\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"assignee\" in attributes and attributes[ \"assignee\" ] is not None:\n+        if \"assignee\" in attributes and attributes[ \"assignee\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"assignee\" ], dict )\n             self.__assignee = NamedUser.NamedUser( self.__requester, attributes[ \"assignee\" ], completion = LazyCompletion )\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"body\" ], str )\n             self.__body = attributes[ \"body\" ]\n-        if \"closed_at\" in attributes and attributes[ \"closed_at\" ] is not None:\n+        if \"closed_at\" in attributes and attributes[ \"closed_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"closed_at\" ], str )\n             self.__closed_at = attributes[ \"closed_at\" ]\n-        if \"closed_by\" in attributes and attributes[ \"closed_by\" ] is not None:\n+        if \"closed_by\" in attributes and attributes[ \"closed_by\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"closed_by\" ], dict )\n             self.__closed_by = NamedUser.NamedUser( self.__requester, attributes[ \"closed_by\" ], completion = LazyCompletion )\n-        if \"comments\" in attributes and attributes[ \"comments\" ] is not None:\n+        if \"comments\" in attributes and attributes[ \"comments\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"comments\" ], int )\n             self.__comments = attributes[ \"comments\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"labels\" in attributes and attributes[ \"labels\" ] is not None:\n+        if \"labels\" in attributes and attributes[ \"labels\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"labels\" ], list ) and ( len( attributes[ \"labels\" ] ) == 0 or isinstance( attributes[ \"labels\" ][ 0 ], dict ) )\n             self.__labels = [\n                 Label.Label( self.__requester, element, completion = LazyCompletion )\n                 for element in attributes[ \"labels\" ]\n             ]\n-        if \"milestone\" in attributes and attributes[ \"milestone\" ] is not None:\n+        if \"milestone\" in attributes and attributes[ \"milestone\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"milestone\" ], dict )\n             self.__milestone = Milestone.Milestone( self.__requester, attributes[ \"milestone\" ], completion = LazyCompletion )\n-        if \"number\" in attributes and attributes[ \"number\" ] is not None:\n+        if \"number\" in attributes and attributes[ \"number\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"number\" ], int )\n             self.__number = attributes[ \"number\" ]\n-        if \"pull_request\" in attributes and attributes[ \"pull_request\" ] is not None:\n+        if \"pull_request\" in attributes and attributes[ \"pull_request\" ] is not None: # pragma no branch\n             self.__pull_request = attributes[ \"pull_request\" ]\n-        if \"repository\" in attributes and attributes[ \"repository\" ] is not None:\n+        if \"repository\" in attributes and attributes[ \"repository\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"repository\" ], dict )\n             self.__repository = Repository.Repository( self.__requester, attributes[ \"repository\" ], completion = LazyCompletion )\n-        if \"state\" in attributes and attributes[ \"state\" ] is not None:\n+        if \"state\" in attributes and attributes[ \"state\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"state\" ], str )\n             self.__state = attributes[ \"state\" ]\n-        if \"title\" in attributes and attributes[ \"title\" ] is not None:\n+        if \"title\" in attributes and attributes[ \"title\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"title\" ], str )\n             self.__title = attributes[ \"title\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"updated_at\" ], str )\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"5ed8d8d10b46e6427503e050fdfad6ba22837e25","filename":"src/github/IssueComment.py","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/IssueComment.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/IssueComment.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/IssueComment.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -68,16 +68,16 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"body\", \"created_at\", \"id\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             self.__body = attributes[ \"body\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"a276fe9eaea713a8599710636ead83d77023b99f","filename":"src/github/IssueEvent.py","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/IssueEvent.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/IssueEvent.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/IssueEvent.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -78,24 +78,24 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"actor\", \"commit_id\", \"created_at\", \"event\", \"id\", \"issue\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"actor\" in attributes and attributes[ \"actor\" ] is not None:\n+        if \"actor\" in attributes and attributes[ \"actor\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"actor\" ], dict )\n             self.__actor = NamedUser.NamedUser( self.__requester, attributes[ \"actor\" ], completion = LazyCompletion )\n-        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None:\n+        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"commit_id\" ], str )\n             self.__commit_id = attributes[ \"commit_id\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"event\" in attributes and attributes[ \"event\" ] is not None:\n+        if \"event\" in attributes and attributes[ \"event\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"event\" ], str )\n             self.__event = attributes[ \"event\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"issue\" in attributes and attributes[ \"issue\" ] is not None:\n+        if \"issue\" in attributes and attributes[ \"issue\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"issue\" ], dict )\n             self.__issue = Issue.Issue( self.__requester, attributes[ \"issue\" ], completion = LazyCompletion )\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"1f11c4d96625bb675a5c9ce84c813caf4745ff67","filename":"src/github/Label.py","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Label.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Label.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Label.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -1,6 +1,8 @@\n # WARNING: this file is generated automaticaly.\n # Do not modify it manually, your work would be lost.\n \n+import urllib\n+\n import PaginatedList\n from GithubObject import *\n \n@@ -43,6 +45,11 @@ def edit( self, name, color ):\n         )\n         self.__useAttributes( data )\n \n+    # @todo Remove '_identity' from the normalized json description\n+    @property\n+    def _identity( self ):\n+        return urllib.quote( self.name )\n+\n     def __initAttributes( self ):\n         self.__color = None\n         self.__name = None\n@@ -53,9 +60,9 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"color\", \"name\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"color\" in attributes and attributes[ \"color\" ] is not None:\n+        if \"color\" in attributes and attributes[ \"color\" ] is not None: # pragma no branch\n             self.__color = attributes[ \"color\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             self.__name = attributes[ \"name\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]"},{"sha":"ffbb51b8941c5bdd34bbc539825666e1155b0699","filename":"src/github/Milestone.py","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Milestone.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Milestone.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Milestone.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -114,36 +114,36 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"closed_issues\", \"created_at\", \"creator\", \"description\", \"due_on\", \"id\", \"number\", \"open_issues\", \"state\", \"title\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"closed_issues\" in attributes and attributes[ \"closed_issues\" ] is not None:\n+        if \"closed_issues\" in attributes and attributes[ \"closed_issues\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"closed_issues\" ], int )\n             self.__closed_issues = attributes[ \"closed_issues\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"creator\" in attributes and attributes[ \"creator\" ] is not None:\n+        if \"creator\" in attributes and attributes[ \"creator\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"creator\" ], dict )\n             self.__creator = NamedUser.NamedUser( self.__requester, attributes[ \"creator\" ], completion = LazyCompletion )\n-        if \"description\" in attributes and attributes[ \"description\" ] is not None:\n+        if \"description\" in attributes and attributes[ \"description\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"description\" ], str )\n             self.__description = attributes[ \"description\" ]\n-        if \"due_on\" in attributes and attributes[ \"due_on\" ] is not None:\n+        if \"due_on\" in attributes and attributes[ \"due_on\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"due_on\" ], str )\n             self.__due_on = attributes[ \"due_on\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"number\" in attributes and attributes[ \"number\" ] is not None:\n+        if \"number\" in attributes and attributes[ \"number\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"number\" ], int )\n             self.__number = attributes[ \"number\" ]\n-        if \"open_issues\" in attributes and attributes[ \"open_issues\" ] is not None:\n+        if \"open_issues\" in attributes and attributes[ \"open_issues\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"open_issues\" ], int )\n             self.__open_issues = attributes[ \"open_issues\" ]\n-        if \"state\" in attributes and attributes[ \"state\" ] is not None:\n+        if \"state\" in attributes and attributes[ \"state\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"state\" ], str )\n             self.__state = attributes[ \"state\" ]\n-        if \"title\" in attributes and attributes[ \"title\" ] is not None:\n+        if \"title\" in attributes and attributes[ \"title\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"title\" ], str )\n             self.__title = attributes[ \"title\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"61400ed17d9985d2de72dbf8b489de903dbe494e","filename":"src/github/NamedUser.py","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/NamedUser.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/NamedUser.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/NamedUser.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -365,81 +365,81 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"avatar_url\", \"bio\", \"blog\", \"collaborators\", \"company\", \"contributions\", \"created_at\", \"disk_usage\", \"email\", \"followers\", \"following\", \"gravatar_id\", \"hireable\", \"html_url\", \"id\", \"location\", \"login\", \"name\", \"owned_private_repos\", \"plan\", \"private_gists\", \"public_gists\", \"public_repos\", \"total_private_repos\", \"type\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None:\n+        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"avatar_url\" ], str )\n             self.__avatar_url = attributes[ \"avatar_url\" ]\n-        if \"bio\" in attributes and attributes[ \"bio\" ] is not None:\n+        if \"bio\" in attributes and attributes[ \"bio\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"bio\" ], str )\n             self.__bio = attributes[ \"bio\" ]\n-        if \"blog\" in attributes and attributes[ \"blog\" ] is not None:\n+        if \"blog\" in attributes and attributes[ \"blog\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"blog\" ], str )\n             self.__blog = attributes[ \"blog\" ]\n-        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None:\n+        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"collaborators\" ], int )\n             self.__collaborators = attributes[ \"collaborators\" ]\n-        if \"company\" in attributes and attributes[ \"company\" ] is not None:\n+        if \"company\" in attributes and attributes[ \"company\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"company\" ], str )\n             self.__company = attributes[ \"company\" ]\n-        if \"contributions\" in attributes and attributes[ \"contributions\" ] is not None:\n+        if \"contributions\" in attributes and attributes[ \"contributions\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"contributions\" ], int )\n             self.__contributions = attributes[ \"contributions\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None:\n+        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"disk_usage\" ], int )\n             self.__disk_usage = attributes[ \"disk_usage\" ]\n-        if \"email\" in attributes and attributes[ \"email\" ] is not None:\n+        if \"email\" in attributes and attributes[ \"email\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"email\" ], str )\n             self.__email = attributes[ \"email\" ]\n-        if \"followers\" in attributes and attributes[ \"followers\" ] is not None:\n+        if \"followers\" in attributes and attributes[ \"followers\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"followers\" ], int )\n             self.__followers = attributes[ \"followers\" ]\n-        if \"following\" in attributes and attributes[ \"following\" ] is not None:\n+        if \"following\" in attributes and attributes[ \"following\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"following\" ], int )\n             self.__following = attributes[ \"following\" ]\n-        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None:\n+        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"gravatar_id\" ], str )\n             self.__gravatar_id = attributes[ \"gravatar_id\" ]\n-        if \"hireable\" in attributes and attributes[ \"hireable\" ] is not None:\n+        if \"hireable\" in attributes and attributes[ \"hireable\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"hireable\" ], bool )\n             self.__hireable = attributes[ \"hireable\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"location\" in attributes and attributes[ \"location\" ] is not None:\n+        if \"location\" in attributes and attributes[ \"location\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"location\" ], str )\n             self.__location = attributes[ \"location\" ]\n-        if \"login\" in attributes and attributes[ \"login\" ] is not None:\n+        if \"login\" in attributes and attributes[ \"login\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"login\" ], str )\n             self.__login = attributes[ \"login\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None:\n+        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"owned_private_repos\" ], int )\n             self.__owned_private_repos = attributes[ \"owned_private_repos\" ]\n-        if \"plan\" in attributes and attributes[ \"plan\" ] is not None:\n+        if \"plan\" in attributes and attributes[ \"plan\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"plan\" ], dict )\n             self.__plan = Plan.Plan( self.__requester, attributes[ \"plan\" ], completion = LazyCompletion )\n-        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None:\n+        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"private_gists\" ], int )\n             self.__private_gists = attributes[ \"private_gists\" ]\n-        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None:\n+        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_gists\" ], int )\n             self.__public_gists = attributes[ \"public_gists\" ]\n-        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None:\n+        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_repos\" ], int )\n             self.__public_repos = attributes[ \"public_repos\" ]\n-        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None:\n+        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"total_private_repos\" ], int )\n             self.__total_private_repos = attributes[ \"total_private_repos\" ]\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"type\" ], str )\n             self.__type = attributes[ \"type\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"78ac913ccb12dc01a5064095456078444925ae9e","filename":"src/github/Organization.py","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Organization.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Organization.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Organization.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -390,75 +390,75 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"avatar_url\", \"billing_email\", \"blog\", \"collaborators\", \"company\", \"created_at\", \"disk_usage\", \"email\", \"followers\", \"following\", \"gravatar_id\", \"html_url\", \"id\", \"location\", \"login\", \"name\", \"owned_private_repos\", \"plan\", \"private_gists\", \"public_gists\", \"public_repos\", \"total_private_repos\", \"type\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None:\n+        if \"avatar_url\" in attributes and attributes[ \"avatar_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"avatar_url\" ], str )\n             self.__avatar_url = attributes[ \"avatar_url\" ]\n-        if \"billing_email\" in attributes and attributes[ \"billing_email\" ] is not None:\n+        if \"billing_email\" in attributes and attributes[ \"billing_email\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"billing_email\" ], str )\n             self.__billing_email = attributes[ \"billing_email\" ]\n-        if \"blog\" in attributes and attributes[ \"blog\" ] is not None:\n+        if \"blog\" in attributes and attributes[ \"blog\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"blog\" ], str )\n             self.__blog = attributes[ \"blog\" ]\n-        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None:\n+        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"collaborators\" ], int )\n             self.__collaborators = attributes[ \"collaborators\" ]\n-        if \"company\" in attributes and attributes[ \"company\" ] is not None:\n+        if \"company\" in attributes and attributes[ \"company\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"company\" ], str )\n             self.__company = attributes[ \"company\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None:\n+        if \"disk_usage\" in attributes and attributes[ \"disk_usage\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"disk_usage\" ], int )\n             self.__disk_usage = attributes[ \"disk_usage\" ]\n-        if \"email\" in attributes and attributes[ \"email\" ] is not None:\n+        if \"email\" in attributes and attributes[ \"email\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"email\" ], str )\n             self.__email = attributes[ \"email\" ]\n-        if \"followers\" in attributes and attributes[ \"followers\" ] is not None:\n+        if \"followers\" in attributes and attributes[ \"followers\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"followers\" ], int )\n             self.__followers = attributes[ \"followers\" ]\n-        if \"following\" in attributes and attributes[ \"following\" ] is not None:\n+        if \"following\" in attributes and attributes[ \"following\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"following\" ], int )\n             self.__following = attributes[ \"following\" ]\n-        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None:\n+        if \"gravatar_id\" in attributes and attributes[ \"gravatar_id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"gravatar_id\" ], str )\n             self.__gravatar_id = attributes[ \"gravatar_id\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"location\" in attributes and attributes[ \"location\" ] is not None:\n+        if \"location\" in attributes and attributes[ \"location\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"location\" ], str )\n             self.__location = attributes[ \"location\" ]\n-        if \"login\" in attributes and attributes[ \"login\" ] is not None:\n+        if \"login\" in attributes and attributes[ \"login\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"login\" ], str )\n             self.__login = attributes[ \"login\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None:\n+        if \"owned_private_repos\" in attributes and attributes[ \"owned_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"owned_private_repos\" ], int )\n             self.__owned_private_repos = attributes[ \"owned_private_repos\" ]\n-        if \"plan\" in attributes and attributes[ \"plan\" ] is not None:\n+        if \"plan\" in attributes and attributes[ \"plan\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"plan\" ], dict )\n             self.__plan = Plan.Plan( self.__requester, attributes[ \"plan\" ], completion = LazyCompletion )\n-        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None:\n+        if \"private_gists\" in attributes and attributes[ \"private_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"private_gists\" ], int )\n             self.__private_gists = attributes[ \"private_gists\" ]\n-        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None:\n+        if \"public_gists\" in attributes and attributes[ \"public_gists\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_gists\" ], int )\n             self.__public_gists = attributes[ \"public_gists\" ]\n-        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None:\n+        if \"public_repos\" in attributes and attributes[ \"public_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"public_repos\" ], int )\n             self.__public_repos = attributes[ \"public_repos\" ]\n-        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None:\n+        if \"total_private_repos\" in attributes and attributes[ \"total_private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"total_private_repos\" ], int )\n             self.__total_private_repos = attributes[ \"total_private_repos\" ]\n-        if \"type\" in attributes and attributes[ \"type\" ] is not None:\n+        if \"type\" in attributes and attributes[ \"type\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"type\" ], str )\n             self.__type = attributes[ \"type\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]"},{"sha":"043f6f5db4d094d723aafbec7fe54a77205e9f0f","filename":"src/github/Permissions.py","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Permissions.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Permissions.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Permissions.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -32,12 +32,12 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"admin\", \"pull\", \"push\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"admin\" in attributes and attributes[ \"admin\" ] is not None:\n+        if \"admin\" in attributes and attributes[ \"admin\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"admin\" ], bool )\n             self.__admin = attributes[ \"admin\" ]\n-        if \"pull\" in attributes and attributes[ \"pull\" ] is not None:\n+        if \"pull\" in attributes and attributes[ \"pull\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"pull\" ], bool )\n             self.__pull = attributes[ \"pull\" ]\n-        if \"push\" in attributes and attributes[ \"push\" ] is not None:\n+        if \"push\" in attributes and attributes[ \"push\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"push\" ], bool )\n             self.__push = attributes[ \"push\" ]"},{"sha":"14ac71bd4920084cd9c8dd2e452c707d82807a64","filename":"src/github/Plan.py","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Plan.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Plan.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Plan.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -37,15 +37,15 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"collaborators\", \"name\", \"private_repos\", \"space\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None:\n+        if \"collaborators\" in attributes and attributes[ \"collaborators\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"collaborators\" ], int )\n             self.__collaborators = attributes[ \"collaborators\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"private_repos\" in attributes and attributes[ \"private_repos\" ] is not None:\n+        if \"private_repos\" in attributes and attributes[ \"private_repos\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"private_repos\" ], int )\n             self.__private_repos = attributes[ \"private_repos\" ]\n-        if \"space\" in attributes and attributes[ \"space\" ] is not None:\n+        if \"space\" in attributes and attributes[ \"space\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"space\" ], int )\n             self.__space = attributes[ \"space\" ]"},{"sha":"07e945e4b49ca0d8cb8e06c124431022765bc8f0","filename":"src/github/PullRequest.py","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequest.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequest.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/PullRequest.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -279,56 +279,56 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"additions\", \"base\", \"body\", \"changed_files\", \"closed_at\", \"comments\", \"commits\", \"created_at\", \"deletions\", \"diff_url\", \"head\", \"html_url\", \"id\", \"issue_url\", \"mergeable\", \"merged\", \"merged_at\", \"merged_by\", \"number\", \"patch_url\", \"review_comments\", \"state\", \"title\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"additions\" in attributes and attributes[ \"additions\" ] is not None:\n+        if \"additions\" in attributes and attributes[ \"additions\" ] is not None: # pragma no branch\n             self.__additions = attributes[ \"additions\" ]\n-        if \"base\" in attributes and attributes[ \"base\" ] is not None:\n+        if \"base\" in attributes and attributes[ \"base\" ] is not None: # pragma no branch\n             self.__base = attributes[ \"base\" ]\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             self.__body = attributes[ \"body\" ]\n-        if \"changed_files\" in attributes and attributes[ \"changed_files\" ] is not None:\n+        if \"changed_files\" in attributes and attributes[ \"changed_files\" ] is not None: # pragma no branch\n             self.__changed_files = attributes[ \"changed_files\" ]\n-        if \"closed_at\" in attributes and attributes[ \"closed_at\" ] is not None:\n+        if \"closed_at\" in attributes and attributes[ \"closed_at\" ] is not None: # pragma no branch\n             self.__closed_at = attributes[ \"closed_at\" ]\n-        if \"comments\" in attributes and attributes[ \"comments\" ] is not None:\n+        if \"comments\" in attributes and attributes[ \"comments\" ] is not None: # pragma no branch\n             self.__comments = attributes[ \"comments\" ]\n-        if \"commits\" in attributes and attributes[ \"commits\" ] is not None:\n+        if \"commits\" in attributes and attributes[ \"commits\" ] is not None: # pragma no branch\n             self.__commits = attributes[ \"commits\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None:\n+        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None: # pragma no branch\n             self.__deletions = attributes[ \"deletions\" ]\n-        if \"diff_url\" in attributes and attributes[ \"diff_url\" ] is not None:\n+        if \"diff_url\" in attributes and attributes[ \"diff_url\" ] is not None: # pragma no branch\n             self.__diff_url = attributes[ \"diff_url\" ]\n-        if \"head\" in attributes and attributes[ \"head\" ] is not None:\n+        if \"head\" in attributes and attributes[ \"head\" ] is not None: # pragma no branch\n             self.__head = attributes[ \"head\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"issue_url\" in attributes and attributes[ \"issue_url\" ] is not None:\n+        if \"issue_url\" in attributes and attributes[ \"issue_url\" ] is not None: # pragma no branch\n             self.__issue_url = attributes[ \"issue_url\" ]\n-        if \"mergeable\" in attributes and attributes[ \"mergeable\" ] is not None:\n+        if \"mergeable\" in attributes and attributes[ \"mergeable\" ] is not None: # pragma no branch\n             self.__mergeable = attributes[ \"mergeable\" ]\n-        if \"merged\" in attributes and attributes[ \"merged\" ] is not None:\n+        if \"merged\" in attributes and attributes[ \"merged\" ] is not None: # pragma no branch\n             self.__merged = attributes[ \"merged\" ]\n-        if \"merged_at\" in attributes and attributes[ \"merged_at\" ] is not None:\n+        if \"merged_at\" in attributes and attributes[ \"merged_at\" ] is not None: # pragma no branch\n             self.__merged_at = attributes[ \"merged_at\" ]\n-        if \"merged_by\" in attributes and attributes[ \"merged_by\" ] is not None:\n+        if \"merged_by\" in attributes and attributes[ \"merged_by\" ] is not None: # pragma no branch\n             self.__merged_by = attributes[ \"merged_by\" ]\n-        if \"number\" in attributes and attributes[ \"number\" ] is not None:\n+        if \"number\" in attributes and attributes[ \"number\" ] is not None: # pragma no branch\n             self.__number = attributes[ \"number\" ]\n-        if \"patch_url\" in attributes and attributes[ \"patch_url\" ] is not None:\n+        if \"patch_url\" in attributes and attributes[ \"patch_url\" ] is not None: # pragma no branch\n             self.__patch_url = attributes[ \"patch_url\" ]\n-        if \"review_comments\" in attributes and attributes[ \"review_comments\" ] is not None:\n+        if \"review_comments\" in attributes and attributes[ \"review_comments\" ] is not None: # pragma no branch\n             self.__review_comments = attributes[ \"review_comments\" ]\n-        if \"state\" in attributes and attributes[ \"state\" ] is not None:\n+        if \"state\" in attributes and attributes[ \"state\" ] is not None: # pragma no branch\n             self.__state = attributes[ \"state\" ]\n-        if \"title\" in attributes and attributes[ \"title\" ] is not None:\n+        if \"title\" in attributes and attributes[ \"title\" ] is not None: # pragma no branch\n             self.__title = attributes[ \"title\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"d0095192e606f65fec81882be15aca06ac47e5e3","filename":"src/github/PullRequestComment.py","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequestComment.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequestComment.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/PullRequestComment.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -121,26 +121,26 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"body\", \"commit_id\", \"created_at\", \"html_url\", \"id\", \"line\", \"path\", \"position\", \"updated_at\", \"url\", \"user\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"body\" in attributes and attributes[ \"body\" ] is not None:\n+        if \"body\" in attributes and attributes[ \"body\" ] is not None: # pragma no branch\n             self.__body = attributes[ \"body\" ]\n-        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None:\n+        if \"commit_id\" in attributes and attributes[ \"commit_id\" ] is not None: # pragma no branch\n             self.__commit_id = attributes[ \"commit_id\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"line\" in attributes and attributes[ \"line\" ] is not None:\n+        if \"line\" in attributes and attributes[ \"line\" ] is not None: # pragma no branch\n             self.__line = attributes[ \"line\" ]\n-        if \"path\" in attributes and attributes[ \"path\" ] is not None:\n+        if \"path\" in attributes and attributes[ \"path\" ] is not None: # pragma no branch\n             self.__path = attributes[ \"path\" ]\n-        if \"position\" in attributes and attributes[ \"position\" ] is not None:\n+        if \"position\" in attributes and attributes[ \"position\" ] is not None: # pragma no branch\n             self.__position = attributes[ \"position\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"user\" in attributes and attributes[ \"user\" ] is not None:\n+        if \"user\" in attributes and attributes[ \"user\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"user\" ], dict )\n             self.__user = NamedUser.NamedUser( self.__requester, attributes[ \"user\" ], completion = LazyCompletion )"},{"sha":"043fb9a5328ad003b449573616e418f17e25bac2","filename":"src/github/PullRequestFile.py","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequestFile.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/PullRequestFile.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/PullRequestFile.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -62,21 +62,21 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"additions\", \"blob_url\", \"changes\", \"deletions\", \"filename\", \"patch\", \"raw_url\", \"sha\", \"status\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"additions\" in attributes and attributes[ \"additions\" ] is not None:\n+        if \"additions\" in attributes and attributes[ \"additions\" ] is not None: # pragma no branch\n             self.__additions = attributes[ \"additions\" ]\n-        if \"blob_url\" in attributes and attributes[ \"blob_url\" ] is not None:\n+        if \"blob_url\" in attributes and attributes[ \"blob_url\" ] is not None: # pragma no branch\n             self.__blob_url = attributes[ \"blob_url\" ]\n-        if \"changes\" in attributes and attributes[ \"changes\" ] is not None:\n+        if \"changes\" in attributes and attributes[ \"changes\" ] is not None: # pragma no branch\n             self.__changes = attributes[ \"changes\" ]\n-        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None:\n+        if \"deletions\" in attributes and attributes[ \"deletions\" ] is not None: # pragma no branch\n             self.__deletions = attributes[ \"deletions\" ]\n-        if \"filename\" in attributes and attributes[ \"filename\" ] is not None:\n+        if \"filename\" in attributes and attributes[ \"filename\" ] is not None: # pragma no branch\n             self.__filename = attributes[ \"filename\" ]\n-        if \"patch\" in attributes and attributes[ \"patch\" ] is not None:\n+        if \"patch\" in attributes and attributes[ \"patch\" ] is not None: # pragma no branch\n             self.__patch = attributes[ \"patch\" ]\n-        if \"raw_url\" in attributes and attributes[ \"raw_url\" ] is not None:\n+        if \"raw_url\" in attributes and attributes[ \"raw_url\" ] is not None: # pragma no branch\n             self.__raw_url = attributes[ \"raw_url\" ]\n-        if \"sha\" in attributes and attributes[ \"sha\" ] is not None:\n+        if \"sha\" in attributes and attributes[ \"sha\" ] is not None: # pragma no branch\n             self.__sha = attributes[ \"sha\" ]\n-        if \"status\" in attributes and attributes[ \"status\" ] is not None:\n+        if \"status\" in attributes and attributes[ \"status\" ] is not None: # pragma no branch\n             self.__status = attributes[ \"status\" ]"},{"sha":"30b4bc70dc2a72c52c1cf02e63a26e1cfaf5676e","filename":"src/github/Repository.py","status":"modified","additions":31,"deletions":31,"changes":62,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Repository.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Repository.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Repository.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -905,96 +905,96 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"clone_url\", \"created_at\", \"description\", \"fork\", \"forks\", \"full_name\", \"git_url\", \"has_downloads\", \"has_issues\", \"has_wiki\", \"homepage\", \"html_url\", \"id\", \"language\", \"master_branch\", \"mirror_url\", \"name\", \"open_issues\", \"organization\", \"owner\", \"parent\", \"permissions\", \"private\", \"pushed_at\", \"size\", \"source\", \"ssh_url\", \"svn_url\", \"updated_at\", \"url\", \"watchers\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"clone_url\" in attributes and attributes[ \"clone_url\" ] is not None:\n+        if \"clone_url\" in attributes and attributes[ \"clone_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"clone_url\" ], str )\n             self.__clone_url = attributes[ \"clone_url\" ]\n-        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None:\n+        if \"created_at\" in attributes and attributes[ \"created_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"created_at\" ], str )\n             self.__created_at = attributes[ \"created_at\" ]\n-        if \"description\" in attributes and attributes[ \"description\" ] is not None:\n+        if \"description\" in attributes and attributes[ \"description\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"description\" ], str )\n             self.__description = attributes[ \"description\" ]\n-        if \"fork\" in attributes and attributes[ \"fork\" ] is not None:\n+        if \"fork\" in attributes and attributes[ \"fork\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"fork\" ], bool )\n             self.__fork = attributes[ \"fork\" ]\n-        if \"forks\" in attributes and attributes[ \"forks\" ] is not None:\n+        if \"forks\" in attributes and attributes[ \"forks\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"forks\" ], int )\n             self.__forks = attributes[ \"forks\" ]\n-        if \"full_name\" in attributes and attributes[ \"full_name\" ] is not None:\n+        if \"full_name\" in attributes and attributes[ \"full_name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"full_name\" ], str )\n             self.__full_name = attributes[ \"full_name\" ]\n-        if \"git_url\" in attributes and attributes[ \"git_url\" ] is not None:\n+        if \"git_url\" in attributes and attributes[ \"git_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"git_url\" ], str )\n             self.__git_url = attributes[ \"git_url\" ]\n-        if \"has_downloads\" in attributes and attributes[ \"has_downloads\" ] is not None:\n+        if \"has_downloads\" in attributes and attributes[ \"has_downloads\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"has_downloads\" ], bool )\n             self.__has_downloads = attributes[ \"has_downloads\" ]\n-        if \"has_issues\" in attributes and attributes[ \"has_issues\" ] is not None:\n+        if \"has_issues\" in attributes and attributes[ \"has_issues\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"has_issues\" ], bool )\n             self.__has_issues = attributes[ \"has_issues\" ]\n-        if \"has_wiki\" in attributes and attributes[ \"has_wiki\" ] is not None:\n+        if \"has_wiki\" in attributes and attributes[ \"has_wiki\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"has_wiki\" ], bool )\n             self.__has_wiki = attributes[ \"has_wiki\" ]\n-        if \"homepage\" in attributes and attributes[ \"homepage\" ] is not None:\n+        if \"homepage\" in attributes and attributes[ \"homepage\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"homepage\" ], str )\n             self.__homepage = attributes[ \"homepage\" ]\n-        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None:\n+        if \"html_url\" in attributes and attributes[ \"html_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"html_url\" ], str )\n             self.__html_url = attributes[ \"html_url\" ]\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"id\" ], int )\n             self.__id = attributes[ \"id\" ]\n-        if \"language\" in attributes and attributes[ \"language\" ] is not None:\n+        if \"language\" in attributes and attributes[ \"language\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"language\" ], str )\n             self.__language = attributes[ \"language\" ]\n-        if \"master_branch\" in attributes and attributes[ \"master_branch\" ] is not None:\n+        if \"master_branch\" in attributes and attributes[ \"master_branch\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"master_branch\" ], str )\n             self.__master_branch = attributes[ \"master_branch\" ]\n-        if \"mirror_url\" in attributes and attributes[ \"mirror_url\" ] is not None:\n+        if \"mirror_url\" in attributes and attributes[ \"mirror_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"mirror_url\" ], str )\n             self.__mirror_url = attributes[ \"mirror_url\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"open_issues\" in attributes and attributes[ \"open_issues\" ] is not None:\n+        if \"open_issues\" in attributes and attributes[ \"open_issues\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"open_issues\" ], int )\n             self.__open_issues = attributes[ \"open_issues\" ]\n-        if \"organization\" in attributes and attributes[ \"organization\" ] is not None:\n+        if \"organization\" in attributes and attributes[ \"organization\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"organization\" ], dict )\n             self.__organization = Organization.Organization( self.__requester, attributes[ \"organization\" ], completion = LazyCompletion )\n-        if \"owner\" in attributes and attributes[ \"owner\" ] is not None:\n+        if \"owner\" in attributes and attributes[ \"owner\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"owner\" ], dict )\n             self.__owner = NamedUser.NamedUser( self.__requester, attributes[ \"owner\" ], completion = LazyCompletion )\n-        if \"parent\" in attributes and attributes[ \"parent\" ] is not None:\n+        if \"parent\" in attributes and attributes[ \"parent\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"parent\" ], dict )\n             self.__parent = Repository( self.__requester, attributes[ \"parent\" ], completion = LazyCompletion )\n-        if \"permissions\" in attributes and attributes[ \"permissions\" ] is not None:\n+        if \"permissions\" in attributes and attributes[ \"permissions\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"permissions\" ], dict )\n             self.__permissions = Permissions.Permissions( self.__requester, attributes[ \"permissions\" ], completion = LazyCompletion )\n-        if \"private\" in attributes and attributes[ \"private\" ] is not None:\n+        if \"private\" in attributes and attributes[ \"private\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"private\" ], bool )\n             self.__private = attributes[ \"private\" ]\n-        if \"pushed_at\" in attributes and attributes[ \"pushed_at\" ] is not None:\n+        if \"pushed_at\" in attributes and attributes[ \"pushed_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"pushed_at\" ], str )\n             self.__pushed_at = attributes[ \"pushed_at\" ]\n-        if \"size\" in attributes and attributes[ \"size\" ] is not None:\n+        if \"size\" in attributes and attributes[ \"size\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"size\" ], int )\n             self.__size = attributes[ \"size\" ]\n-        if \"source\" in attributes and attributes[ \"source\" ] is not None:\n+        if \"source\" in attributes and attributes[ \"source\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"source\" ], dict )\n             self.__source = Repository( self.__requester, attributes[ \"source\" ], completion = LazyCompletion )\n-        if \"ssh_url\" in attributes and attributes[ \"ssh_url\" ] is not None:\n+        if \"ssh_url\" in attributes and attributes[ \"ssh_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"ssh_url\" ], str )\n             self.__ssh_url = attributes[ \"ssh_url\" ]\n-        if \"svn_url\" in attributes and attributes[ \"svn_url\" ] is not None:\n+        if \"svn_url\" in attributes and attributes[ \"svn_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"svn_url\" ], str )\n             self.__svn_url = attributes[ \"svn_url\" ]\n-        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None:\n+        if \"updated_at\" in attributes and attributes[ \"updated_at\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"updated_at\" ], str )\n             self.__updated_at = attributes[ \"updated_at\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"url\" ], str )\n             self.__url = attributes[ \"url\" ]\n-        if \"watchers\" in attributes and attributes[ \"watchers\" ] is not None:\n+        if \"watchers\" in attributes and attributes[ \"watchers\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"watchers\" ], int )\n             self.__watchers = attributes[ \"watchers\" ]"},{"sha":"fc5cafc09e2b8120e47c2bbdf0e0fa0821ec5ecf","filename":"src/github/RepositoryKey.py","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/RepositoryKey.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/RepositoryKey.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/RepositoryKey.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -87,14 +87,14 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"id\", \"key\", \"title\", \"url\", \"verified\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"key\" in attributes and attributes[ \"key\" ] is not None:\n+        if \"key\" in attributes and attributes[ \"key\" ] is not None: # pragma no branch\n             self.__key = attributes[ \"key\" ]\n-        if \"title\" in attributes and attributes[ \"title\" ] is not None:\n+        if \"title\" in attributes and attributes[ \"title\" ] is not None: # pragma no branch\n             self.__title = attributes[ \"title\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"verified\" in attributes and attributes[ \"verified\" ] is not None:\n+        if \"verified\" in attributes and attributes[ \"verified\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"verified\" ], bool )\n             self.__verified = attributes[ \"verified\" ]"},{"sha":"7903406c469352d3f3fb897ed9ac9fc9ebc51c3b","filename":"src/github/Tag.py","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Tag.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Tag.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Tag.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -38,15 +38,15 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"commit\", \"name\", \"tarball_url\", \"zipball_url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"commit\" in attributes and attributes[ \"commit\" ] is not None:\n+        if \"commit\" in attributes and attributes[ \"commit\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"commit\" ], dict )\n             self.__commit = Commit.Commit( self.__requester, attributes[ \"commit\" ], completion = LazyCompletion )\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"name\" ], str )\n             self.__name = attributes[ \"name\" ]\n-        if \"tarball_url\" in attributes and attributes[ \"tarball_url\" ] is not None:\n+        if \"tarball_url\" in attributes and attributes[ \"tarball_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"tarball_url\" ], str )\n             self.__tarball_url = attributes[ \"tarball_url\" ]\n-        if \"zipball_url\" in attributes and attributes[ \"zipball_url\" ] is not None:\n+        if \"zipball_url\" in attributes and attributes[ \"zipball_url\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"zipball_url\" ], str )\n             self.__zipball_url = attributes[ \"zipball_url\" ]"},{"sha":"ca5b7e13476a30fee9234c6f965019f303e3f33e","filename":"src/github/Team.py","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Team.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/Team.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/Team.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -172,15 +172,15 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"id\", \"members_count\", \"name\", \"permission\", \"repos_count\", \"url\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"members_count\" in attributes and attributes[ \"members_count\" ] is not None:\n+        if \"members_count\" in attributes and attributes[ \"members_count\" ] is not None: # pragma no branch\n             self.__members_count = attributes[ \"members_count\" ]\n-        if \"name\" in attributes and attributes[ \"name\" ] is not None:\n+        if \"name\" in attributes and attributes[ \"name\" ] is not None: # pragma no branch\n             self.__name = attributes[ \"name\" ]\n-        if \"permission\" in attributes and attributes[ \"permission\" ] is not None:\n+        if \"permission\" in attributes and attributes[ \"permission\" ] is not None: # pragma no branch\n             self.__permission = attributes[ \"permission\" ]\n-        if \"repos_count\" in attributes and attributes[ \"repos_count\" ] is not None:\n+        if \"repos_count\" in attributes and attributes[ \"repos_count\" ] is not None: # pragma no branch\n             self.__repos_count = attributes[ \"repos_count\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]"},{"sha":"b7b135d5cf476ece019ca1d018fdf3fc48a450ee","filename":"src/github/UserKey.py","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/UserKey.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/src/github/UserKey.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/src/github/UserKey.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -87,14 +87,14 @@ def __useAttributes( self, attributes ):\n         for attribute in attributes:\n             assert attribute in [ \"id\", \"key\", \"title\", \"url\", \"verified\", ], attribute\n         # @todo No need to check if attribute is in attributes when attribute is mandatory\n-        if \"id\" in attributes and attributes[ \"id\" ] is not None:\n+        if \"id\" in attributes and attributes[ \"id\" ] is not None: # pragma no branch\n             self.__id = attributes[ \"id\" ]\n-        if \"key\" in attributes and attributes[ \"key\" ] is not None:\n+        if \"key\" in attributes and attributes[ \"key\" ] is not None: # pragma no branch\n             self.__key = attributes[ \"key\" ]\n-        if \"title\" in attributes and attributes[ \"title\" ] is not None:\n+        if \"title\" in attributes and attributes[ \"title\" ] is not None: # pragma no branch\n             self.__title = attributes[ \"title\" ]\n-        if \"url\" in attributes and attributes[ \"url\" ] is not None:\n+        if \"url\" in attributes and attributes[ \"url\" ] is not None: # pragma no branch\n             self.__url = attributes[ \"url\" ]\n-        if \"verified\" in attributes and attributes[ \"verified\" ] is not None:\n+        if \"verified\" in attributes and attributes[ \"verified\" ] is not None: # pragma no branch\n             assert isinstance( attributes[ \"verified\" ], bool )\n             self.__verified = attributes[ \"verified\" ]"},{"sha":"c0a781c0bffba244aa2e9826770ccc127f1415af","filename":"test/Issue.py","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/Issue.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/Issue.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/Issue.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -3,7 +3,8 @@\n class Issue( Framework.TestCase ):\r\n     def setUp( self ):\r\n         Framework.TestCase.setUp( self )\r\n-        self.issue = self.g.get_user().get_repo( \"PyGithub\" ).get_issue( 28 )\r\n+        self.repo = self.g.get_user().get_repo( \"PyGithub\" )\r\n+        self.issue = self.repo.get_issue( 28 )\r\n \r\n     def testAttributes( self ):\r\n         self.assertEqual( self.issue.assignee.login, \"jacquev6\" )\r\n@@ -47,3 +48,26 @@ def testGetComments( self ):\n \r\n     def testGetEvents( self ):\r\n         self.assertListKeyEqual( self.issue.get_events(), lambda e: e.id, [ 15819975, 15820048 ] )\r\n+\r\n+    def testGetLabels( self ):\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Bug\", \"Project management\", \"Question\" ] )\r\n+\r\n+    def testAddAndRemoveLabels( self ):\r\n+        bug = self.repo.get_label( \"Bug\" )\r\n+        question = self.repo.get_label( \"Question\" )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Bug\", \"Project management\", \"Question\" ] )\r\n+        self.issue.remove_from_labels( bug )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Project management\", \"Question\" ] )\r\n+        self.issue.remove_from_labels( question )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Project management\" ] )\r\n+        self.issue.add_to_labels( bug, question )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Bug\", \"Project management\", \"Question\" ] )\r\n+\r\n+    def testDeleteAndSetLabels( self ):\r\n+        bug = self.repo.get_label( \"Bug\" )\r\n+        question = self.repo.get_label( \"Question\" )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Bug\", \"Project management\", \"Question\" ] )\r\n+        self.issue.delete_labels()\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [] )\r\n+        self.issue.set_labels( bug, question )\r\n+        self.assertListKeyEqual( self.issue.get_labels(), lambda l: l.name, [ \"Bug\", \"Question\" ] )\r"},{"sha":"77fa51481ceb340a91f3988b7d570d697065ebe8","filename":"test/IssueEvent.py","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/IssueEvent.py","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/IssueEvent.py","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/IssueEvent.py?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -3,13 +3,13 @@\n class IssueEvent( Framework.TestCase ):\r\n     def setUp( self ):\r\n         Framework.TestCase.setUp( self )\r\n-        self.event = self.g.get_user().get_repo( \"PyGithub\" ).get_issues_event( 15819975 )\r\n+        self.event = self.g.get_user().get_repo( \"PyGithub\" ).get_issues_event( 16348656 )\r\n \r\n     def testAttributes( self ):\r\n         self.assertEqual( self.event.actor.login, \"jacquev6\" )\r\n-        self.assertEqual( self.event.commit_id, None )\r\n-        self.assertEqual( self.event.created_at, \"2012-05-19T10:38:23Z\" )\r\n-        self.assertEqual( self.event.event, \"subscribed\" )\r\n-        self.assertEqual( self.event.id, 15819975 )\r\n-        self.assertEqual( self.event.issue.number, 28 )\r\n-        self.assertEqual( self.event.url, \"https://api.github.com/repos/jacquev6/PyGithub/issues/events/15819975\" )\r\n+        self.assertEqual( self.event.commit_id, \"ed866fc43833802ab553e5ff8581c81bb00dd433\" )\r\n+        self.assertEqual( self.event.created_at, \"2012-05-27T07:29:25Z\" )\r\n+        self.assertEqual( self.event.event, \"referenced\" )\r\n+        self.assertEqual( self.event.id, 16348656 )\r\n+        self.assertEqual( self.event.issue.number, 30 )\r\n+        self.assertEqual( self.event.url, \"https://api.github.com/repos/jacquev6/PyGithub/issues/events/16348656\" )\r"},{"sha":"fb933714353269eb17e70880daacaf9166d4f742","filename":"test/ReplayData/Issue.testAddAndRemoveLabels.txt","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testAddAndRemoveLabels.txt","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testAddAndRemoveLabels.txt","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/ReplayData/Issue.testAddAndRemoveLabels.txt?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -0,0 +1,45 @@\n+GET /repos/jacquev6/PyGithub/labels/Bug {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4992'), ('content-length', '97'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"569c414d87e8ec43ec269a9e28bc2982\"'), ('date', 'Sun, 27 May 2012 09:04:01 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"color\":\"e10c02\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\"}\n+\n+GET /repos/jacquev6/PyGithub/labels/Question {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4991'), ('content-length', '107'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"b659c8dcc1212c71f826547c3cc7ae99\"'), ('date', 'Sun, 27 May 2012 09:04:02 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4990'), ('content-length', '335'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"c9f9beccb03030beaf7b80927da6fef6\"'), ('date', 'Sun, 27 May 2012 09:04:03 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+\n+DELETE /repos/jacquev6/PyGithub/issues/28/labels/Bug {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4989'), ('content-length', '237'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"46cc70bad88a09b559a5e67089005105\"'), ('date', 'Sun, 27 May 2012 09:04:03 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4988'), ('content-length', '237'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"46cc70bad88a09b559a5e67089005105\"'), ('date', 'Sun, 27 May 2012 09:04:04 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+\n+DELETE /repos/jacquev6/PyGithub/issues/28/labels/Question {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4987'), ('content-length', '129'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"5352ae15c8a5a36c6cace63be9367332\"'), ('date', 'Sun, 27 May 2012 09:04:04 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"}]\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4986'), ('content-length', '129'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"5352ae15c8a5a36c6cace63be9367332\"'), ('date', 'Sun, 27 May 2012 09:04:05 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"}]\n+\n+POST /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} [\"Bug\", \"Question\"]\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4985'), ('content-length', '335'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"d135d74d2ea2159d044676a220d41d3a\"'), ('date', 'Sun, 27 May 2012 09:04:06 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"color\":\"e10c02\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\"},{\"color\":\"444444\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\"},{\"color\":\"02e10c\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\"}]\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4984'), ('content-length', '335'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"c9f9beccb03030beaf7b80927da6fef6\"'), ('date', 'Sun, 27 May 2012 09:04:06 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+"},{"sha":"bbd6ae4ea3dac63b301017dece6f56b34eab6f80","filename":"test/ReplayData/Issue.testDeleteAndSetLabels.txt","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testDeleteAndSetLabels.txt","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testDeleteAndSetLabels.txt","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/ReplayData/Issue.testDeleteAndSetLabels.txt?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -0,0 +1,35 @@\n+GET /repos/jacquev6/PyGithub/labels/Bug {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4974'), ('content-length', '97'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"fe2e942523eecb156d100829a6347516\"'), ('date', 'Sun, 27 May 2012 09:06:37 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"}\n+\n+GET /repos/jacquev6/PyGithub/labels/Question {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4973'), ('content-length', '107'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"931e58d337b2290717303141eda89cd7\"'), ('date', 'Sun, 27 May 2012 09:06:38 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"color\":\"02e10c\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\"}\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4972'), ('content-length', '335'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"d135d74d2ea2159d044676a220d41d3a\"'), ('date', 'Sun, 27 May 2012 09:06:39 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"color\":\"e10c02\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\"},{\"color\":\"444444\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\"},{\"color\":\"02e10c\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\"}]\n+\n+DELETE /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+204\n+[('status', '204 No Content'), ('x-ratelimit-remaining', '4971'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"d41d8cd98f00b204e9800998ecf8427e\"'), ('date', 'Sun, 27 May 2012 09:06:39 GMT')]\n+\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4970'), ('content-length', '2'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"d751713988987e9331980363e24189ce\"'), ('date', 'Sun, 27 May 2012 09:06:40 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[]\n+\n+PUT /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} [\"Bug\", \"Question\"]\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4969'), ('content-length', '207'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"1a56634d9c1050a88592ff55ed8adc62\"'), ('date', 'Sun, 27 May 2012 09:06:40 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4968'), ('content-length', '207'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"1a56634d9c1050a88592ff55ed8adc62\"'), ('date', 'Sun, 27 May 2012 09:06:41 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+"},{"sha":"282dda36da4958e743c70a1cee5b89df0afce592","filename":"test/ReplayData/Issue.testGetLabels.txt","status":"added","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testGetLabels.txt","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/Issue.testGetLabels.txt","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/ReplayData/Issue.testGetLabels.txt?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -0,0 +1,5 @@\n+GET /repos/jacquev6/PyGithub/issues/28/labels {'Authorization': 'Basic login_and_password_removed'} null\n+200\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4996'), ('content-length', '335'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"c9f9beccb03030beaf7b80927da6fef6\"'), ('date', 'Sun, 27 May 2012 08:56:31 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}]\n+"},{"sha":"0de7e5358c98a51af4f18e7ff9559f4a826bfebc","filename":"test/ReplayData/IssueEvent.setUp.txt","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/jacquev6/PyGithub/blob/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/IssueEvent.setUp.txt","raw_url":"https://github.com/jacquev6/PyGithub/raw/8a4f306d4b223682dd19410d4a9150636ebe4206/test/ReplayData/IssueEvent.setUp.txt","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/test/ReplayData/IssueEvent.setUp.txt?ref=8a4f306d4b223682dd19410d4a9150636ebe4206","patch":"@@ -1,15 +1,15 @@\n GET /user {'Authorization': 'Basic login_and_password_removed'} null\n 200\n-[('status', '200 OK'), ('x-ratelimit-remaining', '4907'), ('content-length', '801'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"99c9bfb75395b749e9913a4729126fb5\"'), ('date', 'Sun, 27 May 2012 07:19:30 GMT'), ('content-type', 'application/json; charset=utf-8')]\n-{\"private_gists\":5,\"type\":\"User\",\"company\":\"Criteo\",\"location\":\"Paris, France\",\"hireable\":false,\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"bio\":\"\",\"following\":24,\"blog\":\"http://vincent-jacques.net\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"total_private_repos\":5,\"followers\":13,\"owned_private_repos\":5,\"disk_usage\":16976,\"collaborators\":0,\"html_url\":\"https://github.com/jacquev6\",\"url\":\"https://api.github.com/users/jacquev6\",\"name\":\"Vincent Jacques\",\"login\":\"jacquev6\",\"public_repos\":11,\"public_gists\":3,\"email\":\"vincent@vincent-jacques.net\",\"id\":327146,\"plan\":{\"private_repos\":5,\"collaborators\":1,\"name\":\"micro\",\"space\":614400},\"created_at\":\"2010-07-09T06:10:06Z\"}\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4996'), ('content-length', '801'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"8974bb1628a3e3a6d3eb3b08c1b5a46b\"'), ('date', 'Sun, 27 May 2012 07:32:54 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"type\":\"User\",\"bio\":\"\",\"disk_usage\":16976,\"total_private_repos\":5,\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"owned_private_repos\":5,\"collaborators\":0,\"plan\":{\"collaborators\":1,\"private_repos\":5,\"name\":\"micro\",\"space\":614400},\"company\":\"Criteo\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"email\":\"vincent@vincent-jacques.net\",\"public_gists\":3,\"followers\":13,\"name\":\"Vincent Jacques\",\"created_at\":\"2010-07-09T06:10:06Z\",\"blog\":\"http://vincent-jacques.net\",\"location\":\"Paris, France\",\"hireable\":false,\"id\":327146,\"private_gists\":5,\"public_repos\":11,\"following\":24,\"html_url\":\"https://github.com/jacquev6\"}\n \n GET /repos/jacquev6/PyGithub {'Authorization': 'Basic login_and_password_removed'} null\n 200\n-[('status', '200 OK'), ('x-ratelimit-remaining', '4906'), ('content-length', '1129'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"4c20acf0b23f75bbf25106b1a04f65a5\"'), ('date', 'Sun, 27 May 2012 07:19:31 GMT'), ('content-type', 'application/json; charset=utf-8')]\n-{\"description\":\"Python library implementing the full Github API v3\",\"full_name\":\"jacquev6/PyGithub\",\"has_wiki\":false,\"has_issues\":true,\"updated_at\":\"2012-05-27T06:55:28Z\",\"forks\":3,\"mirror_url\":null,\"homepage\":\"http://vincent-jacques.net/PyGithub\",\"ssh_url\":\"git@github.com:jacquev6/PyGithub.git\",\"open_issues\":16,\"fork\":false,\"svn_url\":\"https://github.com/jacquev6/PyGithub\",\"pushed_at\":\"2012-05-27T06:00:28Z\",\"size\":308,\"html_url\":\"https://github.com/jacquev6/PyGithub\",\"private\":false,\"url\":\"https://api.github.com/repos/jacquev6/PyGithub\",\"clone_url\":\"https://github.com/jacquev6/PyGithub.git\",\"owner\":{\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"url\":\"https://api.github.com/users/jacquev6\",\"login\":\"jacquev6\",\"id\":327146},\"name\":\"PyGithub\",\"has_downloads\":true,\"language\":\"Python\",\"watchers\":15,\"git_url\":\"git://github.com/jacquev6/PyGithub.git\",\"id\":3544490,\"permissions\":{\"admin\":true,\"pull\":true,\"push\":true},\"created_at\":\"2012-02-25T12:53:47Z\"}\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4995'), ('content-length', '1129'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"f1e4eb3993a364b66b68ec9db42405bd\"'), ('date', 'Sun, 27 May 2012 07:32:55 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"clone_url\":\"https://github.com/jacquev6/PyGithub.git\",\"has_downloads\":true,\"watchers\":15,\"updated_at\":\"2012-05-27T07:29:24Z\",\"permissions\":{\"pull\":true,\"admin\":true,\"push\":true},\"homepage\":\"http://vincent-jacques.net/PyGithub\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub\",\"mirror_url\":null,\"has_wiki\":false,\"has_issues\":true,\"fork\":false,\"forks\":3,\"git_url\":\"git://github.com/jacquev6/PyGithub.git\",\"size\":308,\"private\":false,\"open_issues\":16,\"svn_url\":\"https://github.com/jacquev6/PyGithub\",\"owner\":{\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146},\"name\":\"PyGithub\",\"language\":\"Python\",\"description\":\"Python library implementing the full Github API v3\",\"ssh_url\":\"git@github.com:jacquev6/PyGithub.git\",\"pushed_at\":\"2012-05-27T07:29:24Z\",\"created_at\":\"2012-02-25T12:53:47Z\",\"id\":3544490,\"html_url\":\"https://github.com/jacquev6/PyGithub\",\"full_name\":\"jacquev6/PyGithub\"}\n \n-GET /repos/jacquev6/PyGithub/issues/events/15819975 {'Authorization': 'Basic login_and_password_removed'} null\n+GET /repos/jacquev6/PyGithub/issues/events/16348656 {'Authorization': 'Basic login_and_password_removed'} null\n 200\n-[('status', '200 OK'), ('x-ratelimit-remaining', '4905'), ('content-length', '2430'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"a3d244842d23f92f69a23e21626fad11\"'), ('date', 'Sun, 27 May 2012 07:19:31 GMT'), ('content-type', 'application/json; charset=utf-8')]\n-{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/issues/events/15819975\",\"issue\":{\"updated_at\":\"2012-05-26T14:59:33Z\",\"body\":\"Body edited by PyGithub\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/issues/28\",\"comments\":0,\"milestone\":{\"creator\":{\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146},\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/milestones/1\",\"number\":1,\"title\":\"Version 0.4\",\"due_on\":\"2012-03-13T07:00:00Z\",\"closed_issues\":3,\"open_issues\":0,\"created_at\":\"2012-03-08T12:22:10Z\",\"state\":\"closed\",\"description\":\"\",\"id\":93546},\"number\":28,\"assignee\":{\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146},\"closed_at\":\"2012-05-26T14:59:33Z\",\"title\":\"Issue created by PyGithub\",\"labels\":[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Bug\",\"name\":\"Bug\",\"color\":\"e10c02\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Project+management\",\"name\":\"Project management\",\"color\":\"444444\"},{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}],\"created_at\":\"2012-05-19T10:38:23Z\",\"state\":\"closed\",\"user\":{\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146},\"id\":4653757,\"pull_request\":{\"diff_url\":null,\"patch_url\":null,\"html_url\":null},\"html_url\":\"https://github.com/jacquev6/PyGithub/issues/28\"},\"commit_id\":null,\"created_at\":\"2012-05-19T10:38:23Z\",\"event\":\"subscribed\",\"id\":15819975,\"actor\":{\"url\":\"https://api.github.com/users/jacquev6\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146}}\n+[('status', '200 OK'), ('x-ratelimit-remaining', '4994'), ('content-length', '1384'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"fefecab09e7355d4ef9875677c2631da\"'), ('date', 'Sun, 27 May 2012 07:32:56 GMT'), ('content-type', 'application/json; charset=utf-8')]\n+{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/issues/events/16348656\",\"issue\":{\"updated_at\":\"2012-05-27T07:27:51Z\",\"body\":\"Body created by PyGithub\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/issues/30\",\"comments\":0,\"milestone\":null,\"number\":30,\"assignee\":null,\"closed_at\":null,\"title\":\"Issue also created by PyGithub\",\"labels\":[{\"url\":\"https://api.github.com/repos/jacquev6/PyGithub/labels/Question\",\"name\":\"Question\",\"color\":\"02e10c\"}],\"created_at\":\"2012-05-27T05:40:15Z\",\"state\":\"open\",\"user\":{\"url\":\"https://api.github.com/users/jacquev6\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146,\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\"},\"id\":4769659,\"pull_request\":{\"patch_url\":null,\"diff_url\":null,\"html_url\":null},\"html_url\":\"https://github.com/jacquev6/PyGithub/issues/30\"},\"commit_id\":\"ed866fc43833802ab553e5ff8581c81bb00dd433\",\"created_at\":\"2012-05-27T07:29:25Z\",\"event\":\"referenced\",\"id\":16348656,\"actor\":{\"url\":\"https://api.github.com/users/jacquev6\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"login\":\"jacquev6\",\"id\":327146,\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\"}}\n "}]

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/comments/3630301
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4873'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '8be19071-cb1a-414d-8310-a325dcbb0ff4'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '1391'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:34 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/comments/3630301","html_url":"https://github.com/jacquev6/PyGithub/commit/4aadfff21cdd2d2566b0e4bd7309c233b5f4ae23#commitcomment-3630301","id":3630301,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"position":null,"line":null,"path":null,"commit_id":"4aadfff21cdd2d2566b0e4bd7309c233b5f4ae23","created_at":"2013-07-14T17:26:29Z","updated_at":"2013-07-14T17:26:29Z","body":"Comment created for PyGithub"}

https
GET
api.github.com
None
/rate_limit
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('Date', 'Wed, 05 Sep 2018 03:59:43 GMT'), ('Content-Type', 'application/json; charset=utf-8'), ('Transfer-Encoding', 'chunked'), ('Server', 'GitHub.com'), ('Status', '200 OK'), ('X-RateLimit-Limit', '5000'), ('X-RateLimit-Remaining', '4929'), ('X-RateLimit-Reset', '1536123356'), ('Cache-Control', 'no-cache'), ('X-OAuth-Scopes', 'admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete_repo, gist, notifications, repo, user, write:discussion'), ('X-Accepted-OAuth-Scopes', ''), ('X-GitHub-Media-Type', 'github.v3; format=json'), ('Access-Control-Expose-Headers', 'ETag, Link, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval'), ('Access-Control-Allow-Origin', '*'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains; preload'), ('X-Frame-Options', 'deny'), ('X-Content-Type-Options', 'nosniff'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'origin-when-cross-origin, strict-origin-when-cross-origin'), ('Content-Security-Policy', "default-src 'none'"), ('X-Runtime-rack', '0.021146'), ('Content-Encoding', 'gzip'), ('Vary', 'Accept-Encoding'), ('X-GitHub-Request-Id', 'C8ED:54D0:B4DAB8:EF7B5E:5B8F54AE')]
{"resources":{"core":{"limit":5000,"remaining":4929,"reset":1536123356},"search":{"limit":30,"remaining":30,"reset":1536120043},"graphql":{"limit":5000,"remaining":5000,"reset":1536123583}},"rate":{"limit":5000,"remaining":4929,"reset":1536123356}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/hooks
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4872'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '91eb21a9-7965-4af5-b6ff-95dc600d32e1'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '464'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:06 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"f7b3dbaaca94c0219f23e9021e78506f"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:43 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"url":"https://api.github.com/repos/jacquev6/PyGithub/hooks/423574","test_url":"https://api.github.com/repos/jacquev6/PyGithub/hooks/423574/test","id":423574,"name":"travis","active":true,"events":["push","pull_request","issue_comment","public","member"],"config":{"domain":"","token":"pJdnhcDq3dQ9Cr1J1znQ","user":"jacquev6"},"last_response":{"code":200,"status":"active","message":"OK"},"updated_at":"2013-09-06T12:41:06Z","created_at":"2012-09-16T07:14:29Z"}]

https
GET
api.github.com
None
/hooks
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4871'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '609aaebd-8356-4b3a-82cf-c796a9475c3b'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '28297'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 04 Sep 2013 18:03:57 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"678dd8e392d70d3a284c3d47221ec6f0"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:45 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"name":"activecollab","events":["push"],"supported_events":["push"],"schema":[["string","url"],["string","token"],["string","project_id"],["string","milestone_id"],["string","category_id"]]},{"name":"acunote","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"agilebench","events":["push"],"supported_events":["push"],"schema":[["string","token"],["string","project_id"]]},{"name":"agilezen","events":["push"],"supported_events":["push"],"schema":[["string","api_key"],["string","project_id"],["string","branches"]]},{"name":"amazonsns","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","aws_key"],["string","aws_secret"],["string","sns_topic"],["string","sqs_queue"],["password","aws_secret"]]},{"name":"apiary","events":["push"],"supported_events":["push"],"schema":[["string","branch"],["string","domain"]]},{"name":"apoio","events":["issues"],"supported_events":["issues"],"schema":[["string","subdomain"],["string","token"]]},{"name":"appharbor","events":["push"],"supported_events":["push"],"schema":[["string","application_slug"],["string","token"]]},{"name":"apropos","events":["commit_comment","issues","issue_comment","pull_request","push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","project_id"]]},{"name":"asana","events":["push"],"supported_events":["push"],"schema":[["string","auth_token"],["string","restrict_to_branch"],["boolean","restrict_to_last_commit"]]},{"name":"backlog","events":["push"],"supported_events":["push"],"schema":[["string","api_url"],["string","user_id"],["password","password"]]},{"name":"bamboo","events":["push"],"supported_events":["push"],"schema":[["string","base_url"],["string","build_key"],["string","username"],["password","password"]]},{"name":"basecamp","events":["push"],"supported_events":["push"],"schema":[["string","url"],["string","project"],["string","category"],["string","username"],["password","password"],["boolean","ssl"]]},{"name":"bcx","events":["push","pull_request","issues"],"supported_events":["issues","pull_request","push"],"schema":[["string","project_url"],["string","email_address"],["password","password"]]},{"name":"blimp","events":["issues","issue_comment"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","project_url"],["string","username"],["string","goal_title"],["password","api_key"]]},{"name":"boxcar","events":["push"],"supported_events":["push"],"schema":[["string","subscribers"]]},{"name":"buddycloud","events":["push"],"supported_events":["push"],"schema":[["string","buddycloud_base_api"],["string","username"],["string","password"],["string","channel"],["password","password"],["boolean","show_commit_summary"],["boolean","show_commit_detail"]]},{"name":"bugherd","events":["issues","issue_comment","push"],"supported_events":["issue_comment","issues","push"],"schema":[["string","project_key"]]},{"name":"bugly","events":["push"],"supported_events":["push"],"schema":[["string","project_id"],["string","account_name"],["string","token"]]},{"name":"bugzilla","events":["push"],"supported_events":["push"],"schema":[["string","server_url"],["string","username"],["string","integration_branch"],["password","password"],["boolean","central_repository"]]},{"name":"campfire","events":["push","pull_request","issues"],"supported_events":["gollum","issues","public","pull_request","push"],"schema":[["string","subdomain"],["string","room"],["string","token"],["string","sound"],["boolean","master_only"],["boolean","play_sound"],["boolean","long_url"]]},{"name":"cia","events":["push"],"supported_events":["push"],"schema":[["string","address"],["string","project"],["string","branch"],["string","module"],["boolean","long_url"],["boolean","full_commits"]]},{"name":"circleci","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[]},{"name":"codeclimate","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"codeportingcsharp2java","events":["push"],"supported_events":["push"],"schema":[["string","project_name"],["string","repo_key"],["string","target_repo_key"],["string","codeporting_username"],["password","codeporting_password"],["string","github_access_token"]]},{"name":"codeship","events":["push"],"supported_events":["push"],"schema":[["string","project_uuid"]]},{"name":"coffeedocinfo","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[]},{"name":"conductor","events":["push"],"supported_events":["push"],"schema":[["string","api_key"]]},{"name":"coop","events":["push"],"supported_events":["push"],"schema":[["string","group_id"],["string","token"]]},{"name":"copperegg","events":["push"],"supported_events":["push"],"schema":[["string","url"],["string","tag"],["boolean","master_only"],["string","api_key"]]},{"name":"cube","events":["push"],"supported_events":["push"],"schema":[["string","domain"],["string","project"],["string","token"]]},{"name":"depending","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"deployhq","events":["push"],"supported_events":["push"],"schema":[["string","deploy_hook_url"],["boolean","email_pusher"]]},{"name":"devaria","events":["push","member","public","issues","gollum"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","project_name"],["string","username"],["string","user_class_id"]]},{"name":"docker","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[]},{"name":"ducksboard","events":["push","issues","fork","watch"],"supported_events":["fork","issues","push","watch"],"schema":[["string","webhook_key"]]},{"name":"email","events":["push"],"supported_events":["public","push"],"schema":[["string","address"],["password","secret"],["boolean","send_from_author"]]},{"name":"firebase","events":["push"],"supported_events":["push"],"schema":[["string","firebase"],["string","secret"]]},{"name":"fisheye","events":["push"],"supported_events":["push"],"schema":[["string","url_base"],["string","token"],["string","repository_name"]]},{"name":"flowdock","events":["commit_comment","gollum","issues","issue_comment","pull_request","push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"]]},{"name":"fogbugz","events":["push"],"supported_events":["push"],"schema":[["string","cvssubmit_url"],["string","fb_repoid"],["string","fb_version"]]},{"name":"freckle","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","subdomain"],["string","project"],["string","token"]]},{"name":"friendfeed","events":["push"],"supported_events":["push"],"schema":[["string","nickname"],["string","remotekey"]]},{"name":"gemini","events":["push"],"supported_events":["push"],"schema":[["string","server_url"],["string","api_key"]]},{"name":"gemnasium","events":["push"],"supported_events":["push"],"schema":[["string","user"],["string","token"]]},{"name":"geocommit","events":["push"],"supported_events":["push"],"schema":[]},{"name":"getlocalization","events":["push"],"supported_events":["push"],"schema":[["string","project_name"],["string","project_token"]]},{"name":"gitlive","events":["push"],"supported_events":["push"],"schema":[]},{"name":"grmble","events":["push"],"supported_events":["push"],"schema":[["string","room_api_url"],["string","token"]]},{"name":"grouptalent","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"grove","events":["commit_comment","gollum","issues","issue_comment","pull_request","push"],"supported_events":["push"],"schema":[["string","channel_token"]]},{"name":"habitualist","events":["push"],"supported_events":["push"],"schema":[]},{"name":"hakiri","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"],["string","project_id"]]},{"name":"hall","events":["commit_comment","gollum","issues","issue_comment","pull_request","push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","room_token"]]},{"name":"harvest","events":["push"],"supported_events":["push"],"schema":[["string","subdomain"],["string","username"],["password","password"],["boolean","ssl"]]},{"name":"hipchat","events":["commit_comment","download","fork","fork_apply","gollum","issues","issue_comment","member","public","pull_request","push","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","auth_token"],["string","room"],["string","restrict_to_branch"],["boolean","notify"],["boolean","quiet_fork"],["boolean","quiet_watch"],["boolean","quiet_comments"]]},{"name":"hostedgraphite","events":["push"],"supported_events":["push"],"schema":[["string","api_key"]]},{"name":"hubcap","events":["push"],"supported_events":["push"],"schema":[]},{"name":"hubci","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"humbug","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","push","team_add","watch","pull_request_review_comment","status"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","email"],["string","api_key"],["string","stream"],["string","branches"]]},{"name":"icescrum","events":["push"],"supported_events":["push"],"schema":[["string","base_url"],["string","project_key"],["string","username"],["password","password"]]},{"name":"irc","events":["push","pull_request"],"supported_events":["commit_comment","issue_comment","issues","pull_request","pull_request_review_comment","push"],"schema":[["string","server"],["string","port"],["string","room"],["string","nick"],["string","branch_regexes"],["string","nickserv_password"],["password","password"],["boolean","ssl"],["boolean","message_without_join"],["boolean","no_colors"],["boolean","long_url"],["boolean","notice"]]},{"name":"irker","events":["push"],"supported_events":["push"],"schema":[["string","address"],["string","project"],["string","branch"],["string","module"],["string","channels"],["boolean","long_url"],["boolean","color"],["boolean","full_commits"]]},{"name":"ironmq","events":["commit_comment","download","fork","fork_apply","gollum","issues","issue_comment","member","public","pull_request","push","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"],["string","project_id"],["string","queue_name"]]},{"name":"ironworker","events":["commit_comment","download","fork","fork_apply","gollum","issues","issue_comment","member","public","pull_request","push","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"],["string","project_id"],["string","queue_name"]]},{"name":"jabber","events":["push"],"supported_events":["push"],"schema":[["string","user"]]},{"name":"jaconda","events":["commit_comment","download","fork","fork_apply","gollum","issues","issue_comment","member","public","pull_request","push","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","subdomain"],["string","room_id"],["string","room_token"],["boolean","digest"]]},{"name":"jeapie","events":["push","pull_request","commit_comment"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"]]},{"name":"jenkins","events":["push"],"supported_events":["push"],"schema":[["string","jenkins_hook_url"]]},{"name":"jenkinsgit","events":["push"],"supported_events":["push"],"schema":[["string","jenkins_url"]]},{"name":"jira","events":["push"],"supported_events":["push"],"schema":[["string","server_url"],["string","api_version"],["string","username"],["password","password"]]},{"name":"jqueryplugins","events":["push"],"supported_events":["push"],"schema":[]},{"name":"kanbanery","events":["push"],"supported_events":["push"],"schema":[["string","project_id"],["string","project_token"]]},{"name":"kickoff","events":["push"],"supported_events":["push"],"schema":[["string","project_id"],["string","project_token"]]},{"name":"leanto","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"lechat","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","webhook_url"]]},{"name":"lighthouse","events":["push"],"supported_events":["push"],"schema":[["string","subdomain"],["string","project_id"],["string","token"],["boolean","private"],["boolean","send_only_ticket_commits"]]},{"name":"lingohub","events":["push"],"supported_events":["push"],"schema":[["string","project_token"]]},{"name":"loggly","events":["push"],"supported_events":["push"],"schema":[["string","input_token"]]},{"name":"mantisbt","events":["push"],"supported_events":["push"],"schema":[["string","url"],["string","api_key"]]},{"name":"masterbranch","events":["push"],"supported_events":["push"],"schema":[]},{"name":"mqttpub","events":["push"],"supported_events":["push"],"schema":[["string","broker"],["string","port"],["string","topic"],["string","clientid"],["string","user"],["password","pass"],["boolean","retain"]]},{"name":"nma","events":["push"],"supported_events":["push"],"schema":[["string","apikey"]]},{"name":"nodejitsu","events":["push"],"supported_events":["push"],"schema":[["string","username"],["password","password"],["string","branch"],["string","endpoint"],["boolean","email_success_deploys"],["boolean","email_errors"]]},{"name":"notifo","events":["push"],"supported_events":["push"],"schema":[["string","subscribers"]]},{"name":"ontime","events":["push"],"supported_events":["push"],"schema":[["string","ontime_url"],["string","api_key"]]},{"name":"pachube","events":["push"],"supported_events":["push"],"schema":[["string","api_key"],["string","feed_id"],["string","track_branch"]]},{"name":"packagist","events":["push"],"supported_events":["push"],"schema":[["string","user"],["string","token"],["string","domain"]]},{"name":"phraseapp","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","auth_token"]]},{"name":"pivotaltracker","events":["push"],"supported_events":["push"],"schema":[["string","token"],["string","branch"],["string","endpoint"]]},{"name":"planbox","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"planio","events":["push"],"supported_events":["push"],"schema":[["string","address"],["string","project"],["string","api_key"]]},{"name":"prowl","events":["push"],"supported_events":["push"],"schema":[["string","apikey"]]},{"name":"puppetlinter","events":["push"],"supported_events":["push"],"schema":[]},{"name":"pushalot","events":["push"],"supported_events":["push"],"schema":[["string","authorization_token"]]},{"name":"pushover","events":["push"],"supported_events":["push"],"schema":[["string","user_key"],["string","device_name"]]},{"name":"pythonpackages","events":["push"],"supported_events":["push"],"schema":[]},{"name":"railsbp","events":["push"],"supported_events":["push"],"schema":[["string","railsbp_url"],["string","token"]]},{"name":"railsbrakeman","events":["push"],"supported_events":["push"],"schema":[["string","rails_brakeman_url"],["string","token"]]},{"name":"rally","events":["push"],"supported_events":["push"],"schema":[["string","server"],["string","username"],["string","workspace"],["string","repository"],["password","password"]]},{"name":"rapidpush","events":["push"],"supported_events":["push"],"schema":[["string","apikey"]]},{"name":"rationaljazzhub","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","username"],["password","password"],["string","override_server_url"]]},{"name":"rationalteamconcert","events":["push"],"supported_events":["push"],"schema":[["string","server_url"],["string","username"],["string","project_area_uuid"],["password","password"],["boolean","basic_authentication"],["boolean","no_verify_ssl"]]},{"name":"rdocinfo","events":["push"],"supported_events":["push"],"schema":[]},{"name":"readthedocs","events":["push"],"supported_events":["push"],"schema":[]},{"name":"redmine","events":["push"],"supported_events":["push"],"schema":[["string","address"],["string","project"],["string","api_key"],["boolean","fetch_commits"],["boolean","update_redmine_issues_about_commits"]]},{"name":"rubyforge","events":["push"],"supported_events":["push"],"schema":[["string","groupid"],["string","username"],["password","password"]]},{"name":"scrumdo","events":["push"],"supported_events":["push"],"schema":[["string","username"],["string","project_slug"],["password","password"]]},{"name":"shiningpanda","events":["push"],"supported_events":["push"],"schema":[["string","workspace"],["string","job"],["string","token"],["string","branches"],["string","parameters"]]},{"name":"sifter","events":["push"],"supported_events":["push"],"schema":[["string","subdomain"],["string","token"]]},{"name":"simperium","events":["push","issues","issue_comment","commit_comment","pull_request","pull_request_review_comment","watch","fork","fork_apply","member","public","team_add","status"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","app_id"],["string","token"],["string","bucket"]]},{"name":"slatebox","events":["push"],"supported_events":["push"],"schema":[["string","app_id"],["string","token"]]},{"name":"snowyevening","events":["push"],"supported_events":["push"],"schema":[["string","project"],["string","api_key"]]},{"name":"socialcast","events":["push"],"supported_events":["push"],"schema":[["string","api_domain"],["string","group_id"],["string","username"],["password","password"]]},{"name":"softlayermessaging","events":["push"],"supported_events":["push"],"schema":[["string","account"],["string","user"],["string","name"],["password","key"],["boolean","topic"]]},{"name":"sourcemint","events":["push"],"supported_events":["push"],"schema":[]},{"name":"splendidbacon","events":["push"],"supported_events":["push"],"schema":[["string","project_id"],["string","token"]]},{"name":"sprintly","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","push","team_add","watch","pull_request_review_comment","status"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","email"],["string","api_key"],["string","product_id"]]},{"name":"sqsqueue","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","aws_access_key"],["string","sqs_queue_name"],["password","aws_secret_key"]]},{"name":"stackmob","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"statusnet","events":["push"],"supported_events":["push"],"schema":[["string","server"],["string","username"],["password","password"],["boolean","digest"]]},{"name":"talker","events":["push"],"supported_events":["issues","pull_request","push"],"schema":[["string","url"],["string","token"],["boolean","digest"]]},{"name":"targetprocess","events":["push"],"supported_events":["push"],"schema":[["string","base_url"],["string","username"],["password","password"]]},{"name":"tddium","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"],["string","override_url"]]},{"name":"teamcity","events":["push"],"supported_events":["push"],"schema":[["string","base_url"],["string","build_type_id"],["string","username"],["string","branches"],["password","password"]]},{"name":"tender","events":["issues"],"supported_events":["issues","pull_request"],"schema":[["string","domain"],["string","token"]]},{"name":"tenxer","events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[]},{"name":"testpilot","events":["push"],"supported_events":["push"],"schema":[["string","token"]]},{"name":"toggl","events":["push"],"supported_events":["push"],"schema":[["string","project"],["string","api_token"]]},{"name":"trac","events":["push"],"supported_events":["push"],"schema":[["string","url"],["string","token"]]},{"name":"trajectory","events":["push"],"supported_events":["pull_request","push"],"schema":[["string","api_key"]]},{"name":"travis","events":["push","pull_request","issue_comment","public","member"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","user"],["password","token"],["string","domain"]]},{"name":"trello","events":["push","pull_request"],"supported_events":["pull_request","push"],"schema":[["string","push_list_id"],["string","pull_request_list_id"],["string","ignore_regex"],["boolean","master_only"],["password","consumer_token"]]},{"name":"twilio","events":["push"],"supported_events":["push"],"schema":[["string","account_sid"],["string","from_phone"],["string","to_phone"],["boolean","master_only"],["password","auth_token"]]},{"name":"twitter","events":["push"],"supported_events":["push"],"schema":[["string","token"],["string","secret"],["boolean","digest"],["boolean","short_format"]]},{"name":"unfuddle","events":["push"],"supported_events":["push"],"schema":[["string","subdomain"],["string","repo_id"],["string","username"],["password","password"],["boolean","httponly"]]},{"name":"web","events":["push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","url"],["string","secret"],["string","content_type"],["string","ssl_version"],["boolean","insecure_ssl"]]},{"name":"weblate","events":["push"],"supported_events":["push"],"schema":[["string","url"]]},{"name":"webtranslateit","events":["push"],"supported_events":["push"],"schema":[["string","api_key"]]},{"name":"yammer","events":["push","commit_comment","pull_request","pull_request_review_comment","public"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","token"]]},{"name":"youtrack","events":["push"],"supported_events":["push"],"schema":[["string","base_url"],["string","committers"],["string","username"],["string","branch"],["password","password"]]},{"name":"zendesk","events":["commit_comment","issues","issue_comment","pull_request","push"],"supported_events":["commit_comment","create","delete","download","follow","fork","fork_apply","gist","gollum","issue_comment","issues","member","public","pull_request","pull_request_review_comment","push","status","team_add","watch"],"schema":[["string","subdomain"],["string","username"],["password","password"]]},{"name":"zohoprojects","events":["push"],"supported_events":["push"],"schema":[["string","project_id"],["string","token"]]}]

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/compare/master...develop?page=1&per_page=250
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4870'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'b385a4bc-89bd-418f-b2ee-948a4ed67670'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '711256'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 09:04:41 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"ff2ab76c56b865233dfb98f5804276b6"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:51 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/compare/master...develop","html_url":"https://github.com/jacquev6/PyGithub/compare/master...develop","permalink_url":"https://github.com/jacquev6/PyGithub/compare/jacquev6:ed781f8...jacquev6:a659749","diff_url":"https://github.com/jacquev6/PyGithub/compare/master...develop.diff","patch_url":"https://github.com/jacquev6/PyGithub/compare/master...develop.patch","base_commit":{"sha":"ed781f8b1b96e1d2a342d36ca53114ea28862fa8","commit":{"author":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"committer":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"message":"Fix date of 1.18.0","tree":{"sha":"e90c43164378222f04883c0f6547102df818d1ef","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/e90c43164378222f04883c0f6547102df818d1ef"},"url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comment_count":0},"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","html_url":"https://github.com/jacquev6/PyGithub/commit/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8/comments","author":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"committer":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"parents":[{"sha":"2c4e3cbc24581c214f44682bfc3e7f438bae127a","url":"https://api.github.com/repos/jacquev6/PyGithub/commits/2c4e3cbc24581c214f44682bfc3e7f438bae127a","html_url":"https://github.com/jacquev6/PyGithub/commit/2c4e3cbc24581c214f44682bfc3e7f438bae127a"}]},"merge_base_commit":{"sha":"ed781f8b1b96e1d2a342d36ca53114ea28862fa8","commit":{"author":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"committer":{"name":"Vincent Jacques","email":"vincent@vincent-jacques.net","date":"2013-08-21T16:39:22Z"},"message":"Fix date of 1.18.0","tree":{"sha":"e90c43164378222f04883c0f6547102df818d1ef","url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/e90c43164378222f04883c0f6547102df818d1ef"},"url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comment_count":0},"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","html_url":"https://github.com/jacquev6/PyGithub/commit/ed781f8b1b96e1d2a342d36ca53114ea28862fa8","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/commits/ed781f8b1b96e1d2a342d36ca53114ea28862fa8/comments","author":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"committer":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"parents":[{"sha":"2c4e3cbc24581c214f44682bfc3e7f438bae127a","url":"https://api.github.com/repos/jacquev6/PyGithub/commits/2c4e3cbc24581c214f44682bfc3e7f438bae127a","html_url":"https://github.com/jacquev6/PyGithub/commit/2c4e3cbc24581c214f44682bfc3e7f438bae127a"}]},"status":"ahead","ahead_by":99,"behind_by":0,"total_commits":99,"commits":[],"files":[]}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/contents/README.rst
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4869'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '36bdc0ef-6149-4a8a-b4b5-3f8a82cf42aa'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '6577'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 21 Aug 2013 16:39:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"bbffa70478199a10902bf5da76db3481"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:57 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"name":"README.rst","path":"README.rst","sha":"7b03e11cebcf910764a583dd8be5b6824046459b","size":4271,"url":"https://api.github.com/repos/jacquev6/PyGithub/contents/README.rst?ref=master","html_url":"https://github.com/jacquev6/PyGithub/blob/master/README.rst","git_url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/7b03e11cebcf910764a583dd8be5b6824046459b","type":"file","content":"VGhpcyBpcyBhIFB5dGhvbiAoMiBhbmQgMykgbGlicmFyeSB0byBhY2Nlc3Mg\ndGhlIGBHaXRodWIgQVBJIHYzIDxodHRwOi8vZGV2ZWxvcGVyLmdpdGh1Yi5j\nb20vdjM+YF8uCldpdGggaXQsIHlvdSBjYW4gbWFuYWdlIHlvdXIgYEdpdGh1\nYiA8aHR0cDovL2dpdGh1Yi5jb20+YF8gcmVzb3VyY2VzIChyZXBvc2l0b3Jp\nZXMsIHVzZXIgcHJvZmlsZXMsIG9yZ2FuaXphdGlvbnMsIGV0Yy4pIGZyb20g\nUHl0aG9uIHNjcmlwdHMuCgpJdCBjb3ZlcnMgdGhlICoqZnVsbCoqIEFQSSAo\nZXhjZXB0IHJlY2VudCBhZGRpdGlvbnMsIHNlZSAiV2hhdCdzIG1pc3Npbmci\nIGJlbGxvdyksIGFuZCBhbGwgbWV0aG9kcyBhcmUgdGVzdGVkIGFnYWluc3Qg\ndGhlIHJlYWwgR2l0aHViIHNpdGUuCgpTaG91bGQgeW91IGhhdmUgYW55IHF1\nZXN0aW9uLCBhbnkgcmVtYXJrLCBvciBpZiB5b3UgZmluZCBhIGJ1Zywgb3Ig\naWYgdGhlcmUgaXMgc29tZXRoaW5nIHlvdSBjYW4gZG8gd2l0aCB0aGUgQVBJ\nIGJ1dCBub3Qgd2l0aCBQeUdpdGh1YiwgcGxlYXNlIGBvcGVuIGFuIGlzc3Vl\nIDxodHRwczovL2dpdGh1Yi5jb20vamFjcXVldjYvUHlHaXRodWIvaXNzdWVz\nPmBfLgoKUHlHaXRodWIgaXMgc3RhYmxlLiBJIHdpbGwgbWFpbnRhaW4gaXQg\ndXAgdG8gZGF0ZSB3aXRoIHRoZSBBUEksIGFuZCBmaXggYnVncyBpZiBhbnks\nIGJ1dCBJIGRvbid0IHBsYW4gbmV3IGhlYXZ5IGRldmVsb3BtZW50cy4KCldo\nYXQncyBuZXc/Cj09PT09PT09PT09CgoKYFZlcnNpb24gMS4xOC4wIDxodHRw\nczovL2dpdGh1Yi5jb20vamFjcXVldjYvUHlHaXRodWIvaXNzdWVzP21pbGVz\ndG9uZT0zMCZzdGF0ZT1jbG9zZWQ+YF8gKEF1Z3VzdCAyMXN0LCAyMDEzKSAo\nQsOpbm9kZXQgZWRpdGlvbikKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLQoKKiBgSXNzdWVzIDxodHRwczovL2dpdGh1Yi5jb20vamFj\ncXVldjYvUHlHaXRodWIvcHVsbC8xODE+YF8nIGBgcmVwb3NpdG9yeWBgIGF0\ndHJpYnV0ZSB3aWxsIG5ldmVyIGJlIGBgTm9uZWBgLiBUaGFuayB5b3UgYHN0\ndWdsYXNlciA8aHR0cHM6Ly9naXRodWIuY29tL3N0dWdsYXNlcj5gXyBmb3Ig\ndGhlIHB1bGwgcmVxdWVzdAoqIE5vIG1vcmUgZmFsc2UgYXNzdW1wdGlvbiBv\nbiBgcmF0ZV9saW1pdGluZyA8aHR0cHM6Ly9naXRodWIuY29tL2phY3F1ZXY2\nL1B5R2l0aHViL3B1bGwvMTg2PmBfLCBhbmQgY3JlYXRpb24gb2YgYGByYXRl\nX2xpbWl0aW5nX3Jlc2V0dGltZWBgLiBUaGFuayB5b3UgYGVkamFja3NvbiA8\naHR0cHM6Ly9naXRodWIuY29tL2VkamFja3Nvbj5gXyBmb3IgdGhlIHB1bGwg\ncmVxdWVzdAoqIGBOZXcgPGh0dHBzOi8vZ2l0aHViLmNvbS9qYWNxdWV2Ni9Q\neUdpdGh1Yi9wdWxsLzE4Nz5gXyBwYXJhbWV0ZXJzIGBgc2luY2VgYCBhbmQg\nYGB1bnRpbGBgIHRvIGBgUmVwb3NpdG9yeS5nZXRfY29tbWl0c2BgLiBUaGFu\nayB5b3UgYGFwZXRyZXNjIDxodHRwczovL2dpdGh1Yi5jb20vYXBldHJlc2M+\nYF8gZm9yIHRoZSBwdWxsIHJlcXVlc3QKKiBgQ2F0Y2ggPGh0dHBzOi8vZ2l0\naHViLmNvbS9qYWNxdWV2Ni9QeUdpdGh1Yi9wdWxsLzE4Mj5gXyBKc29uIHBh\ncnNpbmcgZXhjZXB0aW9uIGZvciBzb21lIGludGVybmFsIHNlcnZlciBlcnJv\ncnMsIGFuZCB0aHJvdyBhIGJldHRlciBleGNlcHRpb24uIFRoYW5rIHlvdSBg\nTWFya1JvZGR5IDxodHRwczovL2dpdGh1Yi5jb20vTWFya1JvZGR5PmBfIGZv\nciB0aGUgcHVsbCByZXF1ZXN0CiogYEFsbG93IDxodHRwczovL2dpdGh1Yi5j\nb20vamFjcXVldjYvUHlHaXRodWIvcHVsbC8xODQ+YF8gcmV2ZXJzZWQgaXRl\ncmF0aW9uIG9mIGBgUGFnaW5hdGVkTGlzdGBgcy4gVGhhbmsgeW91IGBkYXZp\nZGJyYWkgPGh0dHBzOi8vZ2l0aHViLmNvbS9kYXZpZGJyYWk+YF8gZm9yIHRo\nZSBwdWxsIHJlcXVlc3QKCldoYXQncyBtaXNzaW5nPwo9PT09PT09PT09PT09\nPT0KCldlIG5vdyBoYXZlIGF1dG9tYXRlZCB3YXlzIHRvIGxpc3QgVVJMcyBk\nb2N1bWVudGVkIGluIGB0aGUgcmVmZXJlbmNlIG9mIEdpdGh1YiBBUEkgdjMg\nPGh0dHA6Ly9kZXZlbG9wZXIuZ2l0aHViLmNvbT5gXyBhbmQgbm90IGNvdmVy\nZWQgYnkgUHlHaXRodWIuCgpHaXRodWIgQVBJIHYzIFVSTHMgbm90ICh5ZXQp\nIGNvdmVyZWQgYnkgUHlHaXRodWIKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t\nLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoqIGBgL2FwcGxpY2F0aW9ucy86\nY2xpZW50X2lkL3Rva2Vucy86YWNjZXNzX3Rva2VuYGAgKEdFVCkKKiBgYC9m\nZWVkc2BgIChHRVQpCiogYGAvZ2lzdHMvOmlkL2ZvcmtzYGAgKFBPU1QpCgog\nICogaW5zdGVhZCwgYGBHaXN0LmNyZWF0ZV9mb3JrYGAgY2FsbHMgdGhlIG9s\nZCBVUkwgYGAvZ2lzdHMvOmlkL2ZvcmtgYAoKKiBgYC9tZXRhYGAgKEdFVCkK\nKiBgYC9ub3RpZmljYXRpb25zYGAgKFBVVCkKKiBgYC9ub3RpZmljYXRpb25z\nL2VtYWlsc2BgIChHRVQpCiogYGAvbm90aWZpY2F0aW9ucy9lbWFpbHNgYCAo\nUEFUQ0gpCiogYGAvbm90aWZpY2F0aW9ucy9nbG9iYWwvZW1haWxzYGAgKEdF\nVCkKKiBgYC9ub3RpZmljYXRpb25zL2dsb2JhbC9lbWFpbHNgYCAoUFVUKQoq\nIGBgL25vdGlmaWNhdGlvbnMvb3JnYW5pemF0aW9uLzpvcmcvZW1haWxzYGAg\nKEdFVCkKKiBgYC9ub3RpZmljYXRpb25zL29yZ2FuaXphdGlvbi86b3JnL2Vt\nYWlsc2BgIChQVVQpCiogYGAvbm90aWZpY2F0aW9ucy9zZXR0aW5nc2BgIChH\nRVQpCiogYGAvbm90aWZpY2F0aW9ucy9zZXR0aW5nc2BgIChQQVRDSCkKKiBg\nYC9ub3RpZmljYXRpb25zL3RocmVhZHMvOmlkYGAgKFBBVENIKQoqIGBgL25v\ndGlmaWNhdGlvbnMvdGhyZWFkcy86aWQvc3Vic2NyaXB0aW9uYGAgKERFTEVU\nRSkKKiBgYC9ub3RpZmljYXRpb25zL3RocmVhZHMvOmlkL3N1YnNjcmlwdGlv\nbmBgIChHRVQpCiogYGAvbm90aWZpY2F0aW9ucy90aHJlYWRzLzppZC9zdWJz\nY3JpcHRpb25gYCAoUFVUKQoqIGBgL3JhdGVfbGltaXRgYCAoR0VUKQoKICAq\nIHNob3VsZCBiZSBjYWxsZWQgaW4gbWV0aG9kIGBgR2l0aHViLmdldF9yYXRl\nX2xpbWl0YGAuIFNlZSBhbHNvIGBgR2l0aHViLnJhdGVfbGltaXRpbmdgYAoK\nKiBgYC9yZXBvcy86b3duZXIvOnJlcG8vY29udGVudHMvOnBhdGhgYCAoREVM\nRVRFKQoqIGBgL3JlcG9zLzpvd25lci86cmVwby9jb250ZW50cy86cGF0aGBg\nIChQVVQpCiogYGAvcmVwb3MvOm93bmVyLzpyZXBvL2hvb2tzLzppZC90ZXN0\nc2BgIChQT1NUKQoKICAqIGluc3RlYWQsIGBgSG9vay50ZXN0YGAgY2FsbHMg\ndGhlIG9sZCBVUkwgYGAvcmVwb3MvOm93bmVyLzpyZXBvL2hvb2tzLzppZC90\nZXN0YGAKCiogYGAvcmVwb3MvOm93bmVyLzpyZXBvL25vdGlmaWNhdGlvbnNg\nYCAoR0VUKQoqIGBgL3JlcG9zLzpvd25lci86cmVwby9ub3RpZmljYXRpb25z\nYGAgKFBVVCkKKiBgYC9yZXBvcy86b3duZXIvOnJlcG8vc3RhdHMvY29kZV9m\ncmVxdWVuY3lgYCAoR0VUKQoqIGBgL3JlcG9zLzpvd25lci86cmVwby9zdGF0\ncy9jb21taXRfYWN0aXZpdHlgYCAoR0VUKQoqIGBgL3JlcG9zLzpvd25lci86\ncmVwby9zdGF0cy9jb250cmlidXRvcnNgYCAoR0VUKQoqIGBgL3JlcG9zLzpv\nd25lci86cmVwby9zdGF0cy9wYXJ0aWNpcGF0aW9uYGAgKEdFVCkKKiBgYC9y\nZXBvcy86b3duZXIvOnJlcG8vc3RhdHMvcHVuY2hfY2FyZGBgIChHRVQpCiog\nYGAvcmVwb3MvOm93bmVyLzpyZXBvL3N1YnNjcmlwdGlvbmBgIChERUxFVEUp\nCiogYGAvcmVwb3MvOm93bmVyLzpyZXBvL3N1YnNjcmlwdGlvbmBgIChHRVQp\nCiogYGAvcmVwb3MvOm93bmVyLzpyZXBvL3N1YnNjcmlwdGlvbmBgIChQVVQp\nCiogYGAvcmVwb3NpdG9yaWVzYGAgKEdFVCkKCiAgKiBzaG91bGQgYmUgY2Fs\nbGVkIGluIG1ldGhvZCBgYEdpdGh1Yi5nZXRfcmVwb3NgYAoKKiBgYC9zZWFy\nY2gvY29kZWBgIChHRVQpCiogYGAvc2VhcmNoL2lzc3Vlc2BgIChHRVQpCiog\nYGAvc2VhcmNoL3JlcG9zaXRvcmllc2BgIChHRVQpCiogYGAvc2VhcmNoL3Vz\nZXJzYGAgKEdFVCkKKiBgYC91c2Vycy86dXNlci9mb2xsb3dpbmcvOnRhcmdl\ndF91c2VyYGAgKEdFVCkKCiAgKiBzaG91bGQgYmUgY2FsbGVkIGluIG1ldGhv\nZCBgYE5hbWVkVXNlci5oYXNfaW5fZm9sbG93aW5nYGAKCkRvY3VtZW50YXRp\nb24KPT09PT09PT09PT09PQoKQWxsIHRoZSBkb2N1bWVudGF0aW9uIGlzIGhl\ncmU6IGh0dHA6Ly9qYWNxdWV2Ni5naXRodWIuY29tL1B5R2l0aHViLgo=\n","encoding":"base64","_links":{"self":"https://api.github.com/repos/jacquev6/PyGithub/contents/README.rst?ref=master","git":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs/7b03e11cebcf910764a583dd8be5b6824046459b","html":"https://github.com/jacquev6/PyGithub/blob/master/README.rst"}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/events
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4868'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'aad86338-b4d2-44ad-b094-37965f99ed02'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '150840'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('link', '<https://api.github.com/repositories/3544490/events?page=2>; rel="next"'), ('etag', '"815ffb5687c4d26df4a1e81e5de3ac7e"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:05:58 GMT'), ('access-control-allow-origin', '*'), ('x-poll-interval', '60'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
[{"id":"1823555573","type":"DeleteEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"ref":"topic/ImproveDocumentation","ref_type":"branch"},"public":true,"created_at":"2013-09-06T12:41:05Z"},{"id":"1823554600","type":"DeleteEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"ref":"topic/SpecificExceptions","ref_type":"branch"},"public":true,"created_at":"2013-09-06T12:39:45Z"},{"id":"1823452056","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/163","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/163/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/163/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/163/events","html_url":"https://github.com/jacquev6/PyGithub/issues/163","id":13924435,"number":163,"title":"Looking to help out","user":{"login":"shercoder","id":1681066,"avatar_url":"https://1.gravatar.com/avatar/3bc7caad2383726988f7834c6800f7f9?d=https%3A%2F%2Fidenticons.github.com%2F902797e4e8c74be19dce4e4640f8b455.png","gravatar_id":"3bc7caad2383726988f7834c6800f7f9","url":"https://api.github.com/users/shercoder","html_url":"https://github.com/shercoder","followers_url":"https://api.github.com/users/shercoder/followers","following_url":"https://api.github.com/users/shercoder/following{/other_user}","gists_url":"https://api.github.com/users/shercoder/gists{/gist_id}","starred_url":"https://api.github.com/users/shercoder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shercoder/subscriptions","organizations_url":"https://api.github.com/users/shercoder/orgs","repos_url":"https://api.github.com/users/shercoder/repos","events_url":"https://api.github.com/users/shercoder/events{/privacy}","received_events_url":"https://api.github.com/users/shercoder/received_events","type":"User"},"labels":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Question","name":"Question","color":"02e10c"}],"state":"open","assignee":null,"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/28","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/28/labels","id":358501,"number":28,"title":"Issues assigned to volunteers","description":"This (fake) milestone groups all issues on which a volunteer is working.","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":0,"state":"open","created_at":"2013-06-18T20:42:13Z","updated_at":"2013-08-20T21:27:13Z","due_on":null},"comments":3,"created_at":"2013-05-03T07:39:10Z","updated_at":"2013-09-06T10:04:19Z","closed_at":null,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"Hey my friend introduced me to your project and we have already started to use it in our small projects.I am looking to help out. Is there anything that i can do to help out in your project. If there is anything that I can help you with, please let me know. Thank you"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23930309","html_url":"https://github.com/jacquev6/PyGithub/issues/163#issuecomment-23930309","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/163","id":23930309,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-06T10:04:19Z","updated_at":"2013-09-06T10:04:19Z","body":"Update: some missing functionalities are now listed in [README.rst](https://github.com/jacquev6/PyGithub/blob/master/README.rst)"}},"public":true,"created_at":"2013-09-06T10:04:19Z"},{"id":"1823450347","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/179","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/179/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/179/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/179/events","html_url":"https://github.com/jacquev6/PyGithub/pull/179","id":15885976,"number":179,"title":"Automatic rety, empty repo handling and updated arguments for get_commits","user":{"login":"wcdolphin","id":446889,"avatar_url":"https://1.gravatar.com/avatar/3202f845a8cafe9729d397649dfadd3a?d=https%3A%2F%2Fidenticons.github.com%2F37f8d4e8ebdd8ce92fbb3503fe9aa31a.png","gravatar_id":"3202f845a8cafe9729d397649dfadd3a","url":"https://api.github.com/users/wcdolphin","html_url":"https://github.com/wcdolphin","followers_url":"https://api.github.com/users/wcdolphin/followers","following_url":"https://api.github.com/users/wcdolphin/following{/other_user}","gists_url":"https://api.github.com/users/wcdolphin/gists{/gist_id}","starred_url":"https://api.github.com/users/wcdolphin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wcdolphin/subscriptions","organizations_url":"https://api.github.com/users/wcdolphin/orgs","repos_url":"https://api.github.com/users/wcdolphin/repos","events_url":"https://api.github.com/users/wcdolphin/events{/privacy}","received_events_url":"https://api.github.com/users/wcdolphin/received_events","type":"User"},"labels":[],"state":"open","assignee":null,"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/28","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/28/labels","id":358501,"number":28,"title":"Issues assigned to volunteers","description":"This (fake) milestone groups all issues on which a volunteer is working.","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":0,"state":"open","created_at":"2013-06-18T20:42:13Z","updated_at":"2013-08-20T21:27:13Z","due_on":null},"comments":3,"created_at":"2013-06-22T15:59:01Z","updated_at":"2013-09-06T10:02:07Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/179","diff_url":"https://github.com/jacquev6/PyGithub/pull/179.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/179.patch"},"body":"This PR adds:\r\n1. Automatic retrying on failure of an idempotent request, up to a default of 5 times.\r\n2. Handling and raising of EmptyRepositoryException which can be emitted by a call to get_commits\r\n3. Updated arguments for Repository.get_commits, reflecting the url_params for Github API V3\r\n\r\nPlease let me know if you have any feedback on style, etc. I will happily address. \r\n "},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23930203","html_url":"https://github.com/jacquev6/PyGithub/pull/179#issuecomment-23930203","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/179","id":23930203,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-06T10:02:07Z","updated_at":"2013-09-06T10:02:07Z","body":"Hello @wcdolphin,\r\n\r\ndo you still plan to work on this? If not, it's not a problem. I ask you this now because I'm going to have time to do it on my side in the coming days.\r\n\r\nThanks,"}},"public":true,"created_at":"2013-09-06T10:02:07Z"},{"id":"1823413095","type":"IssuesEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/events","html_url":"https://github.com/jacquev6/PyGithub/issues/188","id":17736533,"number":188,"title":"Getting the status of GitHub","user":{"login":"ruxandraburtica","id":797922,"avatar_url":"https://2.gravatar.com/avatar/5703c5907fc67b679be40fd307b07733?d=https%3A%2F%2Fidenticons.github.com%2F470a720db37e19afad67c34e30ffcd85.png","gravatar_id":"5703c5907fc67b679be40fd307b07733","url":"https://api.github.com/users/ruxandraburtica","html_url":"https://github.com/ruxandraburtica","followers_url":"https://api.github.com/users/ruxandraburtica/followers","following_url":"https://api.github.com/users/ruxandraburtica/following{/other_user}","gists_url":"https://api.github.com/users/ruxandraburtica/gists{/gist_id}","starred_url":"https://api.github.com/users/ruxandraburtica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruxandraburtica/subscriptions","organizations_url":"https://api.github.com/users/ruxandraburtica/orgs","repos_url":"https://api.github.com/users/ruxandraburtica/repos","events_url":"https://api.github.com/users/ruxandraburtica/events{/privacy}","received_events_url":"https://api.github.com/users/ruxandraburtica/received_events","type":"User"},"labels":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Functionalities","name":"Functionalities","color":"e102d8"},{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Requested+by+user","name":"Requested by user","color":"e10c02"}],"state":"closed","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":1,"closed_issues":3,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T09:11:57Z","due_on":null},"comments":2,"created_at":"2013-08-07T08:57:49Z","updated_at":"2013-09-06T09:11:57Z","closed_at":"2013-09-06T09:11:57Z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"Maybe I haven't found it, but it would be very useful to have methods for checking the status of the GitHub API (https://status.github.com/api)"}},"public":true,"created_at":"2013-09-06T09:11:58Z"},{"id":"1823413094","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/events","html_url":"https://github.com/jacquev6/PyGithub/issues/188","id":17736533,"number":188,"title":"Getting the status of GitHub","user":{"login":"ruxandraburtica","id":797922,"avatar_url":"https://2.gravatar.com/avatar/5703c5907fc67b679be40fd307b07733?d=https%3A%2F%2Fidenticons.github.com%2F470a720db37e19afad67c34e30ffcd85.png","gravatar_id":"5703c5907fc67b679be40fd307b07733","url":"https://api.github.com/users/ruxandraburtica","html_url":"https://github.com/ruxandraburtica","followers_url":"https://api.github.com/users/ruxandraburtica/followers","following_url":"https://api.github.com/users/ruxandraburtica/following{/other_user}","gists_url":"https://api.github.com/users/ruxandraburtica/gists{/gist_id}","starred_url":"https://api.github.com/users/ruxandraburtica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruxandraburtica/subscriptions","organizations_url":"https://api.github.com/users/ruxandraburtica/orgs","repos_url":"https://api.github.com/users/ruxandraburtica/repos","events_url":"https://api.github.com/users/ruxandraburtica/events{/privacy}","received_events_url":"https://api.github.com/users/ruxandraburtica/received_events","type":"User"},"labels":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Functionalities","name":"Functionalities","color":"e102d8"},{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Requested+by+user","name":"Requested by user","color":"e10c02"}],"state":"closed","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":1,"closed_issues":3,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T09:11:57Z","due_on":null},"comments":2,"created_at":"2013-08-07T08:57:49Z","updated_at":"2013-09-06T09:11:57Z","closed_at":"2013-09-06T09:11:57Z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"Maybe I haven't found it, but it would be very useful to have methods for checking the status of the GitHub API (https://status.github.com/api)"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23927975","html_url":"https://github.com/jacquev6/PyGithub/issues/188#issuecomment-23927975","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","id":23927975,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-06T09:11:57Z","updated_at":"2013-09-06T09:11:57Z","body":"Done, will be in next release!"}},"public":true,"created_at":"2013-09-06T09:11:58Z"},{"id":"1823408513","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":225103902,"size":5,"distinct_size":5,"ref":"refs/heads/develop","head":"a6597499c2f82e063074a3036d875417d5efa296","before":"1d0ba7ef6461ccdd25af74bfed61d3ceb5bc926d","commits":[{"sha":"dc610dfaac50dd5bbbd572986cda35f6729aee5b","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Small fixes and todos","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/dc610dfaac50dd5bbbd572986cda35f6729aee5b"},{"sha":"2081675afbfed404f6a580bce0ec363bebbfd98b","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Fix doc generation","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/2081675afbfed404f6a580bce0ec363bebbfd98b"},{"sha":"f2feb81dae1b28af80c559db7328f2d6fe017911","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Add default parameters to greatly reduce code redoundancy","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/f2feb81dae1b28af80c559db7328f2d6fe017911"},{"sha":"c819580ce872f251e8ec23deee95d9fb15ca19c9","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Get status of Github API (#188)","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/c819580ce872f251e8ec23deee95d9fb15ca19c9"},{"sha":"a6597499c2f82e063074a3036d875417d5efa296","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Merge branch 'topic/ApiStatus' into develop","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/a6597499c2f82e063074a3036d875417d5efa296"}]},"public":true,"created_at":"2013-09-06T09:05:12Z"},{"id":"1823374294","type":"PullRequestEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"closed","number":193,"pull_request":{"url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/193","id":7785326,"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch","issue_url":"https://github.com/jacquev6/PyGithub/pull/193","number":193,"state":"closed","title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```","created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-06T08:15:35Z","closed_at":"2013-09-06T08:15:35Z","merged_at":null,"merge_commit_sha":"de0e83166f4cc5d6cb177b12b313bb0844e89a12","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":2,"closed_issues":2,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T08:15:35Z","due_on":null},"commits_url":"https://github.com/jacquev6/PyGithub/pull/193/commits","review_comments_url":"https://github.com/jacquev6/PyGithub/pull/193/comments","review_comment_url":"/repos/jacquev6/PyGithub/pulls/comments/{number}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","head":{"label":"akfish:NewFix","ref":"NewFix","sha":"ebbfec86a2fb352cc08e3595a6b58fa1ccccc111","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"repo":{"id":12156762,"name":"PyGithub","full_name":"akfish/PyGithub","owner":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"private":false,"html_url":"https://github.com/akfish/PyGithub","description":"Python library implementing the full Github API v3 - AKFish Fork","fork":true,"url":"https://api.github.com/repos/akfish/PyGithub","forks_url":"https://api.github.com/repos/akfish/PyGithub/forks","keys_url":"https://api.github.com/repos/akfish/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/akfish/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/akfish/PyGithub/teams","hooks_url":"https://api.github.com/repos/akfish/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/akfish/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/akfish/PyGithub/events","assignees_url":"https://api.github.com/repos/akfish/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/akfish/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/akfish/PyGithub/tags","blobs_url":"https://api.github.com/repos/akfish/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/akfish/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/akfish/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/akfish/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/akfish/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/akfish/PyGithub/languages","stargazers_url":"https://api.github.com/repos/akfish/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/akfish/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/akfish/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/akfish/PyGithub/subscription","commits_url":"https://api.github.com/repos/akfish/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/akfish/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/akfish/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/akfish/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/akfish/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/akfish/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/akfish/PyGithub/merges","archive_url":"https://api.github.com/repos/akfish/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/akfish/PyGithub/downloads","issues_url":"https://api.github.com/repos/akfish/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/akfish/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/akfish/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/akfish/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/akfish/PyGithub/labels{/name}","created_at":"2013-08-16T10:56:11Z","updated_at":"2013-09-06T08:15:35Z","pushed_at":"2013-08-27T11:14:27Z","git_url":"git://github.com/akfish/PyGithub.git","ssh_url":"git@github.com:akfish/PyGithub.git","clone_url":"https://github.com/akfish/PyGithub.git","svn_url":"https://github.com/akfish/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":7340,"watchers_count":0,"language":"Python","has_issues":false,"has_downloads":true,"has_wiki":true,"forks_count":1,"mirror_url":null,"open_issues_count":0,"forks":1,"open_issues":0,"watchers":0,"master_branch":"master","default_branch":"master"}},"base":{"label":"jacquev6:develop","ref":"develop","sha":"ba5b0d5ea93d362ecd8b5a91701a9c62c385d008","user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"repo":{"id":3544490,"name":"PyGithub","full_name":"jacquev6/PyGithub","owner":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"private":false,"html_url":"https://github.com/jacquev6/PyGithub","description":"Python library implementing the full Github API v3","fork":false,"url":"https://api.github.com/repos/jacquev6/PyGithub","forks_url":"https://api.github.com/repos/jacquev6/PyGithub/forks","keys_url":"https://api.github.com/repos/jacquev6/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/jacquev6/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/jacquev6/PyGithub/teams","hooks_url":"https://api.github.com/repos/jacquev6/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/jacquev6/PyGithub/events","assignees_url":"https://api.github.com/repos/jacquev6/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/jacquev6/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/jacquev6/PyGithub/tags","blobs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/jacquev6/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/jacquev6/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/jacquev6/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/jacquev6/PyGithub/languages","stargazers_url":"https://api.github.com/repos/jacquev6/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/jacquev6/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/jacquev6/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/jacquev6/PyGithub/subscription","commits_url":"https://api.github.com/repos/jacquev6/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/jacquev6/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/jacquev6/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/jacquev6/PyGithub/merges","archive_url":"https://api.github.com/repos/jacquev6/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/jacquev6/PyGithub/downloads","issues_url":"https://api.github.com/repos/jacquev6/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/jacquev6/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/jacquev6/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/labels{/name}","created_at":"2012-02-25T12:53:47Z","updated_at":"2013-09-06T08:12:07Z","pushed_at":"2013-09-06T08:12:06Z","git_url":"git://github.com/jacquev6/PyGithub.git","ssh_url":"git@github.com:jacquev6/PyGithub.git","clone_url":"https://github.com/jacquev6/PyGithub.git","svn_url":"https://github.com/jacquev6/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":828,"watchers_count":256,"language":"Python","has_issues":true,"has_downloads":true,"has_wiki":true,"forks_count":76,"mirror_url":null,"open_issues_count":16,"forks":76,"open_issues":16,"watchers":256,"master_branch":"master","default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/193"},"html":{"href":"https://github.com/jacquev6/PyGithub/pull/193"},"issue":{"href":"https://api.github.com/repos/jacquev6/PyGithub/issues/193"},"comments":{"href":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments"},"review_comments":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/193/comments"}},"merged":false,"mergeable":false,"mergeable_state":"dirty","merged_by":null,"comments":12,"review_comments":1,"commits":40,"additions":1669,"deletions":45,"changed_files":41}},"public":true,"created_at":"2013-09-06T08:15:35Z"},{"id":"1823374292","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/pull/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://0.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"closed","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":2,"closed_issues":2,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T08:15:35Z","due_on":null},"comments":12,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-06T08:15:35Z","closed_at":"2013-09-06T08:15:35Z","pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23925438","html_url":"https://github.com/jacquev6/PyGithub/pull/193#issuecomment-23925438","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23925438,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-06T08:15:35Z","updated_at":"2013-09-06T08:15:35Z","body":"I'm glad it suits your needs, I've just merged conditional requests and persistence in the `develop` branch. It will be in next release, probably this week-end.\r\n\r\nIt has been a pleasure to collaborate with you, thank you :-)"}},"public":true,"created_at":"2013-09-06T08:15:35Z"},{"id":"1823372143","type":"DeleteEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"ref":"topic/ConditionalRequest","ref_type":"branch"},"public":true,"created_at":"2013-09-06T08:12:07Z"},{"id":"1823371399","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":225082808,"size":28,"distinct_size":4,"ref":"refs/heads/develop","head":"1d0ba7ef6461ccdd25af74bfed61d3ceb5bc926d","before":"ba5b0d5ea93d362ecd8b5a91701a9c62c385d008","commits":[{"sha":"b71329e560795a4df84cb419178ef660824f4c0d","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Implement data persistence","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/b71329e560795a4df84cb419178ef660824f4c0d"},{"sha":"bd7abb58772ae1a61fd7eb44308a3a2f60432ad6","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Add update() method","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/bd7abb58772ae1a61fd7eb44308a3a2f60432ad6"},{"sha":"1e9ec2df089973db73aaf99b4ef147efd4614e7c","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Add NotModifiedException class","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/1e9ec2df089973db73aaf99b4ef147efd4614e7c"},{"sha":"6fd05baf6bea732dd846e08c40891c28060e7c64","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Handle response code 304","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/6fd05baf6bea732dd846e08c40891c28060e7c64"},{"sha":"5b09f6c82191601cad92076ad4761fe927c511ed","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Implement conditional request","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/5b09f6c82191601cad92076ad4761fe927c511ed"},{"sha":"70a7e9c83dec2bf6b549dc5c77d30b53afb32457","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Fix update","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/70a7e9c83dec2bf6b549dc5c77d30b53afb32457"},{"sha":"d457afd23ccb47d9f30f09a6ca2a8e32f17dccc7","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Add test record helper","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/d457afd23ccb47d9f30f09a6ca2a8e32f17dccc7"},{"sha":"c7593e84c4a92a044b717b7311c2b6ad8d9a5917","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Add test case for conditional request","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/c7593e84c4a92a044b717b7311c2b6ad8d9a5917"},{"sha":"cc1bcd5f2da1982a0836a488cf321d363bfcf5b5","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Merge branch 'develop' into topic/ConditionalRequest\n\nConflicts:\n\t.gitignore\n\tgithub/Requester.py","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/cc1bcd5f2da1982a0836a488cf321d363bfcf5b5"},{"sha":"1787765a61958617d47e764a0bea2acd70c84f72","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Review of #189: use dict.get\n\nhttp://docs.python.org/2/library/stdtypes.html#dict.get","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/1787765a61958617d47e764a0bea2acd70c84f72"},{"sha":"0f74e4389b3c0fa57a83083ecfbbf5c331022674","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Review of #189: pep8, copyrights, style, remarks\n\nFor remarks, run: git grep \"#189\"\nThey are only my first thoughts while reviewing this pull request,\nand should be reviewed themselves.","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/0f74e4389b3c0fa57a83083ecfbbf5c331022674"},{"sha":"fb7325884ee0b8ae73f47bf13c6f36cacbc3131c","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Fix remarks on #189 to #193","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/fb7325884ee0b8ae73f47bf13c6f36cacbc3131c"},{"sha":"0413c87c12e688fb4fc38d978a2f275ef791cd48","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Remove _record_.py (#193)\n\nAccording to https://github.com/jacquev6/PyGithub/commit/0f74e4389b3c0fa57a83083ecfbbf5c331022674#commitcomment-3919786","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/0413c87c12e688fb4fc38d978a2f275ef791cd48"},{"sha":"bc3b819ac554a2132427c9ffe629ef371511213e","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Separate tests for conditional requests (#193)","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/bc3b819ac554a2132427c9ffe629ef371511213e"},{"sha":"bae0a37d180a4b224c6aa808d03722908109c57d","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"#193: Don't use a try-except for a usual execution flow in GithubObject.update\n\n(and factorize assignment of headers in _storeAndUseAttributes,\nas done for rawData)","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/bae0a37d180a4b224c6aa808d03722908109c57d"},{"sha":"03d7fb012e9d032165c43f93a4c67bc29af9366f","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"#193: Add remarks","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/03d7fb012e9d032165c43f93a4c67bc29af9366f"},{"sha":"64cf539c83174f95b3410c7decd2549424385ce1","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"#193: Add a param to Requester.requestXxx for request headers","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/64cf539c83174f95b3410c7decd2549424385ce1"},{"sha":"e084b5138106d4ad371a69ca9519862f09c855ae","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"#193: Fix test coverage","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/e084b5138106d4ad371a69ca9519862f09c855ae"},{"sha":"020a3c9917f42d98c1761527825061d2db8352fd","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Move method update to CompletableGithubObject","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/020a3c9917f42d98c1761527825061d2db8352fd"},{"sha":"fb6980ce36766e4dd1ab03b48ac4b5adf876dc84","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Move the DEBUG_ON_RESPONSE call to Requester.__requestEncode","distinct":false,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/fb6980ce36766e4dd1ab03b48ac4b5adf876dc84"}]},"public":true,"created_at":"2013-09-06T08:10:53Z"},{"id":"1823216085","type":"IssueCommentEvent","actor":{"id":922715,"login":"akfish","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","avatar_url":"https://0.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/pull/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://1.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":11,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-06T02:24:06Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23915193","html_url":"https://github.com/jacquev6/PyGithub/pull/193#issuecomment-23915193","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23915193,"user":{"login":"akfish","id":922715,"avatar_url":"https://1.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"created_at":"2013-09-06T02:24:06Z","updated_at":"2013-09-06T02:24:06Z","body":"Well, never mind my previous comments. I think your implementation will work nicely.\r\nThough the pickle format cross-version compatibility still troubles me. I will try it out with some projects and see if a more flexible serialization mechanism (i.e. let developer specify which serializer to use, pickle, JSON, XML and etc)  is necessary. \r\nFor now I am happy with that. Thanks."}},"public":true,"created_at":"2013-09-06T02:24:07Z"},{"id":"1823212876","type":"ForkEvent","actor":{"id":1676891,"login":"wadewilliams","gravatar_id":"21a241aa10ee457a5f6b72aca98a4860","url":"https://api.github.com/users/wadewilliams","avatar_url":"https://1.gravatar.com/avatar/21a241aa10ee457a5f6b72aca98a4860?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"forkee":{"id":12633886,"name":"PyGithub","full_name":"wadewilliams/PyGithub","owner":{"login":"wadewilliams","id":1676891,"avatar_url":"https://0.gravatar.com/avatar/21a241aa10ee457a5f6b72aca98a4860?d=https%3A%2F%2Fidenticons.github.com%2F49f04213eb6f9bbf8e6ec031c55c4e31.png","gravatar_id":"21a241aa10ee457a5f6b72aca98a4860","url":"https://api.github.com/users/wadewilliams","html_url":"https://github.com/wadewilliams","followers_url":"https://api.github.com/users/wadewilliams/followers","following_url":"https://api.github.com/users/wadewilliams/following{/other_user}","gists_url":"https://api.github.com/users/wadewilliams/gists{/gist_id}","starred_url":"https://api.github.com/users/wadewilliams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wadewilliams/subscriptions","organizations_url":"https://api.github.com/users/wadewilliams/orgs","repos_url":"https://api.github.com/users/wadewilliams/repos","events_url":"https://api.github.com/users/wadewilliams/events{/privacy}","received_events_url":"https://api.github.com/users/wadewilliams/received_events","type":"User"},"private":false,"html_url":"https://github.com/wadewilliams/PyGithub","description":"Python library implementing the full Github API v3","fork":true,"url":"https://api.github.com/repos/wadewilliams/PyGithub","forks_url":"https://api.github.com/repos/wadewilliams/PyGithub/forks","keys_url":"https://api.github.com/repos/wadewilliams/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/wadewilliams/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/wadewilliams/PyGithub/teams","hooks_url":"https://api.github.com/repos/wadewilliams/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/wadewilliams/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/wadewilliams/PyGithub/events","assignees_url":"https://api.github.com/repos/wadewilliams/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/wadewilliams/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/wadewilliams/PyGithub/tags","blobs_url":"https://api.github.com/repos/wadewilliams/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/wadewilliams/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/wadewilliams/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/wadewilliams/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/wadewilliams/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/wadewilliams/PyGithub/languages","stargazers_url":"https://api.github.com/repos/wadewilliams/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/wadewilliams/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/wadewilliams/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/wadewilliams/PyGithub/subscription","commits_url":"https://api.github.com/repos/wadewilliams/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/wadewilliams/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/wadewilliams/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/wadewilliams/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/wadewilliams/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/wadewilliams/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/wadewilliams/PyGithub/merges","archive_url":"https://api.github.com/repos/wadewilliams/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/wadewilliams/PyGithub/downloads","issues_url":"https://api.github.com/repos/wadewilliams/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/wadewilliams/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/wadewilliams/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/wadewilliams/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/wadewilliams/PyGithub/labels{/name}","created_at":"2013-09-06T02:17:04Z","updated_at":"2013-09-06T02:17:04Z","pushed_at":"2013-09-05T15:53:48Z","git_url":"git://github.com/wadewilliams/PyGithub.git","ssh_url":"git@github.com:wadewilliams/PyGithub.git","clone_url":"https://github.com/wadewilliams/PyGithub.git","svn_url":"https://github.com/wadewilliams/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":824,"watchers_count":0,"language":"Python","has_issues":false,"has_downloads":true,"has_wiki":true,"forks_count":0,"mirror_url":null,"open_issues_count":0,"forks":0,"open_issues":0,"watchers":0,"master_branch":"master","default_branch":"master","public":true}},"public":true,"created_at":"2013-09-06T02:17:05Z"},{"id":"1822756531","type":"IssueCommentEvent","actor":{"id":922715,"login":"akfish","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","avatar_url":"https://0.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/issues/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":10,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-05T17:00:40Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23883975","html_url":"https://github.com/jacquev6/PyGithub/issues/193#issuecomment-23883975","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23883975,"user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"created_at":"2013-09-05T17:00:40Z","updated_at":"2013-09-05T17:00:40Z","body":"After some quick scanning of the code, recursively reviving will likely not be an issue. We can just invoke ```_useAttributes``` somehow after ```requester``` is set. That should (re)initialize children with correct info. "}},"public":true,"created_at":"2013-09-05T17:00:41Z"},{"id":"1822742910","type":"IssueCommentEvent","actor":{"id":922715,"login":"akfish","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","avatar_url":"https://0.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/issues/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":9,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-05T16:47:24Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23882993","html_url":"https://github.com/jacquev6/PyGithub/issues/193#issuecomment-23882993","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23882993,"user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"created_at":"2013-09-05T16:47:24Z","updated_at":"2013-09-05T16:47:24Z","body":"OK. I will take a look at it in detail tomorrow. Just some quick thoughts:\r\n* It's my oversight that ```__setstate__``` does not implement all ```__init__``` behaviors. That can be easily fixed, since all ```Github.create_from_raw_data``` does is to invoke the constructor. \r\n* I will check on the recursively revive thing. It might be possible to simply introduce a bool flag for status checking and do it lazily when required. And if I understand it correctly, ```Github.create_from_raw_data``` will have the very same issue.\r\n* An alternative for revive is customize the getter for ```self._requester``` that fetches ```requester``` from current ```Github``` instance. Do this in base class, it should then automatically solve every thing, children or not. No \"dead\" objects will exist since they will all be lazily alive.\r\n\r\nSo I think bottom line is to make all the objects serializable and serialize-safe by keep ```__getstate___``` and ```__setstate__```, as long as we can get the initialization right (as ```Github.create_from_raw_data``` does). \r\nAs for the serialization, I am not a big fan on current implementation since I discovery the 2.x and 3.x pickle formats are not compatible. Well, maybe just keep it as an open option and let developers choose whatever methods they want."}},"public":true,"created_at":"2013-09-05T16:47:24Z"},{"id":"1822685130","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":224708516,"size":1,"distinct_size":1,"ref":"refs/heads/topic/ConditionalRequest","head":"6cb149dce41cf1f110ae1f1d6a5c6bdd66790b69","before":"c412d49c9fd28406156dff664a1f848da1e95d0b","commits":[{"sha":"6cb149dce41cf1f110ae1f1d6a5c6bdd66790b69","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Adapt to Python 2.5 (again:))","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/6cb149dce41cf1f110ae1f1d6a5c6bdd66790b69"}]},"public":true,"created_at":"2013-09-05T15:53:49Z"},{"id":"1822682093","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":224706869,"size":1,"distinct_size":1,"ref":"refs/heads/topic/ConditionalRequest","head":"c412d49c9fd28406156dff664a1f848da1e95d0b","before":"3fe9edf08707d2c289d4e6a05f7521751cf9f8e4","commits":[{"sha":"c412d49c9fd28406156dff664a1f848da1e95d0b","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Adapt to Python 2.5","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/c412d49c9fd28406156dff664a1f848da1e95d0b"}]},"public":true,"created_at":"2013-09-05T15:51:13Z"},{"id":"1822678337","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/issues/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":8,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-05T15:47:44Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23877842","html_url":"https://github.com/jacquev6/PyGithub/issues/193#issuecomment-23877842","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23877842,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-05T15:47:44Z","updated_at":"2013-09-05T15:47:44Z","body":"I think I will merge my branch topic/ConditionalRequest (ending at commit 3fe9edf) in next release.\r\n\r\nI may have missed an advantage of your approach of serialization. If so, please tell me, we can continue to discuss it to get the best of both approaches.\r\n\r\nThank you again for your collaboration!"}},"public":true,"created_at":"2013-09-05T15:47:45Z"},{"id":"1822670928","type":"PullRequestReviewCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/comments/6184908","id":6184908,"body":"A few comments on this approach:\r\n\r\n* we can't use the unpickled object in any way, because it has no public attributes, only `raw_data` and `_headers`. We must somehow call `_storeAndUseAttributes` in `__setstate__`\r\n* Creating \"dead\" objects looks like a very dangerous thing. They are not very useful, and quite error-prone (no method can be called on them). Reviving an object after creation is complicated, because its children should be revived too (recursively) (to be able to do things like `repo=g.load(saved_repo); repo.owner.get_followers()[0].login`)\r\n* Having several load and save methods (on `GithubObject`, `Github`) is error-prone.\r\n\r\nPlease see commit 3fe9edf for an implementation of my proposal.","diff_hunk":"@@ -96,6 +100,78 @@ def _parseDatetime(s):\n         else:\n             return datetime.datetime.strptime(s, \"%Y-%m-%dT%H:%M:%SZ\")\n \n+    # #193: I temporarily comment out those two methods\n+    # We need to address the following:\n+    #  - The interface should use file-like objects (not file names)\n+    #    - it's more \"pythonic\"\n+    #    - it allows user to save several objects in the same physical file\n+    #    - it's easier to unit-test because we can inject in-memory file-like objects\n+    #  - We should not save identification information\n+    #  - We should not re-create several instances of Requester when loading objects\n+    #    - This would lead to very surprising behaviors, when changing Github.per_page or anything impacting this central part of PyGithub\n+    #  - It should be possible to restore a saved object without knowing its previous type\n+    #  - The \"load\" method should not make the user think she must know this previous type\n+    #    - In particular, it shouldn't be a classmethod of GithubObject\n+    #  - They should be covered by unit tests\n+    #\n+    # My proposal, to be experimented and discussed:\n+    #  - in \"save\", pickle a tuple containing the class of the object, its rawData and its headers\n+    #  - make \"load\" a method of class Github\n+    #  - it will unpickle everything and call Github.create_from_raw_data\n+    #  - I would even make \"save\" a method of Github, to keep it symetric with \"load\"\n+    #\n+    # Using __get_state__ would not be enought because we wouldn't have access\n+    # to the Requester instance in __set_state__.\n+\n+    def __getstate__(self):","path":"github/GithubObject.py","position":70,"original_position":70,"commit_id":"ebbfec86a2fb352cc08e3595a6b58fa1ccccc111","original_commit_id":"ebbfec86a2fb352cc08e3595a6b58fa1ccccc111","user":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-05T15:41:19Z","updated_at":"2013-09-05T15:41:19Z","html_url":"https://github.com/jacquev6/PyGithub/pull/193#discussion_r6184908","pull_request_url":"https://api.github.com/repos/jacquev6/PyGithub/pulls/193","_links":{"self":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/comments/6184908"},"html":{"href":"https://github.com/jacquev6/PyGithub/pull/193#discussion_r6184908"},"pull_request":{"href":"https://api.github.com/repos/jacquev6/PyGithub/pulls/193"}}}},"public":true,"created_at":"2013-09-05T15:41:19Z"},{"id":"1822668222","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":224699122,"size":1,"distinct_size":1,"ref":"refs/heads/topic/ConditionalRequest","head":"3fe9edf08707d2c289d4e6a05f7521751cf9f8e4","before":"38b137fb37c0fdc74f8802a4184518e105db9121","commits":[{"sha":"3fe9edf08707d2c289d4e6a05f7521751cf9f8e4","author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques"},"message":"Implement object persistence\n\nThis follows my proposal for #193.\nLargely inspired by AKFish's work.","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/3fe9edf08707d2c289d4e6a05f7521751cf9f8e4"}]},"public":true,"created_at":"2013-09-05T15:38:57Z"},{"id":"1822025629","type":"ForkEvent","actor":{"id":813448,"login":"SergioJorge","gravatar_id":"5949c2b4dec0f01c221015a21db10537","url":"https://api.github.com/users/SergioJorge","avatar_url":"https://2.gravatar.com/avatar/5949c2b4dec0f01c221015a21db10537?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"forkee":{"id":12604651,"name":"PyGithub","full_name":"SergioJorge/PyGithub","owner":{"login":"SergioJorge","id":813448,"avatar_url":"https://2.gravatar.com/avatar/5949c2b4dec0f01c221015a21db10537?d=https%3A%2F%2Fidenticons.github.com%2F345b07c0913e6d201a63ba7910b13a10.png","gravatar_id":"5949c2b4dec0f01c221015a21db10537","url":"https://api.github.com/users/SergioJorge","html_url":"https://github.com/SergioJorge","followers_url":"https://api.github.com/users/SergioJorge/followers","following_url":"https://api.github.com/users/SergioJorge/following{/other_user}","gists_url":"https://api.github.com/users/SergioJorge/gists{/gist_id}","starred_url":"https://api.github.com/users/SergioJorge/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SergioJorge/subscriptions","organizations_url":"https://api.github.com/users/SergioJorge/orgs","repos_url":"https://api.github.com/users/SergioJorge/repos","events_url":"https://api.github.com/users/SergioJorge/events{/privacy}","received_events_url":"https://api.github.com/users/SergioJorge/received_events","type":"User"},"private":false,"html_url":"https://github.com/SergioJorge/PyGithub","description":"Python library implementing the full Github API v3","fork":true,"url":"https://api.github.com/repos/SergioJorge/PyGithub","forks_url":"https://api.github.com/repos/SergioJorge/PyGithub/forks","keys_url":"https://api.github.com/repos/SergioJorge/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/SergioJorge/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/SergioJorge/PyGithub/teams","hooks_url":"https://api.github.com/repos/SergioJorge/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/SergioJorge/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/SergioJorge/PyGithub/events","assignees_url":"https://api.github.com/repos/SergioJorge/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/SergioJorge/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/SergioJorge/PyGithub/tags","blobs_url":"https://api.github.com/repos/SergioJorge/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/SergioJorge/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/SergioJorge/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/SergioJorge/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/SergioJorge/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/SergioJorge/PyGithub/languages","stargazers_url":"https://api.github.com/repos/SergioJorge/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/SergioJorge/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/SergioJorge/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/SergioJorge/PyGithub/subscription","commits_url":"https://api.github.com/repos/SergioJorge/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/SergioJorge/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/SergioJorge/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/SergioJorge/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/SergioJorge/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/SergioJorge/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/SergioJorge/PyGithub/merges","archive_url":"https://api.github.com/repos/SergioJorge/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/SergioJorge/PyGithub/downloads","issues_url":"https://api.github.com/repos/SergioJorge/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/SergioJorge/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/SergioJorge/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/SergioJorge/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/SergioJorge/PyGithub/labels{/name}","created_at":"2013-09-04T23:40:46Z","updated_at":"2013-09-04T23:40:46Z","pushed_at":"2013-09-04T19:49:59Z","git_url":"git://github.com/SergioJorge/PyGithub.git","ssh_url":"git@github.com:SergioJorge/PyGithub.git","clone_url":"https://github.com/SergioJorge/PyGithub.git","svn_url":"https://github.com/SergioJorge/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":820,"watchers_count":0,"language":"Python","has_issues":false,"has_downloads":true,"has_wiki":true,"forks_count":0,"mirror_url":null,"open_issues_count":0,"forks":0,"open_issues":0,"watchers":0,"master_branch":"master","default_branch":"master","public":true}},"public":true,"created_at":"2013-09-04T23:40:46Z"},{"id":"1822025563","type":"WatchEvent","actor":{"id":813448,"login":"SergioJorge","gravatar_id":"5949c2b4dec0f01c221015a21db10537","url":"https://api.github.com/users/SergioJorge","avatar_url":"https://2.gravatar.com/avatar/5949c2b4dec0f01c221015a21db10537?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"started"},"public":true,"created_at":"2013-09-04T23:40:42Z"},{"id":"1821810477","type":"PushEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"push_id":224224755,"size":1,"distinct_size":1,"ref":"refs/heads/topic/ConditionalRequest","head":"38b137fb37c0fdc74f8802a4184518e105db9121","before":"fb6980ce36766e4dd1ab03b48ac4b5adf876dc84","commits":[{"sha":"38b137fb37c0fdc74f8802a4184518e105db9121","author":{"email":"akfish@gmail.com","name":"AKFish"},"message":"Fix line ending","distinct":true,"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/38b137fb37c0fdc74f8802a4184518e105db9121"}]},"public":true,"created_at":"2013-09-04T19:50:00Z"},{"id":"1821476672","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/events","html_url":"https://github.com/jacquev6/PyGithub/issues/194","id":18951718,"number":194,"title":"GitHub 400 \"Problems parsing JSON\" when creating an issue","user":{"login":"technoskald","id":1624387,"avatar_url":"https://0.gravatar.com/avatar/afdbc4563c208b1bc332762fbd1145cb?d=https%3A%2F%2Fidenticons.github.com%2F1fe48bd7b38910219f53e7709ac82ccf.png","gravatar_id":"afdbc4563c208b1bc332762fbd1145cb","url":"https://api.github.com/users/technoskald","html_url":"https://github.com/technoskald","followers_url":"https://api.github.com/users/technoskald/followers","following_url":"https://api.github.com/users/technoskald/following{/other_user}","gists_url":"https://api.github.com/users/technoskald/gists{/gist_id}","starred_url":"https://api.github.com/users/technoskald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/technoskald/subscriptions","organizations_url":"https://api.github.com/users/technoskald/orgs","repos_url":"https://api.github.com/users/technoskald/repos","events_url":"https://api.github.com/users/technoskald/events{/privacy}","received_events_url":"https://api.github.com/users/technoskald/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":2,"created_at":"2013-09-04T03:34:22Z","updated_at":"2013-09-04T14:35:22Z","closed_at":null,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"I'm working from the `develop` branch and consistently get an `HTTP 400: Problems parsing JSON` when trying to create an issue.\r\n\r\nThe traceback, including the actual API call, is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"import.py\", line 68, in <module>\r\n    issue=repo.create_issue(title=i['description'],body=comment,labels=ilabels)\r\n  File \"/home/kmaxwell/PyGithub/github/Repository.py\", line 557, in create_issue\r\n    post_parameters\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 171, in requestJsonAndCheck\r\n    return self.__check(*self.requestJson(verb, url, parameters, input))\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 182, in __check\r\n    raise self.__createException(status, output)\r\ngithub.GithubException.GithubException: 400 {u'message': u'Problems parsing JSON'}\r\n```\r\n\r\nAdditionally, I enabled console logging while debugging (per the contribution guidelines) and have the following logs:\r\n\r\n```\r\nPOST https://api.github.com/repos/vz-risk/VCDB/issues {'Content-Type': 'application/json', 'Authorization': 'token (oauth token removed)', 'User-Agent': 'PyGithub/Python'} {\"body\": \"http://www.heraldonline.com/2013/08/27/5152564/advanced-data-processing-inc-notification.html\\n\\nAnother of the ADP Partner breaches  There are several more on the pinboard--search term is ADP.\\n\\nhttp://posttrib.suntimes.com/news/porter/22190511-418/valpo-ambulance-users-could-have-had-personal-information-stolen.html\\n\\nhttp://www.healthdatamanagement.com/news/breach-notification-hipaa-privacy-security-46520-1.html\\n\\n\\n2013 DataBreach NC\", \"labels\": [\"Breach\"], \"title\": \"VALPARAISO, Ind., Aug. 27, 2013: Advanced Data Processing, Inc.: Notification of Possible Unauthorized Access of Patient Information | PRNewswire | Rock Hill Herald Online\"} ==> 400 {'status': '400 Bad Request', 'x-ratelimit-remaining': '4993', 'x-github-media-type': 'github.beta; format=json', 'x-content-type-options': 'nosniff', 'access-control-expose-headers': 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes', 'x-github-request-id': '54c3445d-e229-4b45-b3f1-ef528f1325be', 'x-accepted-oauth-scopes': 'repo, public_repo', 'content-length': '35', 'server': 'GitHub.com', 'x-ratelimit-limit': '5000', 'access-control-allow-credentials': 'true', 'date': 'Wed, 04 Sep 2013 03:27:33 GMT', 'access-control-allow-origin': '*', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'user, public_repo, repo, gist', 'x-ratelimit-reset': '1378268851'} {\"message\":\"Problems parsing JSON\"}\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23794023","html_url":"https://github.com/jacquev6/PyGithub/issues/194#issuecomment-23794023","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194","id":23794023,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-04T14:35:22Z","updated_at":"2013-09-04T14:35:22Z","body":"Hum in fact I'm going to need your help to solve this... \r\n\r\nCan you please run the script here: https://gist.github.com/jacquev6/6437766 (modify it to use your credentials first) and tell me what you obtain?\r\n\r\nWhen I run it, it works, and the request sent (before the \"==>\" in the log) it **very** similar to the request failing in your case:\r\n\r\n    POST https://api.github.com/repos/jacquev6/TestPyGithub/issues {'Content-Type': 'application/json', 'Authorization': 'Basic (login and password removed)', 'User-Agent': 'PyGithub/Python'} {\"body\": \"http://www.heraldonline.com/2013/08/27/5152564/advanced-data-processing-inc-notification.html\\n\\nAnother of the ADP Partner breaches  There are several more on the pinboard--search term is ADP.\\n\\nhttp://posttrib.suntimes.com/news/porter/22190511-418/valpo-ambulance-users-could-have-had-personal-information-stolen.html\\n\\nhttp://www.healthdatamanagement.com/news/breach-notification-hipaa-privacy-security-46520-1.html\\n\\n\\n2013 DataBreach NC\", \"labels\": [\"Breach\"], \"title\": \"VALPARAISO, Ind., Aug. 27, 2013: Advanced Data Processing, Inc.: Notification of Possible Unauthorized Access of Patient Information | PRNewswire | Rock Hill Herald Online\"} ==> 201 {'status': '201 Created', 'x-ratelimit-remaining': '4972', 'x-github-media-type': 'github.beta; format=json', 'x-content-type-options': 'nosniff', 'access-control-expose-headers': 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes', 'x-github-request-id': '2be0b759-6752-4210-8ec9-243932b431a4', 'cache-control': 'private, max-age=60, s-maxage=60', 'content-length': '2382', 'server': 'GitHub.com', 'x-ratelimit-limit': '5000', 'location': 'https://api.github.com/repos/jacquev6/TestPyGithub/issues/4', 'access-control-allow-credentials': 'true', 'date': 'Wed, 04 Sep 2013 14:27:51 GMT', 'etag': '\"c95c9d428a9cb16001205311010e4f98\"', 'content-type': 'application/json; charset=utf-8', 'access-control-allow-origin': '*', 'x-ratelimit-reset': '1378305746'} {\"url\":\"https://api.github.com/repos/jacquev6/TestPyGithub/issues/4\",\"labels_url\":\"https://api.github.com/repos/jacquev6/TestPyGithub/issues/4/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/jacquev6/TestPyGithub/issues/4/comments\",\"events_url\":\"https://api.github.com/repos/jacquev6/TestPyGithub/issues/4/events\",\"html_url\":\"https://github.com/jacquev6/TestPyGithub/issues/4\",\"id\":18974584,\"number\":4,\"title\":\"VALPARAISO, Ind., Aug. 27, 2013: Advanced Data Processing, Inc.: Notification of Possible Unauthorized Access of Patient Information | PRNewswire | Rock Hill Herald Online\",\"user\":{\"login\":\"jacquev6\",\"id\":327146,\"avatar_url\":\"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"url\":\"https://api.github.com/users/jacquev6\",\"html_url\":\"https://github.com/jacquev6\",\"followers_url\":\"https://api.github.com/users/jacquev6/followers\",\"following_url\":\"https://api.github.com/users/jacquev6/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jacquev6/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jacquev6/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jacquev6/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jacquev6/orgs\",\"repos_url\":\"https://api.github.com/users/jacquev6/repos\",\"events_url\":\"https://api.github.com/users/jacquev6/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jacquev6/received_events\",\"type\":\"User\"},\"labels\":[{\"url\":\"https://api.github.com/repos/jacquev6/TestPyGithub/labels/Breach\",\"name\":\"Breach\",\"color\":\"fbca04\"}],\"state\":\"open\",\"assignee\":null,\"milestone\":null,\"comments\":0,\"created_at\":\"2013-09-04T14:27:51Z\",\"updated_at\":\"2013-09-04T14:27:51Z\",\"closed_at\":null,\"pull_request\":{\"html_url\":null,\"diff_url\":null,\"patch_url\":null},\"body\":\"http://www.heraldonline.com/2013/08/27/5152564/advanced-data-processing-inc-notification.html\\n\\nAnother of the ADP Partner breaches  There are several more on the pinboard--search term is ADP.\\n\\nhttp://posttrib.suntimes.com/news/porter/22190511-418/valpo-ambulance-users-could-have-had-personal-information-stolen.html\\n\\nhttp://www.healthdatamanagement.com/news/breach-notification-hipaa-privacy-security-46520-1.html\\n\\n\\n2013 DataBreach NC\",\"closed_by\":null}\r\n"}},"public":true,"created_at":"2013-09-04T14:35:23Z"},{"id":"1821420344","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193/events","html_url":"https://github.com/jacquev6/PyGithub/issues/193","id":18404629,"number":193,"title":"Add Conditional Request and Data Persistence Support Alternative Solution","user":{"login":"akfish","id":922715,"avatar_url":"https://2.gravatar.com/avatar/12a1b44d4e5c19cee59618084602b112?d=https%3A%2F%2Fidenticons.github.com%2F6eb90fb68a77fb5a5a997c6264bedf35.png","gravatar_id":"12a1b44d4e5c19cee59618084602b112","url":"https://api.github.com/users/akfish","html_url":"https://github.com/akfish","followers_url":"https://api.github.com/users/akfish/followers","following_url":"https://api.github.com/users/akfish/following{/other_user}","gists_url":"https://api.github.com/users/akfish/gists{/gist_id}","starred_url":"https://api.github.com/users/akfish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akfish/subscriptions","organizations_url":"https://api.github.com/users/akfish/orgs","repos_url":"https://api.github.com/users/akfish/repos","events_url":"https://api.github.com/users/akfish/events{/privacy}","received_events_url":"https://api.github.com/users/akfish/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":7,"created_at":"2013-08-22T10:14:26Z","updated_at":"2013-09-04T13:43:45Z","closed_at":null,"pull_request":{"html_url":"https://github.com/jacquev6/PyGithub/pull/193","diff_url":"https://github.com/jacquev6/PyGithub/pull/193.diff","patch_url":"https://github.com/jacquev6/PyGithub/pull/193.patch"},"body":"An alternative solution to pull request #189 based on #192. I am making this new pull request for clarity.\r\nChange List\r\n---------------\r\n1. Add support to [Conditional Request](http://developer.github.com/guides/getting-started/#conditional-requests) API.\r\n  * Add ```GithubObject.etag``` property\r\n  * Add ```GithubObject.last_modified``` property\r\n  * Modify ```Requester``` class to handle 304 response code\r\n  * Modify ```Requester``` class to enable making conditional request\r\n  * Add ```NotModifiedException``` class for 304 response code\r\n  * Add ```GithubObject.update()``` method\r\n  * Add a few private helper methods to make this work\r\n2. Add methods for Data Persistence\r\n  * Add ```GithubObject.save(file_fname)``` method\r\n  * Add ```GithubObject.load(file_fname)``` class method\r\n3. Test class for conditional request\r\n\r\nUsage\r\n---------------\r\n```python\r\n# Get remote issue list and cache locally when syncing\r\nfor issue in repo.get_issues():\r\n    issue.save(local_file_path)\r\n\r\n# Offline use/Quick restore previous work state\r\nfor local_file_path in cache.get_files():\r\n    cached_issue = issue.load(local_file_path)\r\n    #do something with it\r\n\r\n# And check for update when needed\r\nif (cached_issue.update()):\r\n    print \"Issue synced“\r\n\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23789799","html_url":"https://github.com/jacquev6/PyGithub/issues/193#issuecomment-23789799","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/193","id":23789799,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-04T13:43:45Z","updated_at":"2013-09-04T13:43:45Z","body":"Thank you for the update, this looks very promising! I'll look at it this afternoon."}},"public":true,"created_at":"2013-09-04T13:43:45Z"},{"id":"1821419438","type":"IssueCommentEvent","actor":{"id":327146,"login":"jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","avatar_url":"https://0.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/events","html_url":"https://github.com/jacquev6/PyGithub/issues/194","id":18951718,"number":194,"title":"GitHub 400 \"Problems parsing JSON\" when creating an issue","user":{"login":"technoskald","id":1624387,"avatar_url":"https://1.gravatar.com/avatar/afdbc4563c208b1bc332762fbd1145cb?d=https%3A%2F%2Fidenticons.github.com%2F1fe48bd7b38910219f53e7709ac82ccf.png","gravatar_id":"afdbc4563c208b1bc332762fbd1145cb","url":"https://api.github.com/users/technoskald","html_url":"https://github.com/technoskald","followers_url":"https://api.github.com/users/technoskald/followers","following_url":"https://api.github.com/users/technoskald/following{/other_user}","gists_url":"https://api.github.com/users/technoskald/gists{/gist_id}","starred_url":"https://api.github.com/users/technoskald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/technoskald/subscriptions","organizations_url":"https://api.github.com/users/technoskald/orgs","repos_url":"https://api.github.com/users/technoskald/repos","events_url":"https://api.github.com/users/technoskald/events{/privacy}","received_events_url":"https://api.github.com/users/technoskald/received_events","type":"User"},"labels":[],"state":"open","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":3,"closed_issues":1,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-04T13:41:07Z","due_on":null},"comments":1,"created_at":"2013-09-04T03:34:22Z","updated_at":"2013-09-04T13:42:51Z","closed_at":null,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"I'm working from the `develop` branch and consistently get an `HTTP 400: Problems parsing JSON` when trying to create an issue.\r\n\r\nThe traceback, including the actual API call, is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"import.py\", line 68, in <module>\r\n    issue=repo.create_issue(title=i['description'],body=comment,labels=ilabels)\r\n  File \"/home/kmaxwell/PyGithub/github/Repository.py\", line 557, in create_issue\r\n    post_parameters\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 171, in requestJsonAndCheck\r\n    return self.__check(*self.requestJson(verb, url, parameters, input))\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 182, in __check\r\n    raise self.__createException(status, output)\r\ngithub.GithubException.GithubException: 400 {u'message': u'Problems parsing JSON'}\r\n```\r\n\r\nAdditionally, I enabled console logging while debugging (per the contribution guidelines) and have the following logs:\r\n\r\n```\r\nPOST https://api.github.com/repos/vz-risk/VCDB/issues {'Content-Type': 'application/json', 'Authorization': 'token (oauth token removed)', 'User-Agent': 'PyGithub/Python'} {\"body\": \"http://www.heraldonline.com/2013/08/27/5152564/advanced-data-processing-inc-notification.html\\n\\nAnother of the ADP Partner breaches  There are several more on the pinboard--search term is ADP.\\n\\nhttp://posttrib.suntimes.com/news/porter/22190511-418/valpo-ambulance-users-could-have-had-personal-information-stolen.html\\n\\nhttp://www.healthdatamanagement.com/news/breach-notification-hipaa-privacy-security-46520-1.html\\n\\n\\n2013 DataBreach NC\", \"labels\": [\"Breach\"], \"title\": \"VALPARAISO, Ind., Aug. 27, 2013: Advanced Data Processing, Inc.: Notification of Possible Unauthorized Access of Patient Information | PRNewswire | Rock Hill Herald Online\"} ==> 400 {'status': '400 Bad Request', 'x-ratelimit-remaining': '4993', 'x-github-media-type': 'github.beta; format=json', 'x-content-type-options': 'nosniff', 'access-control-expose-headers': 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes', 'x-github-request-id': '54c3445d-e229-4b45-b3f1-ef528f1325be', 'x-accepted-oauth-scopes': 'repo, public_repo', 'content-length': '35', 'server': 'GitHub.com', 'x-ratelimit-limit': '5000', 'access-control-allow-credentials': 'true', 'date': 'Wed, 04 Sep 2013 03:27:33 GMT', 'access-control-allow-origin': '*', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'user, public_repo, repo, gist', 'x-ratelimit-reset': '1378268851'} {\"message\":\"Problems parsing JSON\"}\r\n```"},"comment":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/comments/23789742","html_url":"https://github.com/jacquev6/PyGithub/issues/194#issuecomment-23789742","issue_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194","id":23789742,"user":{"login":"jacquev6","id":327146,"avatar_url":"https://1.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"created_at":"2013-09-04T13:42:51Z","updated_at":"2013-09-04T13:42:51Z","body":"Hello! Thank you for the issue report, I have all the info I need to investigate that.\r\n\r\nThere seems to be something wrong with the json-encoding of the request, in PyGithub. I'll keep you informed this afternoon."}},"public":true,"created_at":"2013-09-04T13:42:52Z"},{"id":"1821181865","type":"WatchEvent","actor":{"id":1114542,"login":"nvbn","gravatar_id":"9c2082cdbe74353788ae2845c2bd8281","url":"https://api.github.com/users/nvbn","avatar_url":"https://1.gravatar.com/avatar/9c2082cdbe74353788ae2845c2bd8281?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"started"},"public":true,"created_at":"2013-09-04T08:31:39Z"},{"id":"1821036113","type":"IssuesEvent","actor":{"id":1624387,"login":"technoskald","gravatar_id":"afdbc4563c208b1bc332762fbd1145cb","url":"https://api.github.com/users/technoskald","avatar_url":"https://1.gravatar.com/avatar/afdbc4563c208b1bc332762fbd1145cb?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/194/events","html_url":"https://github.com/jacquev6/PyGithub/issues/194","id":18951718,"number":194,"title":"GitHub 400 \"Problems parsing JSON\" when creating an issue","user":{"login":"technoskald","id":1624387,"avatar_url":"https://0.gravatar.com/avatar/afdbc4563c208b1bc332762fbd1145cb?d=https%3A%2F%2Fidenticons.github.com%2F1fe48bd7b38910219f53e7709ac82ccf.png","gravatar_id":"afdbc4563c208b1bc332762fbd1145cb","url":"https://api.github.com/users/technoskald","html_url":"https://github.com/technoskald","followers_url":"https://api.github.com/users/technoskald/followers","following_url":"https://api.github.com/users/technoskald/following{/other_user}","gists_url":"https://api.github.com/users/technoskald/gists{/gist_id}","starred_url":"https://api.github.com/users/technoskald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/technoskald/subscriptions","organizations_url":"https://api.github.com/users/technoskald/orgs","repos_url":"https://api.github.com/users/technoskald/repos","events_url":"https://api.github.com/users/technoskald/events{/privacy}","received_events_url":"https://api.github.com/users/technoskald/received_events","type":"User"},"labels":[],"state":"open","assignee":null,"milestone":null,"comments":0,"created_at":"2013-09-04T03:34:22Z","updated_at":"2013-09-04T03:34:22Z","closed_at":null,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"I'm working from the `develop` branch and consistently get an `HTTP 400: Problems parsing JSON` when trying to create an issue.\r\n\r\nThe traceback, including the actual API call, is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"import.py\", line 68, in <module>\r\n    issue=repo.create_issue(title=i['description'],body=comment,labels=ilabels)\r\n  File \"/home/kmaxwell/PyGithub/github/Repository.py\", line 557, in create_issue\r\n    post_parameters\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 171, in requestJsonAndCheck\r\n    return self.__check(*self.requestJson(verb, url, parameters, input))\r\n  File \"/home/kmaxwell/PyGithub/github/Requester.py\", line 182, in __check\r\n    raise self.__createException(status, output)\r\ngithub.GithubException.GithubException: 400 {u'message': u'Problems parsing JSON'}\r\n```\r\n\r\nAdditionally, I enabled console logging while debugging (per the contribution guidelines) and have the following logs:\r\n\r\n```\r\nPOST https://api.github.com/repos/vz-risk/VCDB/issues {'Content-Type': 'application/json', 'Authorization': 'token (oauth token removed)', 'User-Agent': 'PyGithub/Python'} {\"body\": \"http://www.heraldonline.com/2013/08/27/5152564/advanced-data-processing-inc-notification.html\\n\\nAnother of the ADP Partner breaches  There are several more on the pinboard--search term is ADP.\\n\\nhttp://posttrib.suntimes.com/news/porter/22190511-418/valpo-ambulance-users-could-have-had-personal-information-stolen.html\\n\\nhttp://www.healthdatamanagement.com/news/breach-notification-hipaa-privacy-security-46520-1.html\\n\\n\\n2013 DataBreach NC\", \"labels\": [\"Breach\"], \"title\": \"VALPARAISO, Ind., Aug. 27, 2013: Advanced Data Processing, Inc.: Notification of Possible Unauthorized Access of Patient Information | PRNewswire | Rock Hill Herald Online\"} ==> 400 {'status': '400 Bad Request', 'x-ratelimit-remaining': '4993', 'x-github-media-type': 'github.beta; format=json', 'x-content-type-options': 'nosniff', 'access-control-expose-headers': 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes', 'x-github-request-id': '54c3445d-e229-4b45-b3f1-ef528f1325be', 'x-accepted-oauth-scopes': 'repo, public_repo', 'content-length': '35', 'server': 'GitHub.com', 'x-ratelimit-limit': '5000', 'access-control-allow-credentials': 'true', 'date': 'Wed, 04 Sep 2013 03:27:33 GMT', 'access-control-allow-origin': '*', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'user, public_repo, repo, gist', 'x-ratelimit-reset': '1378268851'} {\"message\":\"Problems parsing JSON\"}\r\n```"}},"public":true,"created_at":"2013-09-04T03:34:22Z"},{"id":"1819316534","type":"WatchEvent","actor":{"id":1681405,"login":"marianitadn","gravatar_id":"4ede901d02edfca3e35db27377f13d5d","url":"https://api.github.com/users/marianitadn","avatar_url":"https://2.gravatar.com/avatar/4ede901d02edfca3e35db27377f13d5d?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"action":"started"},"public":true,"created_at":"2013-09-02T07:43:17Z"},{"id":"1818956660","type":"ForkEvent","actor":{"id":5172637,"login":"schmidt-fu","gravatar_id":"c9ced8b816f6470e64a4ad13f8ebe16a","url":"https://api.github.com/users/schmidt-fu","avatar_url":"https://1.gravatar.com/avatar/c9ced8b816f6470e64a4ad13f8ebe16a?d=https%3A%2F%2Fa248.e.akamai.net%2Fassets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"},"repo":{"id":3544490,"name":"jacquev6/PyGithub","url":"https://api.github.com/repos/jacquev6/PyGithub"},"payload":{"forkee":{"id":12518636,"name":"PyGithub","full_name":"schmidt-fu/PyGithub","owner":{"login":"schmidt-fu","id":5172637,"avatar_url":"https://2.gravatar.com/avatar/c9ced8b816f6470e64a4ad13f8ebe16a?d=https%3A%2F%2Fidenticons.github.com%2F3cc9645c6fb2437530f57a2253cf3a8c.png","gravatar_id":"c9ced8b816f6470e64a4ad13f8ebe16a","url":"https://api.github.com/users/schmidt-fu","html_url":"https://github.com/schmidt-fu","followers_url":"https://api.github.com/users/schmidt-fu/followers","following_url":"https://api.github.com/users/schmidt-fu/following{/other_user}","gists_url":"https://api.github.com/users/schmidt-fu/gists{/gist_id}","starred_url":"https://api.github.com/users/schmidt-fu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmidt-fu/subscriptions","organizations_url":"https://api.github.com/users/schmidt-fu/orgs","repos_url":"https://api.github.com/users/schmidt-fu/repos","events_url":"https://api.github.com/users/schmidt-fu/events{/privacy}","received_events_url":"https://api.github.com/users/schmidt-fu/received_events","type":"User"},"private":false,"html_url":"https://github.com/schmidt-fu/PyGithub","description":"Python library implementing the full Github API v3","fork":true,"url":"https://api.github.com/repos/schmidt-fu/PyGithub","forks_url":"https://api.github.com/repos/schmidt-fu/PyGithub/forks","keys_url":"https://api.github.com/repos/schmidt-fu/PyGithub/keys{/key_id}","collaborators_url":"https://api.github.com/repos/schmidt-fu/PyGithub/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/schmidt-fu/PyGithub/teams","hooks_url":"https://api.github.com/repos/schmidt-fu/PyGithub/hooks","issue_events_url":"https://api.github.com/repos/schmidt-fu/PyGithub/issues/events{/number}","events_url":"https://api.github.com/repos/schmidt-fu/PyGithub/events","assignees_url":"https://api.github.com/repos/schmidt-fu/PyGithub/assignees{/user}","branches_url":"https://api.github.com/repos/schmidt-fu/PyGithub/branches{/branch}","tags_url":"https://api.github.com/repos/schmidt-fu/PyGithub/tags","blobs_url":"https://api.github.com/repos/schmidt-fu/PyGithub/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/schmidt-fu/PyGithub/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/schmidt-fu/PyGithub/git/refs{/sha}","trees_url":"https://api.github.com/repos/schmidt-fu/PyGithub/git/trees{/sha}","statuses_url":"https://api.github.com/repos/schmidt-fu/PyGithub/statuses/{sha}","languages_url":"https://api.github.com/repos/schmidt-fu/PyGithub/languages","stargazers_url":"https://api.github.com/repos/schmidt-fu/PyGithub/stargazers","contributors_url":"https://api.github.com/repos/schmidt-fu/PyGithub/contributors","subscribers_url":"https://api.github.com/repos/schmidt-fu/PyGithub/subscribers","subscription_url":"https://api.github.com/repos/schmidt-fu/PyGithub/subscription","commits_url":"https://api.github.com/repos/schmidt-fu/PyGithub/commits{/sha}","git_commits_url":"https://api.github.com/repos/schmidt-fu/PyGithub/git/commits{/sha}","comments_url":"https://api.github.com/repos/schmidt-fu/PyGithub/comments{/number}","issue_comment_url":"https://api.github.com/repos/schmidt-fu/PyGithub/issues/comments/{number}","contents_url":"https://api.github.com/repos/schmidt-fu/PyGithub/contents/{+path}","compare_url":"https://api.github.com/repos/schmidt-fu/PyGithub/compare/{base}...{head}","merges_url":"https://api.github.com/repos/schmidt-fu/PyGithub/merges","archive_url":"https://api.github.com/repos/schmidt-fu/PyGithub/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/schmidt-fu/PyGithub/downloads","issues_url":"https://api.github.com/repos/schmidt-fu/PyGithub/issues{/number}","pulls_url":"https://api.github.com/repos/schmidt-fu/PyGithub/pulls{/number}","milestones_url":"https://api.github.com/repos/schmidt-fu/PyGithub/milestones{/number}","notifications_url":"https://api.github.com/repos/schmidt-fu/PyGithub/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/schmidt-fu/PyGithub/labels{/name}","created_at":"2013-09-01T09:51:50Z","updated_at":"2013-09-01T09:51:50Z","pushed_at":"2013-08-23T17:06:48Z","git_url":"git://github.com/schmidt-fu/PyGithub.git","ssh_url":"git@github.com:schmidt-fu/PyGithub.git","clone_url":"https://github.com/schmidt-fu/PyGithub.git","svn_url":"https://github.com/schmidt-fu/PyGithub","homepage":"http://jacquev6.github.com/PyGithub","size":7642,"watchers_count":0,"language":"Python","has_issues":false,"has_downloads":true,"has_wiki":true,"forks_count":0,"mirror_url":null,"open_issues_count":0,"forks":0,"open_issues":0,"watchers":0,"master_branch":"master","default_branch":"master","public":true}},"public":true,"created_at":"2013-09-01T09:51:50Z"}]

https
GET
api.github.com
None
/notifications/threads/8406712
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4867'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '30848a7f-7351-4751-af8c-3b0a85f5bb7e'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '4203'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"848b2905eeb475bca3c72fe17bedcc0c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:00 GMT'), ('access-control-allow-origin', '*'), ('x-poll-interval', '60'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"id":"8406712","unread":null,"reason":"subscribed","updated_at":"2013-03-15T05:43:11Z","last_read_at":null,"subject":{"title":"Feature/coveralls","url":"https://api.github.com/repos/ZIMK/fwadmin/pulls/21","latest_comment_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/comments/14944813","type":"PullRequest"},"repository":{"id":8432784,"name":"fwadmin","full_name":"ZIMK/fwadmin","owner":{"login":"ZIMK","id":1187008,"avatar_url":"https://1.gravatar.com/avatar/ce407a684dac7cf642606501244dd9f0?d=https%3A%2F%2Fidenticons.github.com%2Fa8b50d6bf21d85e47ce11e1d23087af2.png","gravatar_id":"ce407a684dac7cf642606501244dd9f0","url":"https://api.github.com/users/ZIMK","html_url":"https://github.com/ZIMK","followers_url":"https://api.github.com/users/ZIMK/followers","following_url":"https://api.github.com/users/ZIMK/following{/other_user}","gists_url":"https://api.github.com/users/ZIMK/gists{/gist_id}","starred_url":"https://api.github.com/users/ZIMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZIMK/subscriptions","organizations_url":"https://api.github.com/users/ZIMK/orgs","repos_url":"https://api.github.com/users/ZIMK/repos","events_url":"https://api.github.com/users/ZIMK/events{/privacy}","received_events_url":"https://api.github.com/users/ZIMK/received_events","type":"Organization"},"private":false,"html_url":"https://github.com/ZIMK/fwadmin","description":"Django based self-service firewall config tool","fork":true,"url":"https://api.github.com/repos/ZIMK/fwadmin","forks_url":"https://api.github.com/repos/ZIMK/fwadmin/forks","keys_url":"https://api.github.com/repos/ZIMK/fwadmin/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ZIMK/fwadmin/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ZIMK/fwadmin/teams","hooks_url":"https://api.github.com/repos/ZIMK/fwadmin/hooks","issue_events_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/events{/number}","events_url":"https://api.github.com/repos/ZIMK/fwadmin/events","assignees_url":"https://api.github.com/repos/ZIMK/fwadmin/assignees{/user}","branches_url":"https://api.github.com/repos/ZIMK/fwadmin/branches{/branch}","tags_url":"https://api.github.com/repos/ZIMK/fwadmin/tags","blobs_url":"https://api.github.com/repos/ZIMK/fwadmin/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ZIMK/fwadmin/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ZIMK/fwadmin/git/refs{/sha}","trees_url":"https://api.github.com/repos/ZIMK/fwadmin/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ZIMK/fwadmin/statuses/{sha}","languages_url":"https://api.github.com/repos/ZIMK/fwadmin/languages","stargazers_url":"https://api.github.com/repos/ZIMK/fwadmin/stargazers","contributors_url":"https://api.github.com/repos/ZIMK/fwadmin/contributors","subscribers_url":"https://api.github.com/repos/ZIMK/fwadmin/subscribers","subscription_url":"https://api.github.com/repos/ZIMK/fwadmin/subscription","commits_url":"https://api.github.com/repos/ZIMK/fwadmin/commits{/sha}","git_commits_url":"https://api.github.com/repos/ZIMK/fwadmin/git/commits{/sha}","comments_url":"https://api.github.com/repos/ZIMK/fwadmin/comments{/number}","issue_comment_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/comments/{number}","contents_url":"https://api.github.com/repos/ZIMK/fwadmin/contents/{+path}","compare_url":"https://api.github.com/repos/ZIMK/fwadmin/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ZIMK/fwadmin/merges","archive_url":"https://api.github.com/repos/ZIMK/fwadmin/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ZIMK/fwadmin/downloads","issues_url":"https://api.github.com/repos/ZIMK/fwadmin/issues{/number}","pulls_url":"https://api.github.com/repos/ZIMK/fwadmin/pulls{/number}","milestones_url":"https://api.github.com/repos/ZIMK/fwadmin/milestones{/number}","notifications_url":"https://api.github.com/repos/ZIMK/fwadmin/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ZIMK/fwadmin/labels{/name}"},"url":"https://api.github.com/notifications/threads/8406712","subscription_url":"https://api.github.com/notifications/threads/8406712/subscription"}

https
GET
api.github.com
None
/users/jacquev6
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'f88ab8d2-9b5a-4283-8001-fdd72ca23ee2'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:00 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/commits/1292bf0e22c796e91cc3d6e24b544aece8c21f2a
{'If-None-Match': '"91582e2dc24ad5461e61062c01b32969"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Wed, 09 May 2012 16:22:33 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '74293a9e-2207-4848-903c-69d3b04efebe'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 09 May 2012 16:22:33 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"91582e2dc24ad5461e61062c01b32969"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:01 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/comments/3630301
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '31f93d19-354a-448b-ac36-9c674814c063'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:02 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/compare/master...develop
{'If-None-Match': '"ff2ab76c56b865233dfb98f5804276b6"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 09:04:41 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'bed81d6d-586b-453e-bf17-3db9b2abe473'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 09:04:41 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"ff2ab76c56b865233dfb98f5804276b6"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:03 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/contents/README.rst?ref=master
{'If-None-Match': '"bbffa70478199a10902bf5da76db3481"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Wed, 21 Aug 2013 16:39:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'c3ab101c-0643-4405-8dde-d9738631a6d1'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 21 Aug 2013 16:39:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"bbffa70478199a10902bf5da76db3481"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:04 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/gists/149016
{'If-None-Match': '"1aaa6053c05e25abbc1703b90bd409b9"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 13:04:59 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'acf3d7f7-920c-4e6c-9e9f-8c619691fd70'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 13:04:59 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"1aaa6053c05e25abbc1703b90bd409b9"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:05 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/gists/149016/comments/4565
{'If-None-Match': '"923dd32a449cce56dae93d3438b9451a"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Thu, 29 Aug 2013 01:07:03 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4867'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '76905633-de04-422b-83f6-9f8dde705b0f'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Thu, 29 Aug 2013 01:07:03 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"923dd32a449cce56dae93d3438b9451a"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:06 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/gists/149016/3e0e8350f040f21811ceea13975086158ccae986
{'If-None-Match': '"1aaa6053c05e25abbc1703b90bd409b9"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 13:04:59 GMT'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4866'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '704fb785-3c6d-4f9f-9c14-91f368156bb0'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '32105'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"ad4288b80b5ef38fdd8599ec34f610f7"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:09 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/gists/149016","forks_url":"https://api.github.com/gists/149016/forks","commits_url":"https://api.github.com/gists/149016/commits","id":"149016","git_pull_url":"https://gist.github.com/149016.git","git_push_url":"https://gist.github.com/149016.git","html_url":"https://gist.github.com/149016","files":{".gitignore":{"filename":".gitignore","type":"text/plain","language":null,"raw_url":"https://gist.github.com/raw/149016/e056704ebab0fbcd7bf937169b4057d378d09cf8/.gitignore","size":145,"content":"*.aux\n*.glo\n*.idx\n*.log\n*.toc\n*.ist\n*.acn\n*.acr\n*.alg\n*.bbl\n*.blg\n*.dvi\n*.glg\n*.gls\n*.ilg\n*.ind\n*.lof\n*.lot\n*.maf\n*.mtc\n*.mtc1\n*.out\n*.synctex.gz"}},"public":true,"created_at":"2009-07-17T11:37:42Z","updated_at":"2013-09-06T13:04:59Z","description":"Git: .gitignore file for LaTeX projects","comments":18,"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"comments_url":"https://api.github.com/gists/149016/comments","forks":[{"url":"https://api.github.com/gists/452042","user":{"login":"cflewis","id":43708,"avatar_url":"https://2.gravatar.com/avatar/5f986018993d9f078927fe29ee912cf2?d=https%3A%2F%2Fidenticons.github.com%2F287915711d06ce6d90e2c18e1d89d3a6.png","gravatar_id":"5f986018993d9f078927fe29ee912cf2","url":"https://api.github.com/users/cflewis","html_url":"https://github.com/cflewis","followers_url":"https://api.github.com/users/cflewis/followers","following_url":"https://api.github.com/users/cflewis/following{/other_user}","gists_url":"https://api.github.com/users/cflewis/gists{/gist_id}","starred_url":"https://api.github.com/users/cflewis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cflewis/subscriptions","organizations_url":"https://api.github.com/users/cflewis/orgs","repos_url":"https://api.github.com/users/cflewis/repos","events_url":"https://api.github.com/users/cflewis/events{/privacy}","received_events_url":"https://api.github.com/users/cflewis/received_events","type":"User"},"id":"452042","created_at":"2010-06-24T21:51:00Z","updated_at":"2010-06-24T21:51:25Z"},{"url":"https://api.github.com/gists/871983","user":{"login":"rbochet","id":56806,"avatar_url":"https://2.gravatar.com/avatar/54925726f7c3a2b76028718eddb8522a?d=https%3A%2F%2Fidenticons.github.com%2F8818556ce6ba4bc9302dca9ec1979591.png","gravatar_id":"54925726f7c3a2b76028718eddb8522a","url":"https://api.github.com/users/rbochet","html_url":"https://github.com/rbochet","followers_url":"https://api.github.com/users/rbochet/followers","following_url":"https://api.github.com/users/rbochet/following{/other_user}","gists_url":"https://api.github.com/users/rbochet/gists{/gist_id}","starred_url":"https://api.github.com/users/rbochet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbochet/subscriptions","organizations_url":"https://api.github.com/users/rbochet/orgs","repos_url":"https://api.github.com/users/rbochet/repos","events_url":"https://api.github.com/users/rbochet/events{/privacy}","received_events_url":"https://api.github.com/users/rbochet/received_events","type":"User"},"id":"871983","created_at":"2011-03-16T03:48:24Z","updated_at":"2013-08-16T00:46:15Z"},{"url":"https://api.github.com/gists/980414","user":{"login":"j10","id":250070,"avatar_url":"https://0.gravatar.com/avatar/7eb0a4d397a695f7fd15069a4f24ad44?d=https%3A%2F%2Fidenticons.github.com%2F6019c728e12af5d048c3d2decb9800cd.png","gravatar_id":"7eb0a4d397a695f7fd15069a4f24ad44","url":"https://api.github.com/users/j10","html_url":"https://github.com/j10","followers_url":"https://api.github.com/users/j10/followers","following_url":"https://api.github.com/users/j10/following{/other_user}","gists_url":"https://api.github.com/users/j10/gists{/gist_id}","starred_url":"https://api.github.com/users/j10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j10/subscriptions","organizations_url":"https://api.github.com/users/j10/orgs","repos_url":"https://api.github.com/users/j10/repos","events_url":"https://api.github.com/users/j10/events{/privacy}","received_events_url":"https://api.github.com/users/j10/received_events","type":"User"},"id":"980414","created_at":"2011-05-19T08:43:14Z","updated_at":"2011-05-19T08:43:20Z"},{"url":"https://api.github.com/gists/1404741","user":{"login":"Vaguery","id":81171,"avatar_url":"https://0.gravatar.com/avatar/db04d40ecceb0a4c0683a60462d11794?d=https%3A%2F%2Fidenticons.github.com%2Fc3ea21d464d21b7bf62431791ec01b78.png","gravatar_id":"db04d40ecceb0a4c0683a60462d11794","url":"https://api.github.com/users/Vaguery","html_url":"https://github.com/Vaguery","followers_url":"https://api.github.com/users/Vaguery/followers","following_url":"https://api.github.com/users/Vaguery/following{/other_user}","gists_url":"https://api.github.com/users/Vaguery/gists{/gist_id}","starred_url":"https://api.github.com/users/Vaguery/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Vaguery/subscriptions","organizations_url":"https://api.github.com/users/Vaguery/orgs","repos_url":"https://api.github.com/users/Vaguery/repos","events_url":"https://api.github.com/users/Vaguery/events{/privacy}","received_events_url":"https://api.github.com/users/Vaguery/received_events","type":"User"},"id":"1404741","created_at":"2011-11-29T13:05:35Z","updated_at":"2011-11-29T13:05:35Z"},{"url":"https://api.github.com/gists/1422904","user":{"login":"phieber","id":1208351,"avatar_url":"https://1.gravatar.com/avatar/e2f846ae903d79fa8750763d0809cab5?d=https%3A%2F%2Fidenticons.github.com%2F09c10f8d5454910d48c67ff6081e8601.png","gravatar_id":"e2f846ae903d79fa8750763d0809cab5","url":"https://api.github.com/users/phieber","html_url":"https://github.com/phieber","followers_url":"https://api.github.com/users/phieber/followers","following_url":"https://api.github.com/users/phieber/following{/other_user}","gists_url":"https://api.github.com/users/phieber/gists{/gist_id}","starred_url":"https://api.github.com/users/phieber/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phieber/subscriptions","organizations_url":"https://api.github.com/users/phieber/orgs","repos_url":"https://api.github.com/users/phieber/repos","events_url":"https://api.github.com/users/phieber/events{/privacy}","received_events_url":"https://api.github.com/users/phieber/received_events","type":"User"},"id":"1422904","created_at":"2011-12-02T11:25:46Z","updated_at":"2011-12-02T11:25:46Z"},{"url":"https://api.github.com/gists/1585783","user":{"login":"pbroschwitz","id":92129,"avatar_url":"https://1.gravatar.com/avatar/68e33f71f778ec322d68ca15ef2a7315?d=https%3A%2F%2Fidenticons.github.com%2F8417990ede5b8e7dc3295d4dd63e4062.png","gravatar_id":"68e33f71f778ec322d68ca15ef2a7315","url":"https://api.github.com/users/pbroschwitz","html_url":"https://github.com/pbroschwitz","followers_url":"https://api.github.com/users/pbroschwitz/followers","following_url":"https://api.github.com/users/pbroschwitz/following{/other_user}","gists_url":"https://api.github.com/users/pbroschwitz/gists{/gist_id}","starred_url":"https://api.github.com/users/pbroschwitz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pbroschwitz/subscriptions","organizations_url":"https://api.github.com/users/pbroschwitz/orgs","repos_url":"https://api.github.com/users/pbroschwitz/repos","events_url":"https://api.github.com/users/pbroschwitz/events{/privacy}","received_events_url":"https://api.github.com/users/pbroschwitz/received_events","type":"User"},"id":"1585783","created_at":"2012-01-09T23:59:07Z","updated_at":"2012-02-20T11:18:52Z"},{"url":"https://api.github.com/gists/2549120","user":{"login":"gaving","id":43741,"avatar_url":"https://2.gravatar.com/avatar/839485ec6b0111d4ccc69646789d6728?d=https%3A%2F%2Fidenticons.github.com%2F781870bb5979fcc948dcc48da5fb798a.png","gravatar_id":"839485ec6b0111d4ccc69646789d6728","url":"https://api.github.com/users/gaving","html_url":"https://github.com/gaving","followers_url":"https://api.github.com/users/gaving/followers","following_url":"https://api.github.com/users/gaving/following{/other_user}","gists_url":"https://api.github.com/users/gaving/gists{/gist_id}","starred_url":"https://api.github.com/users/gaving/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gaving/subscriptions","organizations_url":"https://api.github.com/users/gaving/orgs","repos_url":"https://api.github.com/users/gaving/repos","events_url":"https://api.github.com/users/gaving/events{/privacy}","received_events_url":"https://api.github.com/users/gaving/received_events","type":"User"},"id":"2549120","created_at":"2012-04-29T09:57:32Z","updated_at":"2012-04-29T09:57:32Z"},{"url":"https://api.github.com/gists/2549928","user":{"login":"pbelmans","id":700126,"avatar_url":"https://2.gravatar.com/avatar/bf4c56431003682b725b72668e7de35f?d=https%3A%2F%2Fidenticons.github.com%2Fb6e0db3b4d374eb7e8d52b9f271f4822.png","gravatar_id":"bf4c56431003682b725b72668e7de35f","url":"https://api.github.com/users/pbelmans","html_url":"https://github.com/pbelmans","followers_url":"https://api.github.com/users/pbelmans/followers","following_url":"https://api.github.com/users/pbelmans/following{/other_user}","gists_url":"https://api.github.com/users/pbelmans/gists{/gist_id}","starred_url":"https://api.github.com/users/pbelmans/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pbelmans/subscriptions","organizations_url":"https://api.github.com/users/pbelmans/orgs","repos_url":"https://api.github.com/users/pbelmans/repos","events_url":"https://api.github.com/users/pbelmans/events{/privacy}","received_events_url":"https://api.github.com/users/pbelmans/received_events","type":"User"},"id":"2549928","created_at":"2012-04-29T12:07:11Z","updated_at":"2012-05-14T11:08:39Z"},{"url":"https://api.github.com/gists/3061207","user":{"login":"robEllenberg","id":1210940,"avatar_url":"https://1.gravatar.com/avatar/cee0a0313cb89262ccaf408cf42eeae8?d=https%3A%2F%2Fidenticons.github.com%2Fb927fc8b72fac9a5b05e8afd1545e069.png","gravatar_id":"cee0a0313cb89262ccaf408cf42eeae8","url":"https://api.github.com/users/robEllenberg","html_url":"https://github.com/robEllenberg","followers_url":"https://api.github.com/users/robEllenberg/followers","following_url":"https://api.github.com/users/robEllenberg/following{/other_user}","gists_url":"https://api.github.com/users/robEllenberg/gists{/gist_id}","starred_url":"https://api.github.com/users/robEllenberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robEllenberg/subscriptions","organizations_url":"https://api.github.com/users/robEllenberg/orgs","repos_url":"https://api.github.com/users/robEllenberg/repos","events_url":"https://api.github.com/users/robEllenberg/events{/privacy}","received_events_url":"https://api.github.com/users/robEllenberg/received_events","type":"User"},"id":"3061207","created_at":"2012-07-06T16:34:35Z","updated_at":"2012-07-06T16:34:35Z"},{"url":"https://api.github.com/gists/3073850","user":{"login":"naught101","id":167164,"avatar_url":"https://2.gravatar.com/avatar/20cb8dcc17ad4334c0f8cb1ddc28bcd0?d=https%3A%2F%2Fidenticons.github.com%2F16a0a5f3381b862da55875130a94ad3f.png","gravatar_id":"20cb8dcc17ad4334c0f8cb1ddc28bcd0","url":"https://api.github.com/users/naught101","html_url":"https://github.com/naught101","followers_url":"https://api.github.com/users/naught101/followers","following_url":"https://api.github.com/users/naught101/following{/other_user}","gists_url":"https://api.github.com/users/naught101/gists{/gist_id}","starred_url":"https://api.github.com/users/naught101/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/naught101/subscriptions","organizations_url":"https://api.github.com/users/naught101/orgs","repos_url":"https://api.github.com/users/naught101/repos","events_url":"https://api.github.com/users/naught101/events{/privacy}","received_events_url":"https://api.github.com/users/naught101/received_events","type":"User"},"id":"3073850","created_at":"2012-07-09T02:17:21Z","updated_at":"2012-07-09T02:17:21Z"},{"url":"https://api.github.com/gists/3683565","user":{"login":"TKAB","id":66597,"avatar_url":"https://1.gravatar.com/avatar/7a66c8124726c66cf9901d7e09f4f3cb?d=https%3A%2F%2Fidenticons.github.com%2F4bec99ec5bd39630575692948d9e8169.png","gravatar_id":"7a66c8124726c66cf9901d7e09f4f3cb","url":"https://api.github.com/users/TKAB","html_url":"https://github.com/TKAB","followers_url":"https://api.github.com/users/TKAB/followers","following_url":"https://api.github.com/users/TKAB/following{/other_user}","gists_url":"https://api.github.com/users/TKAB/gists{/gist_id}","starred_url":"https://api.github.com/users/TKAB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TKAB/subscriptions","organizations_url":"https://api.github.com/users/TKAB/orgs","repos_url":"https://api.github.com/users/TKAB/repos","events_url":"https://api.github.com/users/TKAB/events{/privacy}","received_events_url":"https://api.github.com/users/TKAB/received_events","type":"User"},"id":"3683565","created_at":"2012-09-09T09:58:43Z","updated_at":"2012-09-09T09:58:43Z"},{"url":"https://api.github.com/gists/3802139","user":{"login":"linchen04","id":1383767,"avatar_url":"https://1.gravatar.com/avatar/4380e7c4928005fc0eaf9772e1fe64b7?d=https%3A%2F%2Fidenticons.github.com%2F39a2a9b3f884c9a2e97ce61cb56e02fd.png","gravatar_id":"4380e7c4928005fc0eaf9772e1fe64b7","url":"https://api.github.com/users/linchen04","html_url":"https://github.com/linchen04","followers_url":"https://api.github.com/users/linchen04/followers","following_url":"https://api.github.com/users/linchen04/following{/other_user}","gists_url":"https://api.github.com/users/linchen04/gists{/gist_id}","starred_url":"https://api.github.com/users/linchen04/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linchen04/subscriptions","organizations_url":"https://api.github.com/users/linchen04/orgs","repos_url":"https://api.github.com/users/linchen04/repos","events_url":"https://api.github.com/users/linchen04/events{/privacy}","received_events_url":"https://api.github.com/users/linchen04/received_events","type":"User"},"id":"3802139","created_at":"2012-09-28T21:20:16Z","updated_at":"2012-09-28T21:20:16Z"},{"url":"https://api.github.com/gists/3958094","user":{"login":"macalicious","id":717205,"avatar_url":"https://2.gravatar.com/avatar/59eb80f68e015e725e9eeb90f24987b2?d=https%3A%2F%2Fidenticons.github.com%2F1d2591e0232d5734561c3c71252a2efa.png","gravatar_id":"59eb80f68e015e725e9eeb90f24987b2","url":"https://api.github.com/users/macalicious","html_url":"https://github.com/macalicious","followers_url":"https://api.github.com/users/macalicious/followers","following_url":"https://api.github.com/users/macalicious/following{/other_user}","gists_url":"https://api.github.com/users/macalicious/gists{/gist_id}","starred_url":"https://api.github.com/users/macalicious/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/macalicious/subscriptions","organizations_url":"https://api.github.com/users/macalicious/orgs","repos_url":"https://api.github.com/users/macalicious/repos","events_url":"https://api.github.com/users/macalicious/events{/privacy}","received_events_url":"https://api.github.com/users/macalicious/received_events","type":"User"},"id":"3958094","created_at":"2012-10-26T10:37:44Z","updated_at":"2012-10-26T10:37:44Z"},{"url":"https://api.github.com/gists/4362953","user":{"login":"dermesser","id":1042327,"avatar_url":"https://0.gravatar.com/avatar/1f99406671a26d17de4f0a52a41ad0c7?d=https%3A%2F%2Fidenticons.github.com%2F1b2f62f9f8f36eeb3c2a1ed42d1a2249.png","gravatar_id":"1f99406671a26d17de4f0a52a41ad0c7","url":"https://api.github.com/users/dermesser","html_url":"https://github.com/dermesser","followers_url":"https://api.github.com/users/dermesser/followers","following_url":"https://api.github.com/users/dermesser/following{/other_user}","gists_url":"https://api.github.com/users/dermesser/gists{/gist_id}","starred_url":"https://api.github.com/users/dermesser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dermesser/subscriptions","organizations_url":"https://api.github.com/users/dermesser/orgs","repos_url":"https://api.github.com/users/dermesser/repos","events_url":"https://api.github.com/users/dermesser/events{/privacy}","received_events_url":"https://api.github.com/users/dermesser/received_events","type":"User"},"id":"4362953","created_at":"2012-12-23T11:04:08Z","updated_at":"2013-08-07T18:49:16Z"},{"url":"https://api.github.com/gists/4401093","user":{"login":"szalansky","id":323025,"avatar_url":"https://1.gravatar.com/avatar/b96196ac5b306a6f0d302dd9f82a24ee?d=https%3A%2F%2Fidenticons.github.com%2F6470274ac82665a71a91d36c419016ce.png","gravatar_id":"b96196ac5b306a6f0d302dd9f82a24ee","url":"https://api.github.com/users/szalansky","html_url":"https://github.com/szalansky","followers_url":"https://api.github.com/users/szalansky/followers","following_url":"https://api.github.com/users/szalansky/following{/other_user}","gists_url":"https://api.github.com/users/szalansky/gists{/gist_id}","starred_url":"https://api.github.com/users/szalansky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/szalansky/subscriptions","organizations_url":"https://api.github.com/users/szalansky/orgs","repos_url":"https://api.github.com/users/szalansky/repos","events_url":"https://api.github.com/users/szalansky/events{/privacy}","received_events_url":"https://api.github.com/users/szalansky/received_events","type":"User"},"id":"4401093","created_at":"2012-12-28T19:28:03Z","updated_at":"2012-12-28T19:28:03Z"},{"url":"https://api.github.com/gists/4568476","user":{"login":"flomey","id":3226735,"avatar_url":"https://1.gravatar.com/avatar/3143afe043a2fdcd6a22a537e4cc3c8e?d=https%3A%2F%2Fidenticons.github.com%2F9271b5a509f2dabd1c5850acf684759c.png","gravatar_id":"3143afe043a2fdcd6a22a537e4cc3c8e","url":"https://api.github.com/users/flomey","html_url":"https://github.com/flomey","followers_url":"https://api.github.com/users/flomey/followers","following_url":"https://api.github.com/users/flomey/following{/other_user}","gists_url":"https://api.github.com/users/flomey/gists{/gist_id}","starred_url":"https://api.github.com/users/flomey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flomey/subscriptions","organizations_url":"https://api.github.com/users/flomey/orgs","repos_url":"https://api.github.com/users/flomey/repos","events_url":"https://api.github.com/users/flomey/events{/privacy}","received_events_url":"https://api.github.com/users/flomey/received_events","type":"User"},"id":"4568476","created_at":"2013-01-18T20:59:25Z","updated_at":"2013-01-18T20:59:25Z"},{"url":"https://api.github.com/gists/4732801","user":{"login":"mhebing","id":905115,"avatar_url":"https://2.gravatar.com/avatar/14e2a01d187cb0a167942e24e9234f95?d=https%3A%2F%2Fidenticons.github.com%2Fb874dedd9bb70a549db142d519aa6648.png","gravatar_id":"14e2a01d187cb0a167942e24e9234f95","url":"https://api.github.com/users/mhebing","html_url":"https://github.com/mhebing","followers_url":"https://api.github.com/users/mhebing/followers","following_url":"https://api.github.com/users/mhebing/following{/other_user}","gists_url":"https://api.github.com/users/mhebing/gists{/gist_id}","starred_url":"https://api.github.com/users/mhebing/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhebing/subscriptions","organizations_url":"https://api.github.com/users/mhebing/orgs","repos_url":"https://api.github.com/users/mhebing/repos","events_url":"https://api.github.com/users/mhebing/events{/privacy}","received_events_url":"https://api.github.com/users/mhebing/received_events","type":"User"},"id":"4732801","created_at":"2013-02-07T17:57:21Z","updated_at":"2013-02-07T17:59:53Z"},{"url":"https://api.github.com/gists/5074215","user":{"login":"fumingshih","id":171536,"avatar_url":"https://0.gravatar.com/avatar/cdaeda52c7e0e7db119ec242652a7eac?d=https%3A%2F%2Fidenticons.github.com%2Ff3daf33ead84c02b32d673addce28321.png","gravatar_id":"cdaeda52c7e0e7db119ec242652a7eac","url":"https://api.github.com/users/fumingshih","html_url":"https://github.com/fumingshih","followers_url":"https://api.github.com/users/fumingshih/followers","following_url":"https://api.github.com/users/fumingshih/following{/other_user}","gists_url":"https://api.github.com/users/fumingshih/gists{/gist_id}","starred_url":"https://api.github.com/users/fumingshih/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fumingshih/subscriptions","organizations_url":"https://api.github.com/users/fumingshih/orgs","repos_url":"https://api.github.com/users/fumingshih/repos","events_url":"https://api.github.com/users/fumingshih/events{/privacy}","received_events_url":"https://api.github.com/users/fumingshih/received_events","type":"User"},"id":"5074215","created_at":"2013-03-03T02:30:54Z","updated_at":"2013-03-03T02:30:54Z"},{"url":"https://api.github.com/gists/5126805","user":{"login":"xiddw","id":742519,"avatar_url":"https://2.gravatar.com/avatar/e3aea2d1cdb375467416bff41c614582?d=https%3A%2F%2Fidenticons.github.com%2Ffd082f32f1f9679671081ba58bb37459.png","gravatar_id":"e3aea2d1cdb375467416bff41c614582","url":"https://api.github.com/users/xiddw","html_url":"https://github.com/xiddw","followers_url":"https://api.github.com/users/xiddw/followers","following_url":"https://api.github.com/users/xiddw/following{/other_user}","gists_url":"https://api.github.com/users/xiddw/gists{/gist_id}","starred_url":"https://api.github.com/users/xiddw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiddw/subscriptions","organizations_url":"https://api.github.com/users/xiddw/orgs","repos_url":"https://api.github.com/users/xiddw/repos","events_url":"https://api.github.com/users/xiddw/events{/privacy}","received_events_url":"https://api.github.com/users/xiddw/received_events","type":"User"},"id":"5126805","created_at":"2013-03-10T02:21:30Z","updated_at":"2013-03-10T02:21:30Z"},{"url":"https://api.github.com/gists/5353918","user":{"login":"stared","id":1001610,"avatar_url":"https://2.gravatar.com/avatar/1b324e4900e79878eb518c1263b41795?d=https%3A%2F%2Fidenticons.github.com%2F031dfe1b6a9e475fa708179fb35beb3b.png","gravatar_id":"1b324e4900e79878eb518c1263b41795","url":"https://api.github.com/users/stared","html_url":"https://github.com/stared","followers_url":"https://api.github.com/users/stared/followers","following_url":"https://api.github.com/users/stared/following{/other_user}","gists_url":"https://api.github.com/users/stared/gists{/gist_id}","starred_url":"https://api.github.com/users/stared/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stared/subscriptions","organizations_url":"https://api.github.com/users/stared/orgs","repos_url":"https://api.github.com/users/stared/repos","events_url":"https://api.github.com/users/stared/events{/privacy}","received_events_url":"https://api.github.com/users/stared/received_events","type":"User"},"id":"5353918","created_at":"2013-04-10T11:42:03Z","updated_at":"2013-04-10T11:43:47Z"},{"url":"https://api.github.com/gists/5600181","user":{"login":"huashuai","id":256761,"avatar_url":"https://1.gravatar.com/avatar/279030da669c3950fc54dea37ee3109e?d=https%3A%2F%2Fidenticons.github.com%2Fc66590f0228b4de1b7d16d1b8f10161c.png","gravatar_id":"279030da669c3950fc54dea37ee3109e","url":"https://api.github.com/users/huashuai","html_url":"https://github.com/huashuai","followers_url":"https://api.github.com/users/huashuai/followers","following_url":"https://api.github.com/users/huashuai/following{/other_user}","gists_url":"https://api.github.com/users/huashuai/gists{/gist_id}","starred_url":"https://api.github.com/users/huashuai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huashuai/subscriptions","organizations_url":"https://api.github.com/users/huashuai/orgs","repos_url":"https://api.github.com/users/huashuai/repos","events_url":"https://api.github.com/users/huashuai/events{/privacy}","received_events_url":"https://api.github.com/users/huashuai/received_events","type":"User"},"id":"5600181","created_at":"2013-05-17T16:15:32Z","updated_at":"2013-05-17T16:15:32Z"},{"url":"https://api.github.com/gists/5639946","user":{"login":"simardcasanova","id":739940,"avatar_url":"https://0.gravatar.com/avatar/63c42221c8ed3dfc335a0d1b19397e36?d=https%3A%2F%2Fidenticons.github.com%2F819fcce6467f36e0beb6ffc69afa9f21.png","gravatar_id":"63c42221c8ed3dfc335a0d1b19397e36","url":"https://api.github.com/users/simardcasanova","html_url":"https://github.com/simardcasanova","followers_url":"https://api.github.com/users/simardcasanova/followers","following_url":"https://api.github.com/users/simardcasanova/following{/other_user}","gists_url":"https://api.github.com/users/simardcasanova/gists{/gist_id}","starred_url":"https://api.github.com/users/simardcasanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simardcasanova/subscriptions","organizations_url":"https://api.github.com/users/simardcasanova/orgs","repos_url":"https://api.github.com/users/simardcasanova/repos","events_url":"https://api.github.com/users/simardcasanova/events{/privacy}","received_events_url":"https://api.github.com/users/simardcasanova/received_events","type":"User"},"id":"5639946","created_at":"2013-05-23T22:24:19Z","updated_at":"2013-05-23T22:24:57Z"},{"url":"https://api.github.com/gists/5965077","user":{"login":"habi","id":1651235,"avatar_url":"https://1.gravatar.com/avatar/4a0a820ba6c1996bc37d64ce14606ad4?d=https%3A%2F%2Fidenticons.github.com%2Fbaa3c8588d9ab73deea280466d5db7e1.png","gravatar_id":"4a0a820ba6c1996bc37d64ce14606ad4","url":"https://api.github.com/users/habi","html_url":"https://github.com/habi","followers_url":"https://api.github.com/users/habi/followers","following_url":"https://api.github.com/users/habi/following{/other_user}","gists_url":"https://api.github.com/users/habi/gists{/gist_id}","starred_url":"https://api.github.com/users/habi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/habi/subscriptions","organizations_url":"https://api.github.com/users/habi/orgs","repos_url":"https://api.github.com/users/habi/repos","events_url":"https://api.github.com/users/habi/events{/privacy}","received_events_url":"https://api.github.com/users/habi/received_events","type":"User"},"id":"5965077","created_at":"2013-07-10T09:57:15Z","updated_at":"2013-07-10T09:57:40Z"},{"url":"https://api.github.com/gists/6394053","user":{"login":"glaubius","id":5349064,"avatar_url":"https://0.gravatar.com/avatar/ff2451755814a23845b19551371bb026?d=https%3A%2F%2Fidenticons.github.com%2Faa59a5980a33a834ee55c9f386e7c996.png","gravatar_id":"ff2451755814a23845b19551371bb026","url":"https://api.github.com/users/glaubius","html_url":"https://github.com/glaubius","followers_url":"https://api.github.com/users/glaubius/followers","following_url":"https://api.github.com/users/glaubius/following{/other_user}","gists_url":"https://api.github.com/users/glaubius/gists{/gist_id}","starred_url":"https://api.github.com/users/glaubius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glaubius/subscriptions","organizations_url":"https://api.github.com/users/glaubius/orgs","repos_url":"https://api.github.com/users/glaubius/repos","events_url":"https://api.github.com/users/glaubius/events{/privacy}","received_events_url":"https://api.github.com/users/glaubius/received_events","type":"User"},"id":"6394053","created_at":"2013-08-30T20:39:05Z","updated_at":"2013-08-30T20:39:05Z"},{"url":"https://api.github.com/gists/6463518","user":{"login":"janten","id":1794407,"avatar_url":"https://2.gravatar.com/avatar/44f5d723bf2ef2dac40327bfa9815989?d=https%3A%2F%2Fidenticons.github.com%2Fe177a89b246259b7b5a84411923e6881.png","gravatar_id":"44f5d723bf2ef2dac40327bfa9815989","url":"https://api.github.com/users/janten","html_url":"https://github.com/janten","followers_url":"https://api.github.com/users/janten/followers","following_url":"https://api.github.com/users/janten/following{/other_user}","gists_url":"https://api.github.com/users/janten/gists{/gist_id}","starred_url":"https://api.github.com/users/janten/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janten/subscriptions","organizations_url":"https://api.github.com/users/janten/orgs","repos_url":"https://api.github.com/users/janten/repos","events_url":"https://api.github.com/users/janten/events{/privacy}","received_events_url":"https://api.github.com/users/janten/received_events","type":"User"},"id":"6463518","created_at":"2013-09-06T13:04:58Z","updated_at":"2013-09-06T13:04:58Z"}],"history":[{"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"version":"3e0e8350f040f21811ceea13975086158ccae986","committed_at":"2010-06-25T06:52:37Z","change_status":{"total":3,"additions":2,"deletions":1},"url":"https://api.github.com/gists/149016/3e0e8350f040f21811ceea13975086158ccae986"},{"user":{"login":"kogakure","id":5535,"avatar_url":"https://0.gravatar.com/avatar/b53f98d49e275e8387897de02c92288d?d=https%3A%2F%2Fidenticons.github.com%2F7ec69dd44416c46745f6edd947b470cd.png","gravatar_id":"b53f98d49e275e8387897de02c92288d","url":"https://api.github.com/users/kogakure","html_url":"https://github.com/kogakure","followers_url":"https://api.github.com/users/kogakure/followers","following_url":"https://api.github.com/users/kogakure/following{/other_user}","gists_url":"https://api.github.com/users/kogakure/gists{/gist_id}","starred_url":"https://api.github.com/users/kogakure/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kogakure/subscriptions","organizations_url":"https://api.github.com/users/kogakure/orgs","repos_url":"https://api.github.com/users/kogakure/repos","events_url":"https://api.github.com/users/kogakure/events{/privacy}","received_events_url":"https://api.github.com/users/kogakure/received_events","type":"User"},"version":"a3ce60041fe20410fc55d141e77a25d26e1a562a","committed_at":"2009-07-17T11:37:43Z","change_status":{"total":22,"additions":22,"deletions":0},"url":"https://api.github.com/gists/149016/a3ce60041fe20410fc55d141e77a25d26e1a562a"}]}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/blobs/681fb61f1761743a02f5c790f1c762cbfe8cfad1
{'If-None-Match': '"01162d231bc8dfd76e35f833ecebaa0e"', 'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4866'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'da1e9461-f849-4250-85c4-978c8e9e496d'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"01162d231bc8dfd76e35f833ecebaa0e"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:11 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/commits/be37b8a7f3a68631c32672dcd84d9eba27438ee6
{'If-None-Match': '"b9013239d62338e81f6ec48bae78699e"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Thu, 22 Nov 2012 19:06:01 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4866'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '05667811-3080-4fb5-a32a-de8debc918ba'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Thu, 22 Nov 2012 19:06:01 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"b9013239d62338e81f6ec48bae78699e"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:12 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/ref/tags/v1.17.0
{'If-None-Match': '"feb5059cac897bdd13fd1205785f865c"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:41:05 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4866'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd852d843-7bb6-4ffc-a4fb-55621588f819'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:13 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/git/trees/6f7c2d8c66d78863f7b91792deaead619799a1ce
{'If-None-Match': '"feb5059cac897bdd13fd1205785f865c"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:41:05 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4866'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '787d7bf1-e453-4694-87f6-bf3ed4855b87'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:14 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/hooks/423574
{'If-None-Match': '"f7b3dbaaca94c0219f23e9021e78506f"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:41:06 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4866'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '40b5c72c-2017-43d7-9b3a-9f2531db400c'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:06 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"f7b3dbaaca94c0219f23e9021e78506f"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:15 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/hooks/423574
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4865'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '409e8b85-37ed-4244-b316-1824ddee228c'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '462'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:06 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"f7b3dbaaca94c0219f23e9021e78506f"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:21 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"url":"https://api.github.com/repos/jacquev6/PyGithub/hooks/423574","test_url":"https://api.github.com/repos/jacquev6/PyGithub/hooks/423574/test","id":423574,"name":"travis","active":true,"events":["push","pull_request","issue_comment","public","member"],"config":{"domain":"","token":"pJdnhcDq3dQ9Cr1J1znQ","user":"jacquev6"},"last_response":{"code":200,"status":"active","message":"OK"},"updated_at":"2013-09-06T12:41:06Z","created_at":"2012-09-16T07:14:29Z"}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/188
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4865'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'e886b291-23e5-4d71-84d7-78bb6ce13206'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:22 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/comments/22686536
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4865'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'f9addbd4-bd0d-4978-8dae-6f91fd22763f'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:23 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/events/60946408
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4865'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd0f0ed2b-5a02-4538-b7cb-79e35c27f985'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:24 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/issues/events/60946408
{'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4864'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '92278efc-1781-4b40-9fe4-112cf30d3d3f'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept, Authorization, Cookie, Accept-Encoding'), ('content-length', '5613'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:25 GMT'), ('access-control-allow-origin', '*'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"id":60946408,"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/events/60946408","actor":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"event":"assigned","commit_id":null,"created_at":"2013-08-15T05:55:32Z","issue":{"url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/labels{/name}","comments_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/comments","events_url":"https://api.github.com/repos/jacquev6/PyGithub/issues/188/events","html_url":"https://github.com/jacquev6/PyGithub/issues/188","id":17736533,"number":188,"title":"Getting the status of GitHub","user":{"login":"ruxandraburtica","id":797922,"avatar_url":"https://0.gravatar.com/avatar/5703c5907fc67b679be40fd307b07733?d=https%3A%2F%2Fidenticons.github.com%2F470a720db37e19afad67c34e30ffcd85.png","gravatar_id":"5703c5907fc67b679be40fd307b07733","url":"https://api.github.com/users/ruxandraburtica","html_url":"https://github.com/ruxandraburtica","followers_url":"https://api.github.com/users/ruxandraburtica/followers","following_url":"https://api.github.com/users/ruxandraburtica/following{/other_user}","gists_url":"https://api.github.com/users/ruxandraburtica/gists{/gist_id}","starred_url":"https://api.github.com/users/ruxandraburtica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruxandraburtica/subscriptions","organizations_url":"https://api.github.com/users/ruxandraburtica/orgs","repos_url":"https://api.github.com/users/ruxandraburtica/repos","events_url":"https://api.github.com/users/ruxandraburtica/events{/privacy}","received_events_url":"https://api.github.com/users/ruxandraburtica/received_events","type":"User"},"labels":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Functionalities","name":"Functionalities","color":"e102d8"},{"url":"https://api.github.com/repos/jacquev6/PyGithub/labels/Requested+by+user","name":"Requested by user","color":"e10c02"}],"state":"closed","assignee":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"milestone":{"url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31","labels_url":"https://api.github.com/repos/jacquev6/PyGithub/milestones/31/labels","id":402388,"number":31,"title":"Version 1.19.0","description":"","creator":{"login":"jacquev6","id":327146,"avatar_url":"https://2.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https%3A%2F%2Fidenticons.github.com%2Ffadfb5f7088ef66579d198a3c9a4935e.png","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","url":"https://api.github.com/users/jacquev6","html_url":"https://github.com/jacquev6","followers_url":"https://api.github.com/users/jacquev6/followers","following_url":"https://api.github.com/users/jacquev6/following{/other_user}","gists_url":"https://api.github.com/users/jacquev6/gists{/gist_id}","starred_url":"https://api.github.com/users/jacquev6/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jacquev6/subscriptions","organizations_url":"https://api.github.com/users/jacquev6/orgs","repos_url":"https://api.github.com/users/jacquev6/repos","events_url":"https://api.github.com/users/jacquev6/events{/privacy}","received_events_url":"https://api.github.com/users/jacquev6/received_events","type":"User"},"open_issues":0,"closed_issues":3,"state":"open","created_at":"2013-08-15T05:54:47Z","updated_at":"2013-09-06T09:42:02Z","due_on":null},"comments":2,"created_at":"2013-08-07T08:57:49Z","updated_at":"2013-09-06T09:11:57Z","closed_at":"2013-09-06T09:11:57Z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"Maybe I haven't found it, but it would be very useful to have methods for checking the status of the GitHub API (https://status.github.com/api)"}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/labels/Bug
{'If-None-Match': '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Sat, 20 Oct 2007 11:24:19 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4864'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd4b19adc-a9cc-4710-b146-93a5c3edb71f'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Sat, 20 Oct 2007 11:24:19 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:26 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/milestones/17
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4864'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '21cfd2f1-595f-480a-bbf0-e9259d46277e'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:28 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/users/nvie
{'If-None-Match': '"ded215d39a497c6d2de00dd5e5a5deb6"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 13:38:58 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4864'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd669c122-58f7-447d-8d21-b48c619cca41'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 13:38:58 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"ded215d39a497c6d2de00dd5e5a5deb6"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:29 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/notifications/threads/8406712
{'If-None-Match': '"848b2905eeb475bca3c72fe17bedcc0c"', 'Authorization': 'token private_token_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4863'), ('x-github-media-type', 'github.beta; format=json'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '974ec572-54e3-4f64-bcff-c203fea238da'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('content-length', '4203'), ('server', 'GitHub.com'), ('x-ratelimit-limit', '5000'), ('etag', '"a1285606034653c336a6b673a35733c1"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:29 GMT'), ('access-control-allow-origin', '*'), ('x-poll-interval', '60'), ('content-type', 'application/json; charset=utf-8'), ('x-ratelimit-reset', '1378482241')]
{"id":"8406712","unread":null,"reason":"subscribed","updated_at":"2013-03-15T05:43:11Z","last_read_at":null,"subject":{"title":"Feature/coveralls","url":"https://api.github.com/repos/ZIMK/fwadmin/pulls/21","latest_comment_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/comments/14944813","type":"PullRequest"},"repository":{"id":8432784,"name":"fwadmin","full_name":"ZIMK/fwadmin","owner":{"login":"ZIMK","id":1187008,"avatar_url":"https://2.gravatar.com/avatar/ce407a684dac7cf642606501244dd9f0?d=https%3A%2F%2Fidenticons.github.com%2Fa8b50d6bf21d85e47ce11e1d23087af2.png","gravatar_id":"ce407a684dac7cf642606501244dd9f0","url":"https://api.github.com/users/ZIMK","html_url":"https://github.com/ZIMK","followers_url":"https://api.github.com/users/ZIMK/followers","following_url":"https://api.github.com/users/ZIMK/following{/other_user}","gists_url":"https://api.github.com/users/ZIMK/gists{/gist_id}","starred_url":"https://api.github.com/users/ZIMK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZIMK/subscriptions","organizations_url":"https://api.github.com/users/ZIMK/orgs","repos_url":"https://api.github.com/users/ZIMK/repos","events_url":"https://api.github.com/users/ZIMK/events{/privacy}","received_events_url":"https://api.github.com/users/ZIMK/received_events","type":"Organization"},"private":false,"html_url":"https://github.com/ZIMK/fwadmin","description":"Django based self-service firewall config tool","fork":true,"url":"https://api.github.com/repos/ZIMK/fwadmin","forks_url":"https://api.github.com/repos/ZIMK/fwadmin/forks","keys_url":"https://api.github.com/repos/ZIMK/fwadmin/keys{/key_id}","collaborators_url":"https://api.github.com/repos/ZIMK/fwadmin/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/ZIMK/fwadmin/teams","hooks_url":"https://api.github.com/repos/ZIMK/fwadmin/hooks","issue_events_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/events{/number}","events_url":"https://api.github.com/repos/ZIMK/fwadmin/events","assignees_url":"https://api.github.com/repos/ZIMK/fwadmin/assignees{/user}","branches_url":"https://api.github.com/repos/ZIMK/fwadmin/branches{/branch}","tags_url":"https://api.github.com/repos/ZIMK/fwadmin/tags","blobs_url":"https://api.github.com/repos/ZIMK/fwadmin/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/ZIMK/fwadmin/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/ZIMK/fwadmin/git/refs{/sha}","trees_url":"https://api.github.com/repos/ZIMK/fwadmin/git/trees{/sha}","statuses_url":"https://api.github.com/repos/ZIMK/fwadmin/statuses/{sha}","languages_url":"https://api.github.com/repos/ZIMK/fwadmin/languages","stargazers_url":"https://api.github.com/repos/ZIMK/fwadmin/stargazers","contributors_url":"https://api.github.com/repos/ZIMK/fwadmin/contributors","subscribers_url":"https://api.github.com/repos/ZIMK/fwadmin/subscribers","subscription_url":"https://api.github.com/repos/ZIMK/fwadmin/subscription","commits_url":"https://api.github.com/repos/ZIMK/fwadmin/commits{/sha}","git_commits_url":"https://api.github.com/repos/ZIMK/fwadmin/git/commits{/sha}","comments_url":"https://api.github.com/repos/ZIMK/fwadmin/comments{/number}","issue_comment_url":"https://api.github.com/repos/ZIMK/fwadmin/issues/comments/{number}","contents_url":"https://api.github.com/repos/ZIMK/fwadmin/contents/{+path}","compare_url":"https://api.github.com/repos/ZIMK/fwadmin/compare/{base}...{head}","merges_url":"https://api.github.com/repos/ZIMK/fwadmin/merges","archive_url":"https://api.github.com/repos/ZIMK/fwadmin/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/ZIMK/fwadmin/downloads","issues_url":"https://api.github.com/repos/ZIMK/fwadmin/issues{/number}","pulls_url":"https://api.github.com/repos/ZIMK/fwadmin/pulls{/number}","milestones_url":"https://api.github.com/repos/ZIMK/fwadmin/milestones{/number}","notifications_url":"https://api.github.com/repos/ZIMK/fwadmin/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/ZIMK/fwadmin/labels{/name}"},"url":"https://api.github.com/notifications/threads/8406712","subscription_url":"https://api.github.com/notifications/threads/8406712/subscription"}

https
GET
api.github.com
None
/orgs/BeaverSoftware
{'If-None-Match': '"99d8ce990ccf1acbb3508bd20d9883e4"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Wed, 23 Jan 2013 12:15:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4863'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '2941dffb-707a-40d0-b4e7-a66e923fa01e'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Wed, 23 Jan 2013 12:15:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"99d8ce990ccf1acbb3508bd20d9883e4"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:30 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/pulls/31
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4863'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '70632470-ec82-4aed-9456-a63147919253'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:32 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub/pulls/comments/1580134
{'If-None-Match': '"654d1a29abe3a61b096e8bffbc61c162"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:51:22 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4863'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', '2ca3f96b-7771-41a5-9aba-d8dedc12e465'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:51:22 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"654d1a29abe3a61b096e8bffbc61c162"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:35 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/repos/jacquev6/PyGithub
{'If-None-Match': '"feb5059cac897bdd13fd1205785f865c"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Fri, 06 Sep 2013 12:41:05 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4863'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'beb42a35-9e06-4b99-9abc-5b7e4e71fa85'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Fri, 06 Sep 2013 12:41:05 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"feb5059cac897bdd13fd1205785f865c"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:36 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]


https
GET
api.github.com
None
/teams/141487
{'If-None-Match': '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"', 'User-Agent': 'PyGithub/Python', 'Authorization': 'token private_token_removed', 'If-Modified-Since': 'Sat, 20 Oct 2007 11:24:19 GMT'}
None
304
[('status', '304 Not Modified'), ('x-ratelimit-remaining', '4863'), ('x-content-type-options', 'nosniff'), ('access-control-expose-headers', 'ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes'), ('x-github-request-id', 'd65865d1-e84d-418b-8465-54b9c8034ead'), ('access-control-allow-credentials', 'true'), ('vary', 'Accept-Encoding'), ('server', 'GitHub.com'), ('last-modified', 'Sat, 20 Oct 2007 11:24:19 GMT'), ('x-ratelimit-limit', '5000'), ('etag', '"a4af9b5fe3ebc7d9ec2ecd4a637a4863"'), ('cache-control', 'private, max-age=60, s-maxage=60'), ('date', 'Fri, 06 Sep 2013 15:06:37 GMT'), ('access-control-allow-origin', '*'), ('x-ratelimit-reset', '1378482241')]
