https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4927'), ('content-length', '52085'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=2>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last"'), ('etag', '"5e8867ffb4e7630e852b2b231f3b9cdb"'), ('date', 'Tue, 29 May 2012 19:36:57 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-05-27T18:11:17Z","body":"Since more and more of the OF Core now relies on Poco (ie ofThread, etc) does OF_USING_POCO make sense anymore?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1280","comments":0,"milestone":null,"number":1280,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1280","assignee":null,"title":"deprecate OF_USING_POCO?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-27T18:03:23Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"danomatika","id":480637},"id":4772349,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-28T08:08:24Z","body":"There occurs a weir glitch when compiling the ofShader example with my HD Graphics 3000  (288 Mb) (Mac osx 10.7.4 - Mac Mini - i5 - 2.3Ghz)\n\nI was able to get rid of the glitch by replacing \"gl_FragColor = gl_Color;\" with \"gl_FragColor = 255.0;\" or any other number.\nAnybody knows a reason for the glitch / proper solution?\n\nScreenshot: http://goo.gl/Xdf74\nOpenGL capacities on different graphic cards on apple machines: http://goo.gl/FGQ2N","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1279","comments":2,"milestone":null,"number":1279,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1279","assignee":null,"title":"ofShader example with HD Graphics 3000 issue","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-26T19:27:56Z","state":"open","user":{"url":"https://api.github.com/users/subtiv","gravatar_id":"837cfe96365c031130a46311eb11d86a","avatar_url":"https://secure.gravatar.com/avatar/837cfe96365c031130a46311eb11d86a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"subtiv","id":1012684},"id":4767675,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-25T18:39:02Z","body":"produces an error on app exit or tex destruction.\n\n     OF: OF_LOG_ERROR: trying to delete a non indexed texture, something weird is happening. Deleting anyway\n\nThis is because retain(int id) is a static function in ofTexture.cpp. So we can't retain the depthStencilTexture.\n\nThis suggest we should move the texture allocation of the depth / stencil texture to ofTexture - something which is not possible at the moment. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1277","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1277,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1277","assignee":null,"title":"ofFbo can't retain depthStencil Texture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-05-25T18:37:46Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofTheo","id":144000},"id":4758608,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-22T21:26:57Z","body":"\nthe offending line is: \n\nif( speed.getValue() != preSpeed ){\n\nwhich is evaluating as true even through the slider is not touched (float equality test, etc). \n\nif we alter it to something like: \n\nif(  fabs(speed.getValue() - preSpeed) > 0.0001 ){\n\nthe code runs fine.  probably nicer to add a \"value changed()\" functionality to the slider object though or use EPSILON, etc. \n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1271","comments":0,"milestone":null,"number":1271,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1271","assignee":null,"title":"periodic signal example doesn't run well on windows / cb (float equality error)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-05-22T21:26:57Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"id":4700182,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-22T16:41:21Z","body":"There's some error that appears on linux systems running the project generator to make VS examples, where the debug and release libs for opencv get added badly to the vs project: \n\n\t<AdditionalDependencies>%(AdditionalDependencies);opencv_highgui231d.lib;opencv_calib3d231.lib;opencv_imgproc231d.lib;opencv_haartraining_engined.lib;opencv_gpu231d.lib;opencv_flann231.lib;opencv_contrib231d.lib;opencv_video231d.lib;opencv_objdetect231d.lib;zlib.lib;opencv_core231d.lib;opencv_contrib231.lib;opencv_ml231d.lib;opencv_features2d231.lib;opencv_core231.lib;opencv_gpu231.lib;opencv_legacy231d.lib;opencv_haartraining_engine.lib;opencv_highgui231.lib;opencv_ml231.lib;opencv_imgproc231.lib;opencv_objdetect231.lib;opencv_legacy231.lib;opencv_video231.lib</AdditionalDependencies>\n\t\t\t\t<AdditionalLibraryDirectories>%(AdditionalLibraryDirectories);..\\..\\..\\addons\\ofxOpenCv\\libs\\opencv\\lib\\vs2010</AdditionalLibraryDirectories>\n\nthis doesn't seem to be the case on osx or windows, which produces correct results: \n\n\t<AdditionalDependencies>%(AdditionalDependencies);opencv_calib3d231.lib;opencv_contrib231.lib;opencv_core231.lib;opencv_features2d231.lib;opencv_flann231.lib;opencv_gpu231.lib;opencv_haartraining_engine.lib;opencv_highgui231.lib;opencv_imgproc231.lib;opencv_legacy231.lib;opencv_ml231.lib;opencv_objdetect231.lib;opencv_video231.lib;zlib.lib</AdditionalDependencies>\n\nwould be good to look at the logic of \"visualStudioProject::addAddon()\" and see if we can fix this.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1268","comments":9,"milestone":null,"number":1268,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1268","assignee":null,"title":"project generator - bad libs for VS / opencv examples","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/visual+studio","name":"visual studio","color":"ba4eba"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-05-20T21:50:24Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"id":4662873,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-17T00:43:37Z","body":"I woud love some eyes on ofFbo would be great to get it cleaned up and standardized for 0072. \nRight now there are a ton of #ifdefs and some very hard to follow logic, which makes bug fixing quite difficult especially on OPENGL_ES\n\nsee: https://gist.github.com/2711815\n\n@elliotwoods @arturoc @memotv @damiannz  @ofZach @kylemcdonald \n\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1263","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1263,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1263","assignee":null,"title":"ofFbo.cpp is a huge mess! ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-16T16:27:30Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofTheo","id":144000},"id":4608132,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-17T14:29:02Z","body":"I added a .mailmap file to the repo to correctly collate all the contributors in spite of changing nick names/email addresses. This is useful when trying to identify contributors for a changelog or similar, or when using the git logging functions like shortlog.\n\nSee the before/after situation here: https://gist.github.com/2710366\n\nI have respected privacy and only used those real names that people have already given in a git ID in the repo. Mainly this addition only associates the different email addresses to one user. @arturoc wins the prize of most used emails! :-)\nThe list is pretty complete, I only had difficulties to associate some IDs to the correct Zachs, since it was not clear for some if @ofZach or @stfj (Zach Gage) was the contributor. Those were left as-is.\n\nIf anybody has objections to their various email being united under their name, please say so and I will correct/remove the relevant entries.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1262","comments":2,"milestone":null,"number":1262,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1262","assignee":null,"title":"Add .mailmap for contributor collation","labels":[],"closed_at":null,"created_at":"2012-05-16T13:44:32Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"id":4604661,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1262.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1262","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1262.patch"}},{"updated_at":"2012-05-16T09:35:31Z","body":"Address #375.\n\nAdd setVolumef(float). Also more clearly define volume ranges (int is 0..255, float is 0..1) and more robust clamping of volume argument.\n\nThis has not been tested on Linux or Windows.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1260","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1260,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1260","assignee":null,"title":"allow float volume on ofVideoPlayer","labels":[],"closed_at":null,"created_at":"2012-05-15T17:50:22Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"damiannz","id":144366},"id":4588997,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1260.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1260","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1260.patch"}},{"updated_at":"2012-05-21T07:31:47Z","body":"This was originally posted @\"biginners\".\n\nhttp://forum.openframeworks.cc/index.php/topic,9527.msg44049.html#msg44049\n\nJoshua noble suggested me to file it as a bug on jithub\n\n\n/////////////////original messages\n\nHello.\n\nI have question about ofShortPixels and ofShortColor.\n\nIf you execute the code below , it'll draw at half way screen height even though I did set aDot at (0. screen height / 4)\n\nAnd another weird thing is it draws 20 pixels instead of 10 pixels which I set for loop for 10 times.\n\nIt only draws correctly with ofPixels and ofColor.\n\nIt doesn't work with ofFloatPixels and ofFloatColor.\n\nPlease help me out.\n\nI need to have RGB value over 255 so I can check if those values are over 255.\n\nThanks in advanced\n\nJin\n\n\n.h file\nCode:\nview plaincopy to clipboardprint?\n\n    #pragma once  \n    #include \"ofMain.h\"  \n      \n    class Dot  {      \n    public:  \n        ofVec2f location;  \n      \n        Dot(){  \n            location.set(0,0);  \n        }  \n          \n        ~Dot(){}  \n    };  \n      \n    class testApp : public ofBaseApp{      \n    public:  \n        void setup();  \n        void update();  \n        void draw();  \n      \n        int w,h;  \n          \n        ofTexture particleTexture;  \n        ofShortPixels * rgbPixels;  \n          \n        ofShortColor&  paint(ofShortColor &);  \n          \n        Dot aDot;  \n          \n          \n    };  \n\n\n.cpp file\nCode:\nview plaincopy to clipboardprint?\n\n    #include \"testApp.h\"  \n    //--------------------------------------------------------------  \n    void testApp::setup(){  \n        ofSetFrameRate(30);  \n        ofSetBackgroundAuto(TRUE);  \n        ofBackground(0, 0, 0);  \n        w = ofGetWidth();  \n        h = ofGetHeight();  \n          \n        particleTexture.allocate(w,h,GL_RGB);  \n        rgbPixels = new ofShortPixels;  \n        rgbPixels->allocate(w, h, 3);  \n        aDot.location.set(0, h/4);  \n    }  \n      \n    //--------------------------------------------------------------  \n    void testApp::update(){  \n        ofShortColor pixelColor;  \n        ofShortColor newPixelColor;  \n        for(int i = 0; i<10; i++){  \n            pixelColor = rgbPixels->getColor(aDot.location.x+i, aDot.location.y);  \n              \n            newPixelColor = paint(pixelColor);  \n      \n            rgbPixels->setColor(aDot.location.x+i, aDot.location.y,newPixelColor);  \n      \n        }  \n        particleTexture.loadData(* rgbPixels);  \n    }  \n      \n    //--------------------------------------------------------------  \n    void testApp::draw(){  \n        particleTexture.draw(0, 0, w, h);  \n    }  \n      \n    ofShortColor &  testApp::paint(ofShortColor & _c){  \n          \n        _c.r += 10;  \n        _c.g += 2;  \n        _c.b += 3;  \n      \n        _c.set(_c.r, _c.g, _c.b);  \n        _c.clamp();  \n          \n        return _c;  \n    }  ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1257","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1257,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1257","assignee":null,"title":"ofShortPixels doesn't draw pixels correctly","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-14T05:46:14Z","state":"open","user":{"url":"https://api.github.com/users/gazaebal","gravatar_id":"f9d7811bb6318fedf7e9f2fe8bfece32","avatar_url":"https://secure.gravatar.com/avatar/f9d7811bb6318fedf7e9f2fe8bfece32?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"gazaebal","id":1736190},"id":4557803,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-17T21:42:08Z","body":"if i'm not mistaken, the correct way of using ofMatrix4x4 in oF is `glMultMatrixf(myMatrix.getPtr())` or `glLoadMatrixf`.\nThis seems a bit uncomfortable for me.\n\nsome candidates are:\n\n```c++\nofPushMatrix(const ofMatrix4x4 &); //needs alternatives as you might not want to push at the time\nofLoadMatrix(const ofMatrix4x4 &);\nofMultMatrix(const ofMatrix4x4 &);\n\nofMatrix4x4::apply();\nofMatrix4x4::glLoadMatrix(matrixMode = OF_MATRIX_MODE_CURRENT);\n```\n\n\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1256","comments":5,"milestone":null,"number":1256,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1256","assignee":null,"title":"Feature ofPushMatrix(const ofMatrix4x4 &)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-13T18:20:29Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"elliotwoods","id":328294},"id":4554058,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-11T21:24:20Z","body":"\tunsigned char faceSize = 3;\n\tif(data.getNumIndices()){\n\t\tos << \"element face \" << data.getNumIndices() / faceSize << endl;\n\t\tos << \"property list uchar int vertex_indices\" << endl;\n\t} else if(data.getMode() == OF_PRIMITIVE_TRIANGLES) {\n\t\tos << \"element face \" << data.getNumVertices() / faceSize << endl;\n\t\tos << \"property list uchar int vertex_indices\" << endl;\n\t}\n\nThe facesize is being set as static as 3, but this results in strange exports...things open OK in Meshlab, but exporting to other programs with no faces seems like it won't work","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1252","comments":6,"milestone":null,"number":1252,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1252","assignee":null,"title":"0071 ply (mesh.save()) Point export is broken","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-11T19:45:53Z","state":"open","user":{"url":"https://api.github.com/users/laserpilot","gravatar_id":"07001341fe6c156dddd5b9d06d828cba","avatar_url":"https://secure.gravatar.com/avatar/07001341fe6c156dddd5b9d06d828cba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"laserpilot","id":1041023},"id":4539985,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-16T09:33:31Z","body":"couple of minor bugfixes (absolute path wasn't being detected on second if [absolute] for windows paths)\r\nfixes unixy paths no matter what on windows","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1251","comments":8,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1251,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1251","assignee":null,"title":"Bugfix of to data path","labels":[],"closed_at":null,"created_at":"2012-05-10T06:44:20Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"elliotwoods","id":328294},"id":4507572,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1251.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1251","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1251.patch"}},{"updated_at":"2012-05-16T09:43:23Z","body":":(\r\n\r\nIt seems i'm getting double 'data/' in my paths\r\nafter a little tracking down, i found this is because ofSystemLoadDialog changes the current working directory\r\n\r\nso we could try and either fix that by popping the folder after the dialog, \r\nof for windows using something like ```GetModuleFileName``` to get the path of the current exe rather than using the current working directory\r\n\r\nI can't seem to run GetModuleFileName from ofUtils.cpp even though windows.h is included in ofConstants.h (included in ofUtils.h)\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1250","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1250,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1250","assignee":null,"title":"bug: ofToDataPath broken again","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-05-10T06:35:24Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"elliotwoods","id":328294},"id":4507492,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-16T09:42:44Z","body":"'ofx TCPClient :: receiveRaw' was found in the proble.\n\nOriginal :\n\n\tint ofxTCPClient::receiveRawBytes(char * receiveBuffer, int numBytes){\n\t\t\t messageSize = TCPClient.Receive(receiveBuffer, numBytes);\t\n\t\t\t if(messageSize==0){\t\t\n\t\t\t\t\t\tclose();\t\n\t\t\t }\t\n\t\t\t return messageSize;\n\t}\n\nBut 'TCPClient.Receive (receiveBuffer, numBytes)' from '-1' may return\n\nI was modified\n\n\tstring ofxTCPClient::receiveRaw(){\n\t\t\t messageSize = TCPClient.Receive(tmpBuff, TCP_MAX_MSG_SIZE);\n\t\t\t if(messageSize==0){\n\t\t\t\t\t\tclose();\n\t\t\t }\n\t\t\t //TCPClient.Receive is return -1....\n\t\t\t else if(messageSize < 0){ \n\t\t\t\t\t\ttmpBuff[0] = 0;\n\t\t\t }\n\t\t\t else if(messageSize<TCP_MAX_MSG_SIZE) {\n\t\t\t\t\t// null terminate!!\n\t\t\t\t\ttmpBuff[messageSize] = 0;\n\t\t\t}\n\t\t\t return tmpBuff;\n\t}\n\nThere is also need to check the other parts.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1249","comments":3,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1249,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1249","assignee":null,"title":"string ofxTCPClient::receiveRaw() in ofxTCPClient.cpp ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"}],"closed_at":null,"created_at":"2012-05-10T06:23:23Z","state":"open","user":{"url":"https://api.github.com/users/YeongJoo-Kim","gravatar_id":"e3805241b205e8ed57f8c83ea850e6e3","avatar_url":"https://secure.gravatar.com/avatar/e3805241b205e8ed57f8c83ea850e6e3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"YeongJoo-Kim","id":604111},"id":4507416,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-29T14:55:19Z","body":"Updated Codeblocks wizard for Linux to work with Project Generator.\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1245","comments":5,"milestone":null,"number":1245,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1245","assignee":null,"title":"Cbwizard","labels":[],"closed_at":null,"created_at":"2012-05-07T00:31:17Z","state":"open","user":{"url":"https://api.github.com/users/pierrep","gravatar_id":"be11c9de8242e7aef0446eceaa289e01","avatar_url":"https://secure.gravatar.com/avatar/be11c9de8242e7aef0446eceaa289e01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"pierrep","id":392160},"id":4447561,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1245.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1245","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1245.patch"}},{"updated_at":"2012-05-29T18:12:46Z","body":"The way ofThread's destructor worked was causing cleanup code at the end of threadedFunction to be skipped, sometimes leaving shared resources in an unusable state. This patch makes sure that the ofThread destructor waits until the thread has properly exited. \r\n\r\nIMO this patch is critical, but it should be treated with caution, as this has the possibility to cause deadlocks in code with multiple threads where the cleanup order is not clearly defined.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1239","comments":12,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1239,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1239","assignee":null,"title":"Fix ofThread destructor behaviour","labels":[],"closed_at":null,"created_at":"2012-05-03T14:54:46Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"damiannz","id":144366},"id":4406584,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1239.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1239","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1239.patch"}},{"updated_at":"2012-05-16T09:42:24Z","body":"I was trying to load a file in a subclass. I'm used to doing that in a constructor, but after an hour of debugging I found out that I can only do this if I make some kind of setup function. Because otherwise it's called before openframeworks is initialized. \r\n\r\nWhy not initialize openframeworks before ofRunApp or in the constructor ofBaseApp? \r\n\r\nTo reproduce put the following code in a constructor of a class and in a setup function that you call from the testapp setup.  \r\nofFile f(\"DroidSans.ttf\");\r\ncout << f.getAbsolutePath() << endl;\r\n\r\nDifference is that when you load a file from the constructor the absolute url becomes:\r\n/Developer/openFrameworks/007/apps/data/DroidSans.ttf\r\nFrom a setup function that I call in the setup function of TestApp:\r\n/Developer/openFrameworks/007/apps/experiments/FindingFont2/bin/data/DroidSans.ttf","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1236","comments":3,"milestone":null,"number":1236,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1236","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"arturoc","id":48240},"title":"init openframeworks before constructor of testapp is called?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-05-02T13:24:49Z","state":"open","user":{"url":"https://api.github.com/users/peteruithoven","gravatar_id":"f39b1485b28be1dc2b98f269235218bc","avatar_url":"https://secure.gravatar.com/avatar/f39b1485b28be1dc2b98f269235218bc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"peteruithoven","id":523210},"id":4384548,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-02T12:51:38Z","body":"Right now (007), how do you get a volume of a sample? a float sample.volume?\r\n\r\nhttp://www.openframeworks.cc/documentation/sound/ofSoundPlayer.html#volume\r\n\r\nBut if you look at ofSoundPlayer or ofBaseSoundPlayer there is no variable volume, or length, or pan, or speed. This brings up a compile error in Xcode saying:\r\n\r\nNo member named 'volume' in 'ofSoundPlayer'\r\n\r\nSo here are the variables:\r\n\r\nbool bLoop\r\nbool bLoadedOk\r\nbool bPaused\r\nfloat pan\r\nfloat volume\r\nfloat speed\r\nunsigned int length\r\n\r\nHere are the set methods:\r\n\r\nsetVolume(...)\r\nsetPan(...)\r\nsetSpeed(...)\r\nsetPaused(...)\r\nsetLoop(...)\r\nsetMultiPlay(...)\r\nsetPosition(...)\r\n\r\nHere are the gets:\r\n\r\ngetPosition()\r\ngetIsPlaying()\r\ngetSpeed()\r\ngetPan()\r\nsetPlayer(...)\r\ngetPlayer()\r\nsetPositionMS(...)\r\ngetPositionMS()\r\n\r\nWhat is missing?\r\n\r\ngetVolume()\r\ngetPaused()\r\ngetLoop()\r\n\r\nOr has this already been fixed?\r\n\r\nCheers\r\n\r\n\r\n\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1235","comments":1,"milestone":null,"number":1235,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1235","assignee":null,"title":"no get methods for ofSoundPlayer","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-05-02T12:06:15Z","state":"open","user":{"url":"https://api.github.com/users/chrisoshea","gravatar_id":"62d775b0fa28bcde2d9d29405d059be3","avatar_url":"https://secure.gravatar.com/avatar/62d775b0fa28bcde2d9d29405d059be3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"chrisoshea","id":104786},"id":4383465,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-03T08:19:23Z","body":"It would be great if the PG could get an option to generate the examples of non-core addons which the user has downloaded and placed in `OF/addons/`. This would really be useful to quickly look at/work with an addon.\r\n\r\nThe PG already knows about these addons. It would scan for folders in am addon's root directory with `example` in the name somewhere, and probably check the requisite structure (`src` folder, `addons.make` in place, etc), then generate the project file just the way it would if the example were in `OF/examples/addons/someExample`. Folder depth is the same, so I hope this is just a matter of adjusting the root folder for the example generation process - `addons` instead of `examples`.\r\n\r\nThoughts? Feedback?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1234","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1234,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1234","assignee":null,"title":"PG should generate examples in non-core addons","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-05-01T20:24:05Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"id":4373361,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-04T03:31:24Z","body":"This idea I had came up during the latest devmeet: \r\n\r\n*Proposal*\r\n\r\nI think it would be great if the PG would in the future offer automated downloading of addons. This would lower the barrier for people getting addons they want/need. Additionally, it would take away/reduce the need/desire to include popular addons in the OF core repo and/or release download, if addons are so easy to get, as part of a workflow we already envision the users to follow in the future (i.e. the PG)\r\n\r\n*Behaviour as it is now/soon:*\r\n\r\nAlice has an idea for a new project. She needs a couple addons for realising her project, and knows which ones. \r\nShe opens a browser to go to ofxaddons.com and/or github to download the addons if she doesn't have them yet and places them into `OF/addons/`. Alice starts the PG. The PG knows about the addons, and allows her to select them for inclusion. She creates a project and starts coding.\r\n\r\n*Desired/envisioned behaviour:*\r\n\r\nBob has an idea for a new project. He needs a couple addons for realising his project, and knows which ones. \r\nBob uses the new version of the PG to create a project. Beside the list of installed addons, the PG offers a dropdown list to select addons to download and place into the proper place. It lets Bob select if he prefers a plain download (to just use the addon), or a cloned git repo (to stay up-to-date and/or propose improvements to the addon author). Bob selects the desired addons to download, waits a while until PG reports that they're in place, and chooses all needed addons from the newly expanded list. He creates a project, and start coding the Next Big Thing, without even needing the browser! Awesome, right?\r\n\r\n*Analysis:*\r\n\r\nAlthough I realize that this is no trivial feature, I think much of what we need is already in place. \r\nPG knows about the repo structure, which addons are already there, etc., and has most of the file-manipulation logic already I think. \r\nofxaddons.com maintains a list of available addons and their locations, so I hope it's rather easy to present this in some machine-readable way for PG consumption (@obviousjim, thoughts?). \r\nWget/curl/git could take care of the download. \r\nofxGUI would have to be extended with a dropdown list, or some other way of (space)efficiently presenting the huge list of addons available.\r\n\r\nPossible issues: \r\nCross-platform way of downloading/git cloning without pulling to many dependencies (Elliot brought this up I think). Maybe have a fallback chain of mechanisms?\r\nAddon structure may not comply to what is expected (for old addons e.g.), so the project wouldn't work in the beginning. The same issue would appear on manual download, though.\r\n\r\n\r\nThoughts and Feedback, please. :-)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1233","comments":2,"milestone":null,"number":1233,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1233","assignee":null,"title":"PG should offer addons download","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-05-01T20:15:17Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"id":4373201,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-02T16:11:13Z","body":"should result in a gray circle, instead its white \r\n\r\n\tofColor c(255, 0, 0);\r\n\tc.setSaturation(0);\t\r\n\tofSetColor(c);\r\n\tofFill();\t\r\n\tofCircle(100,400,50);\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1232","comments":11,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1232,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1232","assignee":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"kylemcdonald","id":157106},"title":"bug/feature in ofColor::setSaturation ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-05-01T17:40:08Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofTheo","id":144000},"id":4370619,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-01T06:35:54Z","body":"How do you feel about passing matrices to ofShader as a uniform?\r\n\r\nsomething like:\r\n\r\n\tvoid ofShader::setUniformMatrix4fv(const char* name, ofMatrix& matrix ) {\r\n\t\tif(bLoaded)\r\n\t\t\tglUniformMatrix4fv(getUniformLocation(name), 1, GL_FALSE, matrix.getPtr());\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1229","comments":1,"milestone":null,"number":1229,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1229","assignee":null,"title":"pass matrices as uniforms with ofShader ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-30T19:49:38Z","state":"open","user":{"url":"https://api.github.com/users/Larsberg","gravatar_id":"bb9a4f7c510339e9d7a447347dc263ba","avatar_url":"https://secure.gravatar.com/avatar/bb9a4f7c510339e9d7a447347dc263ba?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"Larsberg","id":346072},"id":4356530,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-04T12:43:13Z","body":"@julapy do we need to add resources that are in bin/data/ to the xcode project for them to get copied to the device? \r\nat the moment the project generator doesn't add bin/data/ files but the simulator seems to be able to find them okay.\r\n\r\nin the past we needed to add the files to the xcode project so that they would be copied to the device. \r\n\r\nI can make the changes to make this happen but don't want to do it if its not needed. \r\n\r\nthanks!\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1228","comments":1,"milestone":null,"number":1228,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1228","assignee":null,"title":"ios - question. PG not adding bin/data/ files to xcode project","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"}],"closed_at":null,"created_at":"2012-04-30T15:42:23Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofTheo","id":144000},"id":4352401,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-29T14:50:40Z","body":"I find that I'm using rectangles with rounded corners quiet often and seems like a fairly simple addition.\r\nAn example of using this is as follows:\r\n\r\n    ofSetPolyMode(OF_POLY_WINDING_ODD);\r\n    ofSetLineWidth(1.5);\r\n    ofEnableSmoothing();\r\n    ofNoFill();\r\n    ofSetHexColor(0x000000);\r\n    ofRoundedRect(630,520,80,60,9);\r\n    ofDisableSmoothing();\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1223","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1223,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1223","assignee":null,"title":"Feature of rounded rect","labels":[],"closed_at":null,"created_at":"2012-04-27T06:35:58Z","state":"open","user":{"url":"https://api.github.com/users/lawarner","gravatar_id":"030dc27a9e68781f8c0090d2adc5312e","avatar_url":"https://secure.gravatar.com/avatar/030dc27a9e68781f8c0090d2adc5312e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"lawarner","id":1479237},"id":4317009,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1223.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1223","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1223.patch"}},{"updated_at":"2012-05-16T09:27:12Z","body":"Updated ofQuickTimePlayer to properly handle videos with an alpha channel. This uses the setPixelFormat() method, so all you need to do is:\r\n```\r\nmyVideoPlayer.setPixelFormat(OF_PIXELS_RGBA);\r\nmyVideoPlayer.loadMovie(\"path/to/movie.mov\");\t\r\nmyVideoPlayer.play();\r\n```","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1218","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1218,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1218","assignee":null,"title":"ofQuickTimePlayer with alpha","labels":[],"closed_at":null,"created_at":"2012-04-25T18:48:41Z","state":"open","user":{"url":"https://api.github.com/users/prisonerjohn","gravatar_id":"b52cabeecffe4497699db813a715456f","avatar_url":"https://secure.gravatar.com/avatar/b52cabeecffe4497699db813a715456f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"prisonerjohn","id":119702},"id":4286936,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1218.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1218","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1218.patch"}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=2
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4942'), ('content-length', '49679'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=3>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="prev"'), ('etag', '"cf9ec647fbc78faae05cb2d11598f79c"'), ('date', 'Tue, 29 May 2012 19:27:10 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-04-30T19:43:55Z","body":"On 'update', PG should respect existing custom include paths, source files, linker flags and project options (such as optimization settings).\r\n\r\nOR\r\n\r\nXcode project should read and respect `OTHER_LDFLAGS` and `HEADER_SEARCH_PATHS`, and add `OTHER_CFLAGS` from Project.xcconfig; projectGenerator should leave these settings alone unless it figures out they need to be adjusted (this is probably going to be difficult).","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1217","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1217,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1217","assignee":null,"title":"projectGenerator update doesn't respect existing project settings","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-04-24T21:03:44Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366,"avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4269431,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-02T10:19:07Z","body":"Since I don't want to derail #484 further, this issue deals with the implementation of a deprecation mechanism.\r\nBased on [this](http://stackoverflow.com/questions/295120/c-mark-as-deprecated), I made an OFDEPRECATED preproc macro.\r\n\r\nQUESTION: How do I correctly #ifdef for MacOS/XCode4/llvm?\r\n\r\nCould people test this on different platforms? On linux this works. \r\n\r\n\t\ttestApp.h:\r\n\r\n\t\t#pragma once\r\n\r\n\t\t#ifdef __GNUC__\r\n\t\t// maybe  __clang__ for checking against llvm/xcode4?\r\n\t\t#define OFDEPRECATED(message, func) func __attribute__ ((deprecated(message)))\r\n\t\t#elif defined(_MSC_VER)\r\n\t\t#define OFDEPRECATED(message, func) __declspec(deprecated(message)) func\r\n\t\t#else\r\n\t\t#pragma message(\"WARNING: You need to implement DEPRECATED for this compiler\")\r\n\t\t#define OFDEPRECATED(message, func) func\r\n\t\t#endif\r\n\r\n\t\tand \r\n\r\n\t\t\t\tvoid dragEvent(ofDragInfo dragInfo);\r\n\t\t\t\tvoid gotMessage(ofMessage msg);\r\n\t\t\r\n\t\t\t\tOFDEPRECATED(\"This is an old function, don't use!\", void deprecatedFunction(void));\r\n\t\t\t\tOFDEPRECATED(\"Obsolete type, use T2!\", typedef int T1);\r\n\t\t\t\ttypedef int T2;\r\n\t\t\t\tOFDEPRECATED(\"This is an old variable, don't use!\", int oldvar3);\r\n\t\t\t\t//This breaks a bit cause it's used in the constructor of testApp, so always triggers.\r\n\r\n\t\t};\r\n\t\tOFDEPRECATED(\"old class!\", class oldClass {\r\n\t\t\tpublic:\r\n\t\t\t\toldClass();\r\n\t\t\t\tvirtual ~oldClass();\r\n\t\t});\r\n\r\n\t\ttestApp.cpp:\r\n\r\n\t\tvoid testApp::setup(){\r\n\t\t\tOFDEPRECATED(\"old string. Don't use\", string oldstring);\r\n\t\t\t// Uncomment these to trigger deprecation warnings\r\n\t\t//\tdeprecatedFunction();\r\n\t\t//\tT1 t1object =  5;\r\n\t\t//\toldstring = \"bla\";\r\n\t\t//\toldvar3=5;\r\n\t\t//\toldClass bla;\r\n\t\t}\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1216","comments":11,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1216,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1216","assignee":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Implement deprecation mechanism","labels":[],"closed_at":null,"created_at":"2012-04-24T21:03:39Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4269429,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-30T19:43:14Z","body":"When using PG's 'update' functionality on apps are in paths with non-standard depths (in my case, `oF/apps/dir/subdir/subsubdir`) the OF_PATH and #include directives in the resulting Project.xcconfig don't match, which means oF projects won't compile:\r\n\r\n~~~~\r\n//THE PATH TO THE ROOT OF OUR OF PATH RELATIVE TO THIS PROJECT.\r\n//THIS NEEDS TO BE DEFINED BEFORE CoreOF.xcconfig IS INCLUDED\r\nOF_PATH = ../../../..\r\n\r\n//THIS HAS ALL THE HEADER AND LIBS FOR OF CORE\r\n#include \"../../../../../libs/openFrameworksCompiled/project/osx/CoreOF.xcconfig\"\r\n~~~~\r\n\r\nNote extra `../` in the `#include` path.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1215","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1215,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1215","assignee":null,"title":"projectGenerator sets incorrect path in Project.xcconfig","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-04-24T20:59:57Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366,"avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4269359,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-22T23:56:33Z","body":"i'm teaching a workshop right now and i feel like it's ridiculous that i need to explain pointers just to access video :)\r\n\r\nlet's add this!","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1202","comments":3,"milestone":null,"number":1202,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1202","assignee":null,"title":"ofVideoPlayer etc needs ofColor access","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-video","name":"section-video","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-22T18:42:58Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4231092,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-29T17:34:24Z","body":"DO NOT PULL YET!\r\n\r\nHey all\r\n\r\nHere's the 'off-axis camera' setup we worked on at ScreenLab last weekend.\r\nIt allows you to:\r\n\r\n* Set lens offset on a camera\r\n* Calculate the camera parameters based on a 'view portal' defined by 3 points (top left, bottom left, bottom right)\r\n\r\nCurrently the changes involve editing ofBaseRenderer (and therefore all other renderers) to support lensOffset parameter (default 0,0). We could remove this since ofCamera doesn't actually use ofSetupScreenPerspective\r\n\r\nSo let's have a quick chat about what needs chaning to make this core friendly and then probably pull after 0071 release?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1201","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1201,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1201","assignee":null,"title":"Feature provocation pull request:  ofCamera lens offset","labels":[],"closed_at":null,"created_at":"2012-04-22T15:55:29Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4230131,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1201.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1201","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1201.patch"}},{"updated_at":"2012-05-14T01:22:17Z","body":"I'm investigating the way to draw bezier curves / nurbs etc. with shaders, here is a list a links and information I found that can improve render times with OF. Any way I must admit I'm new to openGL & shaders so maybe someone can take this to implement maybe an add-on or maybe to added to the core.\r\n\r\n**Resolution Independent Curve Rendering using Programmable Graphics Hardware**\r\nhttp://research.microsoft.com/en-us/um/people/cloop/loopblinn05.pdf\r\n\r\n**Resolution independent GPU accelerated Curve & Font rendering**\r\n**GPU based Resolution Independent Font & Curve Rendering – initial Release**\r\nhttp://jausoft.com/blog/2011/04/01/resolution-independent-gpu-accelerated-curve-font-rendering/\r\nhttp://ramisantina.com/blog/?p=73\r\nhttp://vimeo.com/21810192\r\nhttp://jogamp.org/doc/gpunurbs2011/p70-santina.pdf\r\n\r\n**Curvy blues**\r\nhttp://www.mdk.org.pl/2007/10/27/curvy-blues\r\n\r\n**Vector drawing: OpenGL shaders and cairo & vector hardware tessellation**\r\nhttp://www.mdk.org.pl/2007/8/6/vector-drawing-opengl-shaders-and-cairo\r\n\r\n**ShivaVG & Random Access Rendering of Animated Vector Graphics**\r\nhttp://ivanleben.blogspot.com.es/2007/07/shivavg-open-source-ansi-c-openvg.html\r\nhttp://www.youtube.com/watch?v=mD8X-e5-sY4\r\nhttp://www.youtube.com/watch?v=U4USCfwORUg\r\nhttp://andrejas-atelier.com/ivan/IvanLebenHonsThesis.pdf\r\n\r\n**RAVG**\r\nhttp://research.microsoft.com/en-us/um/people/hoppe/proj/ravg/\r\n\r\n**NV Path Rendering Videos (seams only with nvidia)**\r\nhttp://developer.nvidia.com/nv-path-rendering-videos\r\n\r\n**Vector drawing: OpenGL polygon tessellation**\r\nhttp://www.mdk.org.pl/2007/8/16/vector-drawing-opengl-polygon-tessellation\r\nhttp://zrusin.blogspot.com.es/2006/07/hardware-accelerated-polygon-rendering.html\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1190","comments":8,"milestone":null,"number":1190,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1190","assignee":null,"title":"Bezier Shaders & Vector openGL rendering","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-2D","name":"section-2D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-20T09:23:00Z","state":"open","user":{"url":"https://api.github.com/users/microbians","gravatar_id":"98c91e60903b83c0a022ee70cca9ca21","login":"microbians","id":1662136,"avatar_url":"https://secure.gravatar.com/avatar/98c91e60903b83c0a022ee70cca9ca21?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4207350,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-16T09:41:20Z","body":"ofSetCurveResolution is not changing the resolution using ofBezier nor ofBezierVertex (tested with ofScale is more easy to see the bug)\r\n\r\n    ofFill();\r\n    ofSetHexColor(0xFF9933);\r\n    ofBeginShape();\r\n    ofVertex(x0,y0);\r\n    ofBezierVertex(x1,y1,x2,y2,x3,y3);\r\n    ofEndShape();\r\n\r\nall works fine when using ofPath directly:\r\n\r\n    ofPath curve;\r\n    curve.setFillHexColor(0xFF000);\r\n    curve.setCurveResolution(120);\r\n    curve.moveTo(x0, y0);\r\n    curve.bezierTo(x1,y1,x2,y2,x3,y3);\r\n    curve.draw();\r\n\r\nmore: http://forum.openframeworks.cc/index.php/topic,9596.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1189","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1189,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1189","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofSetCurveResolution + ofBezierVertex bug","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-20T08:51:51Z","state":"open","user":{"url":"https://api.github.com/users/microbians","gravatar_id":"98c91e60903b83c0a022ee70cca9ca21","login":"microbians","id":1662136,"avatar_url":"https://secure.gravatar.com/avatar/98c91e60903b83c0a022ee70cca9ca21?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4206982,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-01T04:10:23Z","body":"If you set up an ofFbo as follows...\r\n\r\n```cpp\r\n            ofFbo::Settings s;\r\n            s.width = 400;\r\n            s.height = 400;\r\n            s.textureTarget = GL_TEXTURE_2D;\r\n            s.useDepth = true;\r\n            s.depthAsTexture = true;\r\n            s.dethInternalFormat = GL_DEPTH_COMPONENT24;\r\n```\r\n\r\n...then the colour texture's dimensions are set to be the next POTs up but the depth texture's dimensions don't seem to be. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1186","comments":2,"milestone":null,"number":1186,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1186","assignee":null,"title":"ofFbo depthBufferTex can be inconsistent with colour texture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-18T15:08:32Z","state":"open","user":{"url":"https://api.github.com/users/neilmendoza","gravatar_id":"3e46b12547e7bac19eb982bc512b19c4","login":"neilmendoza","id":818571,"avatar_url":"https://secure.gravatar.com/avatar/3e46b12547e7bac19eb982bc512b19c4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4174070,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-16T09:44:27Z","body":"As mentioned here: http://forum.openframeworks.cc/index.php?topic=9107.0\r\nOpenGLES2 not working. It is always falls back to ES1. I tested it only on iPad2 with iOS 5.0.1.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1178","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1178,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1178","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382,"avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"OpenGLES2 not working","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-16T11:19:36Z","state":"open","user":{"url":"https://api.github.com/users/erinnovations","gravatar_id":"29639bbeb3afdde8fb3c7e273e5e43c6","login":"erinnovations","id":253455,"avatar_url":"https://secure.gravatar.com/avatar/29639bbeb3afdde8fb3c7e273e5e43c6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4132608,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-14T13:45:55Z","body":"in ofTexture::loadData we are doing:\r\n\r\n\r\n\t//------------------------ likely, we are uploading continuous data\r\n\tGLint prevAlignment;\r\n\tglGetIntegerv(GL_UNPACK_ALIGNMENT, &prevAlignment);\r\n\tglPixelStorei(GL_UNPACK_ALIGNMENT, 1);\r\n\r\nany reason for this? leaving the default works too. i've been working with a huge video and the transfer rates on some cards were super slow with ofTexture::loadData. even glDrawPixels was faster, i've finally used pbo's but later looking at ofTexture discovered this lines and i suspect that it could be the reason for loadData being slower, haven't tested it yet though.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1175","comments":0,"milestone":null,"number":1175,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1175","assignee":null,"title":"GL_UNPACK_ALIGNMENT 1 in ofTexture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-14T13:45:42Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4117762,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-16T09:39:22Z","body":"one returns the result (dot) the other performs in place (cross), i.e. overrides the contents\r\nThe two definitions are inconsistent\r\npropose rename `ofVec3f::dot` to become `ofVec3f::getDotted` in line with `ofVec3f::getCrossed`","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1174","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1174,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1174","assignee":null,"title":"bug : inconsistent API for ofVec3f::dot and ofVec3f::cross","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-13T17:09:38Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4108582,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-14T04:20:36Z","body":"If you pass a string containing non-ascii characters to ofToHex(), the non-ascii characters (with character codes above 127) will be output as ffffxxxx (it depends on the exact character value and the size of the int type on the platform you are compiling for).\r\nThe problem is due to an incorrect cast in the ostringstream operation inside the loop.\r\nInstead of directly casting the (signed) char from the input character to an unsigned int, the input character must first be cast to an unsigned char.\r\nIn other words, instead of:\r\n```   out << setfill('0') << setw(2) << hex << (unsigned int) value[i];```\r\nit should be:\r\n```   out << setfill('0') << setw(2) << hex << (unsigned int) ((unsigned char)value[i]);```\r\nor maybe even:\r\n```   out << setfill('0') << setw(2) << hex << static_cast<unsigned int>(static_cast<unsigned char>(value[i]));```\r\nif you prefer C++ style casts over C style casts. :)\r\n\r\nHTH\r\n/Jesper","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1173","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1173,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1173","assignee":null,"title":"ofToHex(string) is wrong for non-ascii input","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-13T14:42:30Z","state":"open","user":{"url":"https://api.github.com/users/pappis","gravatar_id":"fbf3d56c96cf5b891056530066549692","login":"pappis","id":1640543,"avatar_url":"https://secure.gravatar.com/avatar/fbf3d56c96cf5b891056530066549692?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4104336,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-12T10:09:42Z","body":"if I call ofBeginSaveScreenAsPDF using ofEasyCam or the ofCamera, the pdf doesn't have the perspective of the camera. There's a parameter b3d to ofBeginSaveScreenAsPDF which I interpret to be \"render taking into account 3d transforms\", but it doesn't seem to have any effect.\r\n\r\nmore on the forum\r\n\r\nhttp://forum.openframeworks.cc/index.php/topic,9542.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1171","comments":0,"milestone":null,"number":1171,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1171","assignee":null,"title":"ofBeginSaveScreenAsPDF ignores 3d transformations","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-04-12T10:09:42Z","state":"open","user":{"url":"https://api.github.com/users/jesusgollonet","gravatar_id":"5008d5295e9bc2636313c7b50ed5981d","login":"jesusgollonet","id":31100,"avatar_url":"https://secure.gravatar.com/avatar/5008d5295e9bc2636313c7b50ed5981d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4081188,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-13T14:54:18Z","body":"if I have `ofEvent<bool> boolEvent` and i try to call `ofNotifyEvent( boolEvent, true )` i get a `no matching function` error as the compiler cannot coerce `true` to a `bool &`.\r\n\r\nto solve this, instead of this:\r\n\r\n~~~~\r\nofEvent<bool> boolEvent;\r\n...\r\nofNotifyEvent( boolEvent, true );\r\n~~~~\r\n\r\ni need to write this:\r\n\r\n~~~~\r\nofEvent<bool> boolEvent;\r\n...\r\nbool myBool = true;\r\nofNotifyEvent( boolEvent, myBool );\r\n~~~~\r\n\r\nthis is kind of annoying.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1167","comments":2,"milestone":null,"number":1167,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1167","assignee":null,"title":"ofNotifyEvent( boolEvent, true ) fails to compile","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-11T12:03:34Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366,"avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4063456,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-11T13:21:33Z","body":"It's currently not possible to have an event without arguments\r\n\r\n`ofEvent testEvent;` -- fails to compile\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1166","comments":2,"milestone":null,"number":1166,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1166","assignee":null,"title":"ofEvent lacks simple, argument-free use case","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-11T12:00:19Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366,"avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4063417,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-21T15:41:01Z","body":"It's currently not possible to write `ofLogError( \"serial\", \"error %i connecting to serial\", serialError )`. \r\n\r\nThere should be `ofLogError( string module, string format, ... )` methods as with normal ofLog.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1165","comments":6,"milestone":null,"number":1165,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1165","assignee":null,"title":"ofLogError, ofLogWarning lack format, ... args","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-11T11:56:33Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366,"avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4063366,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-10T16:47:19Z","body":"change `allocate(_w, _h, OF_IMAGE_COLOR);` to `allocate(_w, _h, OF_IMAGE_COLOR_ALPHA);` (via reza on irc)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1152","comments":4,"milestone":null,"number":1152,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1152","assignee":null,"title":"grabScreen in ofImage fails on Android","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-09T17:15:21Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4032047,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-29T14:46:40Z","body":"the module name is no longer printed if it's coming from OF itself.\r\n\r\ninstead of the constant name, a human-readable string is printed.\r\n\r\nexample output from project generator: http://pastebin.com/raw.php?i=0dp938Jx","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1151","comments":6,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1151,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1151","assignee":null,"title":"shorten + simplify ofLog output","labels":[],"closed_at":null,"created_at":"2012-04-08T21:13:14Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4023525,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/1151.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/1151","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1151.patch"}},{"updated_at":"2012-04-17T14:47:36Z","body":"\r\nWorking on the project generator, which has a fair amount of logging, I'm concerned about how much space we loose on each line: \r\n\r\n    OF: OF_LOG_NOTICE:\r\n\r\nit's about 15-20 characters or so, pretty significant where each line is 80, so alot more wrapping happens then I'd like, making the results less cleaner or organized. \r\n\r\nI propose we alter \r\n\r\n    string ofGetLogLevelName(ofLogLevel level){\r\n        switch(level){\r\n            case OF_LOG_VERBOSE:\r\n                return \"OF_LOG_VERBOSE\";\r\n                break;\r\n            case OF_LOG_NOTICE:\r\n                return \"OF_LOG_NOTICE\";\r\n                break;\r\n            case OF_LOG_WARNING:\r\n                return \"OF_LOG_WARNING\";\r\n                break;\r\n            case OF_LOG_ERROR:\r\n                return \"OF_LOG_ERROR\";\r\n                break;\r\n            case OF_LOG_FATAL_ERROR:\r\n                return \"OF_LOG_FATAL_ERROR\";\r\n                break;\r\n            case OF_LOG_SILENT:\r\n                return \"OF_LOG_SILENT\";\r\n                break;\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\nso that we can have something like : \r\n\r\n    (of:notice) \r\n    (of:verbose) \r\n    (of:error) \r\n\r\nor something smaller and if we loose the all caps, maybe less threatening :)\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1150","comments":4,"milestone":null,"number":1150,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1150","assignee":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"propose shortening ofLog console message length","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-08T20:32:49Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","id":142897,"avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4023305,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-07T15:00:32Z","body":"Hey all\r\n\r\nA few sections of the repo need some love to put them in line with the project generator:\r\n\r\n1. Readme's\r\n2. Rogue old project generators\r\n3. Document complementing tools\r\n\r\n# Readme\r\n\r\nThe readme's in the root of the repo need some love\r\nnone of them mention project generator \r\n\r\ni feel like each should be a description of how to get to a working project generator on each of the respective platforms\r\n\r\nalso note:\r\n*  .vs2010 is missing\r\n* readme.txt repeats information from the other readme's (i.e. it's a list of platform specific instructions)\r\ni think this should be perhaps a little description of oF and a few tips on how to get started\r\n\r\n# Rogue old 'project generators' / documenting complementary tools for project generator\r\n\r\nHere's things I can find in the repo which don't make sense to me at the moment:\r\n\r\n* `openFrameworks\\scripts\\????\\compileAllExamples.bat`\r\n** is this supposed to be run (optionally) after the project generator?\r\n** why is the project template within this folder?\r\n* `openFrameworks\\scripts\\????\\createProjects.py` \r\n** if this isn't supposed to be used anymore, lets delete it immediately (we can always recover in emergencies)\r\n\r\nand the 'other' folder in the root.. perhaps never took off?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1146","comments":0,"milestone":null,"number":1146,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1146","assignee":null,"title":"Document Project Generator / clean out old tools","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2012-04-07T14:43:53Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4015514,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-07T19:49:31Z","body":"When attempting to render a mesh to a PDF the ofCairoRender does not output a filled mesh, thus the PDF output looks empty. \r\n\r\nIf you open the file in illustrator you'll see the paths, there but with no stroke or fill. \r\n\r\nWhen I dug into the issue a bit further I realized that Cairo isn't capable of rendering shapes with per vertex colors easily...\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1145","comments":3,"milestone":null,"number":1145,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1145","assignee":null,"title":"ofCairoRenderer ofMesh doesn't render properly to PDF","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-04-06T22:02:01Z","state":"open","user":{"url":"https://api.github.com/users/rezaali","gravatar_id":"548374013b9c6e50ebbd2294e12d4f31","login":"rezaali","id":555207,"avatar_url":"https://secure.gravatar.com/avatar/548374013b9c6e50ebbd2294e12d4f31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4010494,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-01T04:21:01Z","body":"When using the ofColor subtraction operator, negative results are clamped to positive values instead of 0. Values are circulating between 0 and 255, which could be useful for hue in HSV but in most cases (R, G, B..) is not what I would expect.\r\n\r\n    ofColor a(10, 40, 80);\r\n    ofColor b(20, 5, 30);\r\n    ofColor c = (a-b); // I get: (246, 45, 50), I would expect: (0, 45, 50)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1144","comments":9,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1144,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1144","assignee":null,"title":"ofColor subtraction and negative values","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-04-06T07:56:44Z","state":"open","user":{"url":"https://api.github.com/users/jembezmamy","gravatar_id":"69a23dc9914cb6bc3202c50e15eabba0","login":"jembezmamy","id":720354,"avatar_url":"https://secure.gravatar.com/avatar/69a23dc9914cb6bc3202c50e15eabba0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":4001148,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-04T12:07:24Z","body":"When using the dragEvent ofDragInfo I always get the following error message:\r\n\r\nwarning: Could not find object file \"/Users/theo/Documents/CODE/__OPENFRAMEWORKS/gitOF/openFrameworks/apps/devApps/macDragDropExample/buildGlutFrameworkHackedWindowLevel10.4/libForeground.a(macx_foreground.o)\" - no debug information available for \"/Users/mcast/Code/GLUT-ToPost/macx_foreground.m\".\r\n\r\nIt doesn't seem to hurt my code but is a bit annoying, especially early on when I wasn't sure if it had anything to do with compile failings. Not a big issue obviously, but it might confuse some other newbie's also.\r\n\r\n(OF 0.07 - Xcode 4.2.1 - OS X 10.7.3 - macbook pro) ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1138","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1138,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1138","assignee":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"benign error message","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2012-04-04T11:05:57Z","state":"open","user":{"url":"https://api.github.com/users/davideo71","gravatar_id":"42c3c1acbdb4a998d8096b49745219cd","login":"davideo71","id":1611385,"avatar_url":"https://secure.gravatar.com/avatar/42c3c1acbdb4a998d8096b49745219cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":3968742,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-03T17:37:10Z","body":"theo's #1133 made me think about ways that i use noise regularly that might also be abstracted.\r\n\r\ni would also like to see versions of noise that return multidimensional results. normally i do something like:\r\n\r\n\tofVec2 a(ofSignedNoise(t, 0), ofSignedNoise(0, t)); // 1D -> 2D\r\n\tofVec2 b(ofSignedNoise(x, 0), ofSignedNoise(0, y)); // 2D -> 2D\r\n\tofVec3 c(ofSignedNoise(t, 0, 0), ofSignedNoise(0, t, 0), ofSignedNoise(0, 0, t)); // 1D -> 3D\r\n\tofVec3 d(ofSignedNoise(x, 0, 0), ofSignedNoise(0, y, 0), ofSignedNoise(0, 0, (x + y) / 2)); // 2D -> 3D\r\n\r\nand it would be good to spend some time making sure these are really good ways of doing it, then implement them inside some functions like `ofSignedNoise2()` and `ofSignedNoise3()` (for example).","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1134","comments":2,"milestone":null,"number":1134,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1134","assignee":null,"title":"multidimensional noise output","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-01T16:44:55Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":3917377,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-01T17:48:12Z","body":"ie: the equivalent of doing \r\n\r\nfloat rate = 0.02 + ofNoise(ofGetElapsedTimeF() * 0.02, 100.0) * 0.015;\r\nfloat value = ofSignedNoise( rate, x, y ); \r\n\r\nas one function. \r\n\r\nalso see kyle's #1134 for other noise utils. \r\n\r\nI find myself needing this quite often for more natural random motion where the rate of change is variable. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1133","comments":0,"milestone":null,"number":1133,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1133","assignee":null,"title":"ofNoise and ofSignedNoise with 2nd order control for rate.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-04-01T15:45:11Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":3917018,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=3
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4941'), ('content-length', '55518'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=4>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=2>; rel="prev"'), ('etag', '"414a5c156bbe219ad21d164052b40f6c"'), ('date', 'Tue, 29 May 2012 19:27:11 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-04-02T02:05:52Z","body":"This is a feature discussion issue for what string features we should add to of.\r\nofZach mentioned some regexp ones from P5 match matchAll\r\nWould be great to get some eyes on this.\r\n\r\nOne approach would be a static class or namespace.\r\nThe idea would be we could include a variety of handy functions that would be useful for people not wanting to get into regexp\r\n\r\n\tofString::contains(str, \"apple\")       //returns bool\r\n\tofString::starts(str, \"The\")           //returns bool\r\n\tofString::ends(str, \".\")               //returns bool\r\n\tofString::count(str, \"apples\")         //count how many times apples appears in the \r\n\tofString::join(myVectorStr, \", \");     //this is currently ofJoinString\r\n\tofString::split(someText, \".\");        //this is currently ofSplitString\r\n\tofString::split(someHtml, \"<\", \">\");   //this is the same but returns a vector of things between the start and end delims\r\n\tofString::limit(someText, 200);        //limit the text to 200 characters. optional arg to add ... to the end.\r\n\r\nQuestions:\r\n- Should we mirror P5 with match and matchAll or should we indicate that regexp is required? ie regexMatch regexMatchAll ?\r\n- Other string utils we could add?\r\n- Should it be ofStringUtils:: or ofString:: ?\r\n- Something to do a split and then return a vector of float int etc?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1132","comments":6,"milestone":null,"number":1132,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1132","assignee":null,"title":"ofStringUtils:: feature discussion","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-31T17:52:48Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":3911629,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-05-27T17:40:30Z","body":"This is a feature discussion issue for what should be added / changed to ofTTF.\r\nWould be great to get some eyes on this from @vtron @ofzach @arturoc and anyone with thoughts on the matter.\r\n\r\nTextAreas:\r\n- Fit text to a box\r\n- Handle overflow ( ie either truncate or resize box height )\r\n- non ragged options\r\n- could textAreas work with both ofTTF and ofDrawBitmapString ? abstract text formatting?\r\n\r\nAlignment:\r\n- Left align a string\r\n- Right align\r\n- Center\r\n- Top align \r\n- Base align \r\n\r\nSpacing:\r\n- Kerning\r\n- Leading / line height\r\n\r\nLoading:\r\n- Allow for loading a font up to a max size for drawing at different sizes. \r\n- Allow for selection and loading of specific sizes within one object. ie: myFont.setCurrentSize(12); \r\n- Font family's / sets ? Bold, Italic etc? \r\n\r\nDrawing:\r\n- Allow for drawing font at different sizes. Scale font as needed. \r\n\r\nFormatting:\r\n- Could we somehow allow a string to have different colors, sizes. Right now it is a pain to change colors or sizes. \r\n- would this be replicating basic html or another approach? maybe better as an addon?\r\n\r\nInfo:\r\n- Ability to get the x and y position of the nth character in the string? useful maybe for cursor or selection?\r\n\r\n**Update:**\r\n-Underline\r\n-Render rect behind text ( a la what @kylemcdonald added to ofDrawBitmapString)\r\n-Scale type to fit a rect + keep aspect ratio\r\n-Crazy: text along a path :) ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1131","comments":25,"milestone":null,"number":1131,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1131","assignee":null,"title":"ofTTF feature discussion","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-typography","name":"section-typography","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-31T17:36:25Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":3911537,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-31T14:44:01Z","body":"Agree on a common format for a header in the contributed example files.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1130","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1130,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1130","assignee":null,"title":"Define standard header for examples.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-31T14:44:01Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":3910580,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-04-24T02:12:05Z","body":"\r\n\r\nXcode 4 mangles OF projects pretty badly in the following ways: \r\n\r\na) it autogenerates schemes, and \"openframeworks\" appears as the chosen scheme\r\nb) it sometimes chooses the wrong SDK for OF -- is there a way to set that?\r\nc) debug and release are not really clear, part of this is a shift in xcode -- but it's much harder to see how things are compiled and to set release or debug\r\nd) I still had issues with OF needing to be recompiled all the time.  I tried to fix this, but we should make sure it's done right.  the of lib was appearing red even though it had been built, etc. \r\n\r\nI've tried to fix some of this in detroit with the PG, but I don't think it's the right way to do it.   Overall, it would be great to have projects work smoothly on xcode 4...\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1129","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1129,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1129","assignee":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"title":"xcode 4 issues: scheme, auto-generation of schemes, rebuilding OF, sdk, etc","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode","color":"993e7a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-03-31T14:39:04Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":3910555,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-31T16:32:04Z","body":"When deprecating api's (e.g. ofEvents, ofVertexes), perhaps we could help automate the changes through simple scripts to update api\r\nSuggest sticking to something close to how uncrustify scripts are run (and perhaps there are tools like uncrustify but specifically for this task)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1128","comments":1,"milestone":null,"number":1128,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1128","assignee":null,"title":"upgrade scripts","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-31T14:38:19Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":3910549,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-04-09T16:47:04Z","body":"It would be nice (and useful for testing the PG) if the PG would get an option to clean the examples folders of all generated files. \r\n\r\nCurrently, the quickest option is to delete the examples folder on disk, and do `git reset --hard HEAD`.\r\n\r\nAs before, milestoned for 0071, but feel free to push back.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1126","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1126,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1126","assignee":null,"title":"PG Feature request: Clean examples folder","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-03-30T12:51:30Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":3897090,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-29T16:47:29Z","body":"there is a hard limit of 100 files when using drag & drop into an of app. not sure if it's an of issue, but am curious if it comes from the hacked glutDragEventFunc ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1124","comments":0,"milestone":null,"number":1124,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1124","assignee":null,"title":"void dragEvent(ofDragInfo dragInfo) limited to 100 files in osx lion","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-29T16:47:29Z","state":"open","user":{"url":"https://api.github.com/users/jesusgollonet","gravatar_id":"5008d5295e9bc2636313c7b50ed5981d","login":"jesusgollonet","avatar_url":"https://secure.gravatar.com/avatar/5008d5295e9bc2636313c7b50ed5981d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":31100},"id":3883598,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-29T13:05:25Z","body":"When loading a file with ofImage, ofSoundPlayer , ofVideoPlayer-file or any ofFile it would be nice to be able to know if the file changed since it was loaded.\r\n\r\nIts very simple to implement with Poco::File->getLastModified() and it would be very nice if this would be built into the above classes.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1120","comments":2,"milestone":null,"number":1120,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1120","assignee":null,"title":"isFileChanged() for ofImage, ofVideoPlayer, ofSoundPlayer and ofFile","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-28T16:21:45Z","state":"open","user":{"url":"https://api.github.com/users/imanhp","gravatar_id":"7398ab0bbd07832d0289f26773e65077","login":"imanhp","avatar_url":"https://secure.gravatar.com/avatar/7398ab0bbd07832d0289f26773e65077?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1216228},"id":3856005,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-30T12:19:59Z","body":"paths.make should be in the repo as an example on how to set it up correctly, but changes (i.e. paths unique to every user) to it should be ignored cause everyone will have a different version in their computers so we don't want personal changes to appear in git status.\r\n\r\nI think the best way to solve this is to rename it to paths.make.default, keep this in the repo, maybe with `<your-path-here>` instead of your path, and have people make their own paths.make from that one. We track changes to paths.make.default and ignore paths.make. \r\n\r\nThis will probably also need a mechanism in the makefile to fail gracefully and remind the user, if his customized paths.make is missing.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1118","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1118,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1118","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"Default paths.make for Android","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/android","name":"android","color":"2bc4ad"}],"closed_at":null,"created_at":"2012-03-28T12:19:39Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":3850655,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-04-18T17:13:36Z","body":"Once ofSetFrameRate() is called, I can't find a way to retrieve it. I think implementing a ofGetDesiredFrameRate() in ofAppRunner would make sense, also adding getDesiredFrameRate() to ofAppBaseWindow and all subclasses, where the actual value is stored.  \r\n\r\nThis can be useful to compare the desired frame rate with actual frame rate and react accordingly if required.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1117","comments":0,"milestone":null,"number":1117,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1117","assignee":null,"title":"Can't retrieve desired frame rate once set","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-27T11:48:00Z","state":"open","user":{"url":"https://api.github.com/users/armadillu","gravatar_id":"b87a82d7c86161432ee6388c7cbd5e2c","login":"armadillu","avatar_url":"https://secure.gravatar.com/avatar/b87a82d7c86161432ee6388c7cbd5e2c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":167057},"id":3825582,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-26T22:27:14Z","body":"https://github.com/openframeworks/openFrameworks/blob/master/libs/openFrameworks/gl/ofVbo.cpp#L343\r\n\r\nIndices should be specified as GL_ELEMENT_ARRAY_BUFFER unless I am mistaken.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1116","comments":5,"milestone":null,"number":1116,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1116","assignee":null,"title":"ofVBO updateIndexData incorrect buffer type.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-26T18:26:05Z","state":"open","user":{"url":"https://api.github.com/users/vade","gravatar_id":"37aca214d4875cd90af9d67072c82642","login":"vade","avatar_url":"https://secure.gravatar.com/avatar/37aca214d4875cd90af9d67072c82642?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":65011},"id":3813852,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-26T18:45:51Z","body":"The default optimization settings for debug builds in example XCode projects is set to Fastest,Smallest thus making debugging very difficult, is there a specific reason for this?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1115","comments":3,"milestone":null,"number":1115,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1115","assignee":null,"title":"optimization level in xcode projects","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode","color":"993e7a"}],"closed_at":null,"created_at":"2012-03-26T17:05:14Z","state":"open","user":{"url":"https://api.github.com/users/colormotor","gravatar_id":"2548dbd6a86902ed5260b5f76710b83c","login":"colormotor","avatar_url":"https://secure.gravatar.com/avatar/2548dbd6a86902ed5260b5f76710b83c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1239872},"id":3812318,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-31T15:31:31Z","body":"I had some problems because of macro definitions in ofArduino.h overriding an enum in a a class of my codebase ( SHIFT )\r\nIt's not exactly a bug! but I would suggest using enums or const int instead of the macros to avoid any conflicts\r\nI solved the problem by modifying \r\n#define SHIFT 0x05 \r\ninto \r\nconst int SHIFT = 0x05;\r\n\r\nanother solution could be using enumerations as \r\nenum\r\n{\r\n  ...\r\n  SHIFT = 0x05,\r\n  etc...\r\n};\r\n\r\nI believe this would not break any of the existing code\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1114","comments":1,"milestone":null,"number":1114,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1114","assignee":{"url":"https://api.github.com/users/joshuajnoble","gravatar_id":"10960ba0f305803a1cdc7cd6188d643b","login":"joshuajnoble","avatar_url":"https://secure.gravatar.com/avatar/10960ba0f305803a1cdc7cd6188d643b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":237423},"title":"macros in ofArduino","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-03-26T17:02:21Z","state":"open","user":{"url":"https://api.github.com/users/colormotor","gravatar_id":"2548dbd6a86902ed5260b5f76710b83c","login":"colormotor","avatar_url":"https://secure.gravatar.com/avatar/2548dbd6a86902ed5260b5f76710b83c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1239872},"id":3812275,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-27T14:56:56Z","body":"Hello.\r\n\r\nI'm trying to run camera frame grabing in OSX Lion.\r\nSimple ofVideoGrabber doesn't work - even if I link it with 10.6 SDK (and 10.6 is deployment target) I receive crash in initialization of ofVideoGrabber. Details are the same as in http://forum.openframeworks.cc/index.php/topic,6776.0.html\r\n\r\nI tryed QtKitMovieGrabberExample. It had some problems in compilation - texture property was not synthesized, I wrote this property and compilation run well.\r\nBut linking is fault. All I receive form linker is:\r\n\r\n*Ld bin/movieGrabberExampleDebug.app/Contents/MacOS/movieGrabberExampleDebug normal i386\r\n    cd /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample\r\n    setenv MACOSX_DEPLOYMENT_TARGET 10.6\r\n    /Developer/usr/bin/clang++ -arch i386 -isysroot /Developer/SDKs/MacOSX10.6.sdk -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freeimage/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/GLee/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/rtAudio/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/fmodex/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freetype/lib/osx -L/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx -F/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin -F/Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/glut/lib/osx -filelist /Users/yltastep/Library/Developer/Xcode/DerivedData/movieGrabberExample-aftkspwrgtotrteyzaplfbqzeasd/Build/Intermediates/movieGrabberExample.build/Debug/movieGrabberExample.build/Objects-normal/i386/movieGrabberExampleDebug.LinkFileList -mmacosx-version-min=10.6 -dead_strip ../../../libs/poco/lib/osx/PocoFoundation.a ../../../libs/poco/lib/osx/PocoNet.a ../../../libs/poco/lib/osx/PocoXML.a ../../../libs/poco/lib/osx/PocoUtil.a ../../../libs/tess2/lib/osx/tess2.a ../../../libs/glew/lib/osx/glew.a ../../../libs/cairo/lib/osx/cairo-script-interpreter.a ../../../libs/cairo/lib/osx/cairo.a ../../../libs/cairo/lib/osx/pixman-1.a ../../../libs/fmodex/lib/osx/libfmodex.dylib ../../../libs/rtAudio/lib/osx/rtAudio.a /Users/yltastep/Documents/XCode/openframeworks/libs/openFrameworksCompiled/lib/osx/openFrameworksDebug.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/GLee/lib/osx/GLee.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/rtAudio/lib/osx/rtAudio.a -framework AGL -framework ApplicationServices -framework AudioToolbox -framework Carbon -framework CoreAudio -framework CoreFoundation -framework CoreServices -framework OpenGL -framework QuickTime -framework AppKit -framework Cocoa -framework IOKit -framework GLUT /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoFoundation.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoNet.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoUtil.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/poco/lib/osx/PocoXML.a /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/freetype/lib/osx/freetype.a -lfmodex /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/../../../libs/FreeImage/lib/osx/freeimage.a -framework QTKit -framework Quartz -framework QuartzCore -o /Users/yltastep/Documents/XCode/openframeworks/apps/devApps/QtKitMovieGrabberExample/bin/movieGrabberExampleDebug.app/Contents/MacOS/movieGrabberExampleDebug*\r\n\r\n**Command /Developer/usr/bin/clang++ failed with exit code 1**\r\n\r\nSo no explanation of problem.\r\n\r\nIs somebody ran this example successfully ?\r\nAnd what I'm doing wrong ?\r\n\r\nThanks in advance !\r\n\r\nWith regards.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1112","comments":9,"milestone":null,"number":1112,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1112","assignee":null,"title":"Issue with QtKitMovieGrabberExample in apps/devapps","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2012-03-26T12:11:44Z","state":"open","user":{"url":"https://api.github.com/users/OlexandrStepanov","gravatar_id":"aa6e2a475cab75513c9cc435b28eef31","login":"OlexandrStepanov","avatar_url":"https://secure.gravatar.com/avatar/aa6e2a475cab75513c9cc435b28eef31?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":971079},"id":3807459,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-25T20:07:16Z","body":"Todd's example has this code a few times in it by hand, but I'm thinking it's so simple it could be added along side ofSplitString() and would be really useful ?    for sure, more string utility functions are helpful, and for basic text parsing, this is great.  Poco gives us this for free, so it doesn't seem like a huge stretch to think of something like this, plus find and replace, etc.    Would make the regex example much shorter. \r\n\r\np5 has something similar, if that's a helpful argument: \r\n\r\nhttp://processing.org/reference/matchAll_.html\r\n\r\n\r\n\tvector < string > ofxRegex::getMatchedStrings (string contents, string regex );\r\n\tvector < string > ofxRegex::getMatchedStrings (string contents, string regex ){\r\n    \r\n\t    vector < string > results;\r\n\t    RegularExpression regEx(regex);\r\n\t    RegularExpression::Match match;\r\n    \r\n\t    while(regEx.match(contents, match) != 0) {\r\n        \r\n\t        // we get the sub string from the content\r\n\t        // and then trim the content so that we\r\n\t        // can continue to search \r\n\t        string foundStr = contents.substr(match.offset, match.length);\r\n\t        contents = contents.substr(match.offset + match.length);\r\n        \r\n\t        results.push_back(foundStr);\r\n        \r\n\t    }\r\n\t    return results;\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1110","comments":1,"milestone":null,"number":1110,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1110","assignee":null,"title":"add a simple regex function like ofSplitString()","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-03-25T18:56:37Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":3799872,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-25T18:50:13Z","body":"code to recreate: \r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::setup(){\r\n    system(\"pwd;\");\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::update(){\r\n     system(\"pwd;\");\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::draw(){\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::keyPressed(int key){\r\n    cout << ofToDataPath(\"temp\") << endl;\r\n}\r\n\r\nproduces: \r\n\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin\r\n../../../data/temp\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin/emptyExampleDebug.app/Contents/MacOS\r\n/Users/zach/Desktop/openFrameworks__GIT/_myApps/test/emptyExample/bin/emptyExampleDebug.app/Contents/MacOS\r\n\r\nthis is because the code that fixes OSX paths isn't called until you call ofToDataPath().  a good fix I think would be to set ofDataPathRoot (which happens in ofToDataPath) somewhere early in ofRunApp().   Or should it happen even earlier?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1109","comments":3,"milestone":null,"number":1109,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1109","assignee":null,"title":"mac paths don't seem right until you call \"ofToDataPath()\"","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode","color":"993e7a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2012-03-25T18:18:28Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":3799653,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-04-09T13:06:18Z","body":"easycam behaves as expected when inited but as soon as I change it's target it begins to behave strangely.\r\nthere's this imaginary sphere that we are rotating (it's diameter is min (viewport.width, vieport.height)), when the mouse is dragged from inside to outside of it the rotation just jumps to a \"random\" rotation. \r\nas well when you have a the camera rotated more than 180º in some axis the \"trackball\" doesn't behave as expected. yet this behavior is not seen when the target hasn't been changed.\r\n\r\nDoes any one know what's going on?\r\n\r\nI just came across this but I haven't gone deeply into how easycam handles the mouse to rotate. \r\nI'll do so ASAP. If someone can give me any clues I'll really apreciate it.\r\n\r\nregards!","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1108","comments":7,"milestone":null,"number":1108,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1108","assignee":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"title":"easyCam weird behavior when target changed","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-25T00:01:54Z","state":"open","user":{"url":"https://api.github.com/users/roymacdonald","gravatar_id":"fe632ca3d0c42747cfef88a95d942c4a","login":"roymacdonald","avatar_url":"https://secure.gravatar.com/avatar/fe632ca3d0c42747cfef88a95d942c4a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":974878},"id":3795495,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-04-09T16:47:18Z","body":"It would be great if the PG could also generate projects/examples for usage with Eclipse, i.e. just the makefile related files, no CB or other project files.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1103","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1103,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1103","assignee":null,"title":"PG feature request: Generate makefile-only projects","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-03-21T21:43:34Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":3754055,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-19T16:18:43Z","body":"whenever i call ofLog beneath openmp i have to wrap it in  ```#pragma omp critical (ofLog)``` otherwise i get a crash\r\ni found adding the line above \r\nhttps://github.com/openframeworks/openFrameworks/blob/master/libs/openFrameworks/utils/ofLog.cpp#L84\r\nworks pretty well\r\n\r\nany objections to having it in there?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1098","comments":3,"milestone":null,"number":1098,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1098","assignee":null,"title":"feature / bug - #pragma omp critical(ofLog)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-19T14:04:51Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":3710293,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-15T20:34:17Z","body":"I'm finding that `ofDirector::listDir, open` are extremely slow\r\nit seems that it's actually loading the entire dir contents into memory\r\n\r\nit's possible to then do something like\r\n```\r\nofLoadImage(myPixels, dir.getFile(i));\r\n```\r\nand you can quickly load that image from memory. which is faster than\r\n```\r\nofLoadImage(myPixels, dir.getFile(i).getAbsolutePath());\r\n```\r\n\r\nBut this doesn't seem to work consistently (even though the slow listing is consistent)\r\nand surely isn't what we want.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1075","comments":2,"milestone":null,"number":1075,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1075","assignee":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"title":"bug ofDirectory::open(string path) actually loads the entire dir into memory?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-internals","name":"section-internals","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-15T07:54:55Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":3662214,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-14T16:03:06Z","body":"Hello,\r\nI needed alpha channel in short length video for a recent project.\r\nIn the forum there is some old zip file for a ofxAlphaVideoPlayer that is still working, but that's OS X & windows only as it's based on QT.\r\nI'm working on linux, and I didn't find anything for GStreamer, so I modified the existing ofGstUtils and ofGstVideoPlayer.\r\nWould you mind if I do a pull request for this?\r\nI can also provide an example with a short length video using animation codec.\r\nWhat do you think?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1070","comments":6,"milestone":null,"number":1070,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1070","assignee":null,"title":"Alpha movies in GStreamer","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-14T13:02:41Z","state":"open","user":{"url":"https://api.github.com/users/manuelgeoffray","gravatar_id":"c1ec5161b69b4a990436deafb1170d64","login":"manuelgeoffray","avatar_url":"https://secure.gravatar.com/avatar/c1ec5161b69b4a990436deafb1170d64?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":808090},"id":3647640,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-17T19:26:40Z","body":"Hey !\r\n\r\nMe again. Didn't find anywhere this infos. I'm currently testing the travis-ci.org service.\r\nAs many people are working on the project and as many many issue are raised, and fixed, I thought it could be great to add some test and thus the travis service.\r\n\r\nIt would avoid the problem met here :\r\nhttps://github.com/openframeworks/openFrameworks/commit/7ca7833ea1afb6bd5a6c54031e3fa688aa0c0ba8\r\nand the discussion here :\r\nhttps://github.com/openframeworks/openFrameworks/issues/804\r\nor there :\r\nhttps://github.com/openframeworks/openFrameworks/pull/921\r\n\r\nI read that :\r\n\r\n>feel free to make a unitTests folder at the root level of OF -\r\n> that is where all unitTests will go.\r\n\r\nBut didn't find them.\r\n\r\nThe travis service will permit to get the little badge we know well : \r\n[![Build Status](https://secure.travis-ci.org/soixantecircuits/openFrameworks.png?branch=master)](http://travis-ci.org/soixantecircuits/openFrameworks)\r\n\r\nAlso, why not adding some spec test, to ensure future development of features.\r\nI'm currently reading :\r\nhttp://www.squidoo.com/cplusplus-behaviour-driven-development-tools#module124841511\r\nhttp://sourceforge.net/apps/mediawiki/turtle/index.php?title=Turtle\r\n\r\nFor those who want some other nice reading :\r\n\r\nhttp://gamesfromwithin.com/exploring-the-c-unit-testing-framework-jungle\r\n\r\nThe travis test is here, currently it is a total fake, but I just proposed the idea of a test driven development\r\nhttp://travis-ci.org/#!/soixantecircuits/openFrameworks/builds/854259 ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1068","comments":10,"milestone":null,"number":1068,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1068","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"Continuous integration","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-13T15:49:23Z","state":"open","user":{"url":"https://api.github.com/users/gabrielstuff","gravatar_id":"390ea42c23c2c383f973abdafa24bb07","login":"gabrielstuff","avatar_url":"https://secure.gravatar.com/avatar/390ea42c23c2c383f973abdafa24bb07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":285033},"id":3631618,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-13T15:21:30Z","body":"Hi !\r\n\r\nRecently, I've been in lot of languages, from C++ to ruby, passing by the colosus of javascript and the sea of php. Dropping by various and strange framework such as the Cinder, the jQuery, the Rails, the Processing, etc ...\r\n\r\n## the situation \r\n\r\nWhat I have noticed is that a strong architecture and a really ease use of add-ons makes a framework get stronger. For instance, if we take a look at Ruby, we see that the use of gems give him a powerfull advance over his friend php. \r\n\r\n### the Rubyist\r\n\r\nThis way of thinking is getting even better with the http://gembundler.com/ [Bundler](http://gembundler.com/) friend. The gems have dependencies and a simple GemFile help to easily install all dependencies for one project.\r\n\r\n### the Cinderist\r\n\r\nFor Cinder, we get the block, as for OSX, it quiet easy and fast. Drag and drop and play/code.\r\n\r\n### the jQueryist\r\n\r\nWell, it is not frequent to have jQuery plugins depending on other jQuery plugins, but there are several way to handle dependencies on jQuery and JS.\r\n\r\n### the nodist\r\n\r\nThis lead us to http://npmjs.org/, which is really nice with dependencies.\r\nFor instance, if you tried cloud9ide, you know that you just have to make sure you get the proper package.json :\r\n\r\n```\r\n{\r\n  \"name\": \"node-example\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": {\r\n    \"express\": \"2.2.0\"\r\n  }\r\n}\r\n```\r\n\r\nThis file ensure that everything before running the server will be installed via npm.\r\n\r\n### the ofist\r\n\r\nRight now, we just have the addons.make file, which is nice but does not do any lifting for us. We have to verify that the ofx addons has been downloaded and is installed in the right folder.\r\n\r\n- Why not creating a script that will allow to manage dependencies compilation ? \r\nI have this wonderful ofxJSONsettings, but he depends on [JSONCPP](http://jsoncpp.sourceforge.net/) and on boost, so here we will have :\r\n\r\npackage.json file in the ofxJSONsettings folder :\r\n\r\n```\r\n{\r\n  \"name\": \"ofxJSONsettings\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": [{\r\n    \"jsoncpp\": \"0.6.0-rc2\"\r\n    \"url\":\"http://jsoncpp.svn.sourceforge.net/svnroot/jsoncpp/trunk/\"\r\n    \"protocol\":\"svn\"\r\n     }\r\n  ]\r\n}\r\n```\r\n\r\nHum, then, we have our little bash script :\r\n\r\n`xadd -addon ofxJSONsettings`\r\n\r\nand for a project, we have to ensure that the make file run `xadd -addon ofxJSONsettings` if it does not find ofXJSONsettings.\r\n\r\nThis could lead to simplify and easify the use of plugin ! Hey, I want the new [mistubaRenderer](https://github.com/satoruhiga/ofxMitsubaRenderer) let's give a try :\r\n\r\n```\r\n{\r\n  \"name\": \"ofxMitsubaRenderer\",\r\n  \"version\": \"0.0.1\",\r\n  \"dependencies\": [{\r\n    \"mitsuba\": \"0.1\"\r\n    \"url\":\"https://www.mitsuba-renderer.org/hg/mitsuba-bidir\"\r\n    \"protocol\":\"hg\"\r\n     }\r\n  ]\r\n}\r\n```\r\n\r\nWell, this would be simplify if everybody use some same pattern, and respect some convention.\r\n\r\nSo what do you guys think about that ?\r\n\r\n\r\nThank you !\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1063","comments":7,"milestone":null,"number":1063,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1063","assignee":null,"title":"Automatic installer + dependencies handler","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-13T10:44:57Z","state":"open","user":{"url":"https://api.github.com/users/gabrielstuff","gravatar_id":"390ea42c23c2c383f973abdafa24bb07","login":"gabrielstuff","avatar_url":"https://secure.gravatar.com/avatar/390ea42c23c2c383f973abdafa24bb07?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":285033},"id":3627067,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-12T17:58:20Z","body":"right now there is a lot of duplicated code in the vector math classes. for example, normalize() and getNormalized() have separate implementations. if we follow the pattern of always implementing things in self-modifying methods, then providing copy-returning methods as alternatives, this will reduce the amount of code and make it harder to cause bugs or behavioral discrepancies.\r\n\r\n- implementations of an algorithm should always be self-modifying\r\n- copy-returning versions should be implemented using a differently named method, internally making a copy and calling the self-modifying version on the copy.\r\n\r\ne.g. something like (note, this isn't how it's implemented right now):\r\n\r\n\tinline ofVec2f& ofVec2f::normalize() {\r\n\t\tfloat length = (float)sqrt(x*x + y*y);\r\n\t\tif( length > 0 ) {\r\n\t\t\tx /= length;\r\n\t\t\ty /= length;\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\r\n\tinline ofVec2f ofVec2f::getNormalized() const {\r\n\t\tofVec2f result = *this;\r\n\t\treturn result.normalize();\r\n\t}\r\n\r\ntaken from this post https://github.com/openframeworks/openFrameworks/pull/1061#issuecomment-4455601","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1062","comments":4,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"closed_issues":21,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1062,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1062","assignee":null,"title":"regularize code for math addons","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-12T16:33:06Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":3614231,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}},{"updated_at":"2012-03-13T13:07:11Z","body":"Just saw this is the documentation.\r\nVertexes is incorrect (wrong plural)\r\nVertices","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1055","comments":18,"milestone":null,"number":1055,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1055","assignee":null,"title":"ofVertexes?? ofCurveVertexes","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-03-12T01:50:19Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":3605277,"pull_request":{"patch_url":null,"html_url":null,"diff_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=4
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4940'), ('content-length', '44623'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=5>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=3>; rel="prev"'), ('etag', '"7a7b635a35e21a9f69de7a09b9040837"'), ('date', 'Tue, 29 May 2012 19:27:12 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-03-10T17:52:58Z","body":"if you have:\r\n\r\n    uniform float dog;\r\n    float cat;\r\n\r\nand:\r\n\r\n    shader.setUniform1f(\"dog\", ofGetElapsedTimef());\r\n    shader.setUniform1f(\"cat\", ofGetElapsedTimef());\r\n\r\nthere is no currently no error printed to the console, and \"cat\" is mysteriously unchanging while \"dog\" is fine.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1052","comments":0,"milestone":null,"number":1052,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1052","assignee":null,"title":"ofShader should show an error when using an invalid name","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-03-10T17:52:58Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3596240,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:11:08Z","body":"ofxiPhoneScreenGrab saves with compression artifacts.\r\nfix for saving a lossless image in the below post,\r\nhttp://forum.openframeworks.cc/index.php/topic,4737.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1051","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1051,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1051","assignee":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"title":"ofxiPhoneScreenGrab saves with compression artifacts.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-03-10T12:15:33Z","state":"open","user":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"id":3594731,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:09:09Z","body":"just wanted to kick off a discussion about cleaning up ofxiPhone folder structure.\r\nhave this up on the forum, http://forum.openframeworks.cc/index.php/topic,8955.0.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1050","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1050,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1050","assignee":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"title":"clean up ofxiPhone folder structure.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-10T06:32:12Z","state":"open","user":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"id":3593619,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-29T14:55:24Z","body":"This an implementation of ofxiPhoneScreenGrab for Android","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1048","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1048,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1048","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"Adding Android screenshot feature, example to demonstrate it","labels":[],"closed_at":null,"created_at":"2012-03-10T05:31:45Z","state":"open","user":{"url":"https://api.github.com/users/bostonbusmap","avatar_url":"https://secure.gravatar.com/avatar/433032cca043cedb67180dc5109062da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"433032cca043cedb67180dc5109062da","login":"bostonbusmap","id":863262},"id":3593430,"pull_request":{"html_url":"https://github.com/openframeworks/openFrameworks/pull/1048","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1048.patch","diff_url":"https://github.com/openframeworks/openFrameworks/pull/1048.diff"}},{"updated_at":"2012-03-12T15:31:12Z","body":"whenever I try to open a file using system dialog from OF utils or ofxFileDIalogOSX, the video is loaded correctly but it get stuck and doesn't play at all. see:\r\nhttp://forum.openframeworks.cc/index.php/topic,5233.0.html\r\nhttp://forum.openframeworks.cc/index.php/topic,6515.0.html\r\n\r\nquite a big issue IMHO","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1047","comments":8,"milestone":null,"number":1047,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1047","assignee":null,"title":"opening video files with system dialog in osx prevents them to play correctly","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-video","name":"section-video","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-03-09T18:54:28Z","state":"open","user":{"url":"https://api.github.com/users/hvfrancesco","avatar_url":"https://secure.gravatar.com/avatar/e02a8a3953de9d5d9ec1c7aa8d43eca4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e02a8a3953de9d5d9ec1c7aa8d43eca4","login":"hvfrancesco","id":614123},"id":3587808,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-20T16:11:54Z","body":"just a small one but would be great. \r\nmaybe even different icon for debug and release? ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1039","comments":12,"milestone":null,"number":1039,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1039","assignee":null,"title":"make icons for OF apps","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-06T17:56:58Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":3528378,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-06T15:32:44Z","body":"right now it is not clear from a visual perspective what is a button / trigger and what is a toggle. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1037","comments":1,"milestone":null,"number":1037,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1037","assignee":null,"title":"ofxGui, ofxButton should look visually different to toggle","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-05T18:06:03Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":3510933,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-04-10T19:29:53Z","body":"xml is one of the reasons this is currently an addon. \r\nthe original idea was to have something simple and minimal that could be in the core. \r\nalso something which could be built off of for larger gui addons ( hence ofParameter ) \r\n\r\nI see a couple of options going forward.\r\n\r\n1) swtich from xml to newline separated text files and move ofGui into core\r\nthis would be quite simple as ofParameter already has a name, value structure \r\n\r\n2) same as 1) but keep ofxGui as an addon - making it a bit simpler to add to a project \r\n2b) add ofParameter to core as it is more general purpose\r\n\r\n3) bring ofxXmlSettings into the core and bring ofGui into core.\r\n\r\n\r\nanyway I thought it would be good to get some discussion going about this.\r\nI'm especially interested in setting up ofParam and ofBaseGui in a way to make things modular and extendable. \r\n\r\nalso could be interesting to look at a way to represent a collection/group of ofParameters\r\nsome of this might be similar to some of the stuff @memo was doing with his plist style system. \r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1036","comments":10,"milestone":null,"number":1036,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1036","assignee":null,"title":"ofxGui -> ofGui - how/should we bring into core?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-05T16:56:26Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":3509628,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-12T12:39:10Z","body":"If it finds .vert, .frag (and .geom?) files in the data/ folder, the project generator should make a new folder, in the project file, next to (or inside) src called data/ and add the files to it. (data/ so that beginners can find the files in Finder)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1034","comments":3,"milestone":null,"number":1034,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1034","assignee":null,"title":"projectGenerator ignores shader .vert and .frag files","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/project+generator","name":"project generator","color":"444444"}],"closed_at":null,"created_at":"2012-03-04T11:19:04Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":3495602,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-06T15:06:00Z","body":"I talked to Arturo about this, but I want to make sure it's known. When you call ofLogSetLogLevel with a module string, that string is added to a map used to check the module's log level ... but right now that string is never removed.\r\n\r\nIf someone creates a large amount module names the map could grow arbitrarily large over time. The thought so far is that no one would make enough module names for it to be a problem.\r\n\r\nFor instance, using the [proposed ofThread rewrite](https://github.com/openframeworks/openFrameworks/pull/1031), each thread creates a new module name when it sets itself to verbose and, in the case of spawning lots of verbose worker threads, the map will grow.\r\n\r\nMy proposed solution would be to remove the module name from the map when the level for that module is set back to OF_LOG_NOTICE and/or to the current log level.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1033","comments":11,"milestone":null,"number":1033,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1033","assignee":null,"title":"ofSetLogLevel(module, level) adds to map but dosen't remove","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-03-04T10:54:12Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","id":480637},"id":3495503,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:11:08Z","body":"this change c50648e29199a3f61eae05f6ceb350a97ab275d7 caused the problem. i'm not sure why adding explicit cases for handling loadData for ofShortPixels and ofFloatPixels would do this. to see the proof, run devApps/AdvancedImageLoading","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1029","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1029,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1029","assignee":null,"title":"display of short + float textures are broken","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-03-03T19:04:59Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3491627,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-10T06:54:25Z","body":"I've just encountered a real 'wall meets head' bug, aka 'why is my camera image black??'\r\n\r\nwell it turns out that actually, ofSaveImage doesn't save mono images\r\nit just saves out black pixels\r\n\r\ntesting on Windows, VS2010.\r\nAnybody else getting this?\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1028","comments":5,"milestone":null,"number":1028,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1028","assignee":null,"title":"ofSaveImage / ofImage::saveImage() problem with OF_IMAGE_GRAYSCALE / OF_PIXELS_MONO","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-03-03T12:23:06Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":3489266,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-16T09:25:13Z","body":"The Android example is basically a copy of the existing 3dModelBuilder example with some code changes to work with OpenGL ES","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1024","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":1024,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1024","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"Fixing 3DModelBuilder to work with OpenGL ES, added Android example for it","labels":[],"closed_at":null,"created_at":"2012-03-02T16:55:29Z","state":"open","user":{"url":"https://api.github.com/users/bostonbusmap","avatar_url":"https://secure.gravatar.com/avatar/433032cca043cedb67180dc5109062da?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"433032cca043cedb67180dc5109062da","login":"bostonbusmap","id":863262},"id":3479768,"pull_request":{"html_url":"https://github.com/openframeworks/openFrameworks/pull/1024","patch_url":"https://github.com/openframeworks/openFrameworks/pull/1024.patch","diff_url":"https://github.com/openframeworks/openFrameworks/pull/1024.diff"}},{"updated_at":"2012-03-30T16:34:06Z","body":"Continuation of http://forum.openframeworks.cc/index.php/topic,9095.msg42378.html#new\r\n\r\nNOTE: Things may have changed as the projects I'm using are all created using the older creation tools.\r\nCan somebody up to date please check?\r\n\r\nCurrently XCode's default project setting is /O2 for debug projects\r\nwhilst Visual Studio's is /O0\r\n\r\n/O0 generally makes the most sense for debug mode as it allows for effective program flow and variable tracking (because with /O2, lines of code and variables are commonly optimised away).\r\n\r\nIf we are worried that this will leave default users in a default 'slower state' then perhaps we could make release the default? Then people could be aware that they are selecting debug when they want to actually do some debugging?\r\nBut this may have other issues (such as some libraries might not perform as many checks as otherwise?)\r\n\r\nit might be worth making users more aware of the 2 options anyway, and then start using them consistently","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1022","comments":12,"milestone":null,"number":1022,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1022","assignee":null,"title":"Optimisation consistency","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-02T13:25:15Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":3476540,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-01T19:42:09Z","body":"currently if MSAA is enabled, COLOR_ATTACHMENT[ 0 -> nSamples]_EXT are bound for MS blitting, which could overwrite your texture color attachments without notifying you  [ i.e. setSamples(4); setNumTextures(4) ]. There may be some solution where numSamples*numTextures = maxAttachments, allowing for multisampled internal textures, but at the very least we should warn/notify that samples and textures won't play so nicely together, or try to allocate samples/textures in the remaining attachments and notify on overflow.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1019","comments":0,"milestone":null,"number":1019,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1019","assignee":null,"title":"ofFbo needs consideration as far as MRT + MSAA","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-03-01T19:42:09Z","state":"open","user":{"url":"https://api.github.com/users/kpasko","avatar_url":"https://secure.gravatar.com/avatar/b3685ad8a761582e5f1c3e151f9f854f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"b3685ad8a761582e5f1c3e151f9f854f","login":"kpasko","id":167271},"id":3462226,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-01T04:33:36Z","body":"there's a block in ofConstants which reads like:\r\n\r\n```c++\r\n#ifndef PI\r\n\t#define PI       3.14159265358979323846\r\n#endif\r\n\r\n#ifndef TWO_PI\r\n\t#define TWO_PI   6.28318530717958647693\r\n#endif\r\n\r\n#ifndef M_TWO_PI\r\n\t#define M_TWO_PI   6.28318530717958647693\r\n#endif\r\n\r\n#ifndef FOUR_PI\r\n\t#define FOUR_PI 12.56637061435917295385\r\n#endif\r\n\r\n#ifndef HALF_PI\r\n\t#define HALF_PI  1.57079632679489661923\r\n#endif\r\n\r\n#ifndef DEG_TO_RAD\r\n\t#define DEG_TO_RAD (PI/180.0)\r\n#endif\r\n\r\n#ifndef RAD_TO_DEG\r\n\t#define RAD_TO_DEG (180.0/PI)\r\n#endif\r\n\r\n#ifndef MIN\r\n\t#define MIN(x,y) (((x) < (y)) ? (x) : (y))\r\n#endif\r\n\r\n#ifndef MAX\r\n\t#define MAX(x,y) (((x) > (y)) ? (x) : (y))\r\n#endif\r\n\r\n#ifndef CLAMP\r\n\t#define CLAMP(val,min,max) (MAX(MIN(val,max),min))\r\n#endif\r\n\r\n#ifndef ABS\r\n\t#define ABS(x) (((x) < 0) ? -(x) : (x))\r\n#endif\r\n```\r\n\r\nthe problem is i've got this in another header file:\r\n\r\n```c++\r\n// macro-like inline functions\r\n\r\ntemplate<class T>\r\ninline T SQR(const T a) {return a*a;}\r\n\r\ntemplate<class T>\r\ninline const T &MAX(const T &a, const T &b)\r\n        {return b > a ? (b) : (a);}\r\n\r\ninline float MAX(const double &a, const float &b)\r\n        {return b > a ? (b) : float(a);}\r\n\r\ninline float MAX(const float &a, const double &b)\r\n        {return b > a ? float(b) : (a);}\r\n\r\ntemplate<class T>\r\ninline const T &MIN(const T &a, const T &b)\r\n        {return b < a ? (b) : (a);}\r\n\r\ninline float MIN(const double &a, const float &b)\r\n        {return b < a ? (b) : float(a);}\r\n\r\ninline float MIN(const float &a, const double &b)\r\n        {return b < a ? float(b) : (a);}\r\n\r\ntemplate<class T>\r\ninline T SIGN(const T &a, const T &b)\r\n\t{return b >= 0 ? (a >= 0 ? a : -a) : (a >= 0 ? -a : a);}\r\n\r\ninline float SIGN(const float &a, const double &b)\r\n\t{return b >= 0 ? (a >= 0 ? a : -a) : (a >= 0 ? -a : a);}\r\n\r\ninline float SIGN(const double &a, const float &b)\r\n\t{return (float)(b >= 0 ? (a >= 0 ? a : -a) : (a >= 0 ? -a : a));}\r\n```\r\n\r\nAnd ofConstants is included in almost every oF file\r\n\r\ni'd suggest moving to inline functions and presume that compiler optimisations makes these 2 options equivalent in terms of performance, but that inline wins out for compatability","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1007","comments":10,"milestone":null,"number":1007,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1007","assignee":null,"title":"bug #defines in ofConstants conflict with other libraries","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-29T15:31:18Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":3438233,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-01T13:02:37Z","body":"Propose the following functions:\r\n\r\n```c++\r\nofVec2f ofRandom(const ofVec2f&);\r\nofVec3f ofRandom(const ofVec3f&);\r\nofVec2f ofRandom(const ofVec2f& range1, const ofVec2f& range2);\r\nofVec3f ofRandom(const ofVec3f& range1, const ofVec3f& range2);\r\n```\r\n\r\nalso lots of other candidates for this, e.g. `ofClamp`, `ofMap`, etc\r\nsome clever templating possible?\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1005","comments":12,"milestone":null,"number":1005,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1005","assignee":null,"title":"feature ofRandom(ofVec3f) ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-29T06:32:03Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":3432042,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-18T08:47:08Z","body":"I have a simple app that plays video files. I try to route (under windows) its output using Jack and Vitual Audio Cable but none can access it. I am just using the basic functionality of ofVideoPlayer, this is the class that deals with the video playing\r\n\r\n\r\n\t#include \"oscVPlayer.h\"\r\n\t#include \"ofMain.h\"\r\n\r\n\r\n\r\n\toscVPlayer::oscVPlayer()\r\n\t{\r\n\t\t\treset();\r\n\t}\r\n\r\n\tvoid oscVPlayer::reset()\r\n\t{   //defaults to fullscreen\r\n\t\t\tw = NULL;\r\n\t\t\th = NULL;\r\n\t\t\tx = 0;\r\n\t\t\ty = 0;\r\n\t\t\tdonereported = false;\r\n\t\t\tloopflag = OF_LOOP_NONE;\r\n\t\t\t\r\n\t\t\tcol.r = 0;\r\n\t\t\tcol.g = 0;\r\n\t\t\tcol.b = 0;\r\n\t\t\tcol.a = 255;\r\n\r\n\t\t\tif (isLoaded())\r\n\t\t{\r\n\t\t\t\t\tsetFrame(0);\r\n\t\t\t\t\tsetUseTexture(1);\r\n\t\t\t\t\tsetPaused(0);\r\n\t\t\t\t\tsetLoopState(OF_LOOP_NORMAL);\r\n\t\t\t\t\tsetSpeed(1);\r\n\t\t\t\t\tsetVolume(255);\r\n\t\t\t\t\tstop();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tvoid oscVPlayer::setUpVideo(string movie)\r\n\t{\r\n\t\t\tif (movie != \"none\")\r\n\t\t\t{\r\n\t\t\t\t\tif ( loadMovie(movie) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"movie loaded\\n\");\r\n\t\t\t\t\t\t\tofVideoPlayer::update();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprintf(\"CANNOT load movie\\n\");\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\tprintf(\"movie parameter is none, cannot load it\\n\");\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\tvoid oscVPlayer::setLoop()\r\n\t{\r\n\t\t\tsetLoopState(loopflag); // go back to your state. otherwise play resets it to loop ON\r\n\t}\r\n\r\n\r\n\r\n\r\n\tvoid oscVPlayer::resetSize()\r\n\t{\r\n\t\t\tw = NULL;\r\n\t\t\th = NULL;\r\n\t}\r\n\r\n\r\n\tvoid oscVPlayer::draw()\r\n\t{\r\n\t\tif (isLoaded())\r\n\t\t{\r\n\t\t\t if (col.a < 255) ofEnableAlphaBlending();\r\n\t\t\t\tofSetColor(col.r,col.g,col.b, col.a);\r\n\t\t\t\tofVideoPlayer::update();\r\n\t\t\t\tif (w==NULL && h==NULL)\r\n\t\t\t\t{\r\n\t\t\t\t\t\tofVideoPlayer::draw(x, y);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t\t\tofVideoPlayer::draw(x, y, w, h);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (col.a < 255) ofDisableAlphaBlending(); \r\n\t\t}\r\n\t}\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/1001","comments":2,"milestone":null,"number":1001,"html_url":"https://github.com/openframeworks/openFrameworks/issues/1001","assignee":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"title":"OF app sound out not available from Jack","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-02-27T14:59:34Z","state":"open","user":{"url":"https://api.github.com/users/enrike","avatar_url":"https://secure.gravatar.com/avatar/cc2adbc6d91bf2288f34f60a547a82cd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"cc2adbc6d91bf2288f34f60a547a82cd","login":"enrike","id":710785},"id":3401755,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-29T14:42:36Z","body":"// scissor\r\nvoid ofBeginScissor(ofRectangle &r);\r\nvoid ofBeginScissor(ofPoint &p, float w, float h);\r\nvoid ofBeginScissor(float x, float y, float w, float h);\r\nvoid ofEndScissor();\r\n\r\n\r\nthere is a problem with ofFBO due to the flip. I do not think that there is a way around it sooo just scale -1\r\n\r\nalso: \r\nextra ; removed \r\nlibs/openFrameworks/utils/ofUtils.cpp","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/993","comments":11,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":993,"html_url":"https://github.com/openframeworks/openFrameworks/issues/993","assignee":null,"title":"Of scissors","labels":[],"closed_at":null,"created_at":"2012-02-26T21:35:55Z","state":"open","user":{"url":"https://api.github.com/users/vanderlin","avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","login":"vanderlin","id":149997},"id":3393466,"pull_request":{"html_url":"https://github.com/openframeworks/openFrameworks/pull/993","patch_url":"https://github.com/openframeworks/openFrameworks/pull/993.patch","diff_url":"https://github.com/openframeworks/openFrameworks/pull/993.diff"}},{"updated_at":"2012-02-25T20:25:00Z","body":"i think this is because ofDrawBitmapString draws the quads in the wrong orientation. but i'm guessing it works in FBOs... so if we switch the order it will stop working in FBOs.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/987","comments":0,"milestone":null,"number":987,"html_url":"https://github.com/openframeworks/openFrameworks/issues/987","assignee":null,"title":"GL_CULL_FACE breaks ofDrawBitmapString()","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-02-25T20:25:00Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3387163,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-22T23:34:17Z","body":"Some logging messages don't really tell where they were triggered. Someone needs to go through them and add information as to what module triggered the message. \r\n@danomatika has already volunteered to do this some time.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/985","comments":16,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":985,"html_url":"https://github.com/openframeworks/openFrameworks/issues/985","assignee":null,"title":"Make logging messages more informative","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-02-25T19:41:58Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3386914,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-11T18:31:55Z","body":"There's a lot of logging printfs in the core addons. These should be replaced by appropriate ofLog calls.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/984","comments":5,"milestone":null,"number":984,"html_url":"https://github.com/openframeworks/openFrameworks/issues/984","assignee":null,"title":"Replace printf() occurences by ofLog() in the core addons","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-02-25T19:36:51Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3386889,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-02-27T13:35:34Z","body":"`ofVec2f` has a function called `average` which takes an array of `ofVec2f` and calculates the centroid. it is not static, rather it overwrites its own `x` and `y` with the average. \r\n\r\nthis is a little weird. `average` should be static, or at least be *returning* the average rather than assigning to self.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/976","comments":4,"milestone":null,"number":976,"html_url":"https://github.com/openframeworks/openFrameworks/issues/976","assignee":null,"title":"ofVec2f::average has unexpected/clumsy behaviour","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-25T03:45:02Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"id":3382990,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-02-25T02:47:26Z","body":"Dummy issue to ensure that the 0076 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/972","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/10","number":10,"title":"0076 Release","due_on":"2012-10-29T07:00:00Z","closed_issues":0,"open_issues":1,"created_at":"2012-02-25T02:46:26Z","state":"open","description":"","id":88838},"number":972,"html_url":"https://github.com/openframeworks/openFrameworks/issues/972","assignee":null,"title":"0076 Release tracking issue","labels":[],"closed_at":null,"created_at":"2012-02-25T02:47:26Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3382766,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-02-25T02:47:37Z","body":"Dummy issue to ensure that the 0075 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/971","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/9","number":9,"title":"0075 Release","due_on":"2012-09-24T07:00:00Z","closed_issues":0,"open_issues":1,"created_at":"2012-02-25T02:46:15Z","state":"open","description":"","id":88837},"number":971,"html_url":"https://github.com/openframeworks/openFrameworks/issues/971","assignee":null,"title":"0075 Release tracking issue","labels":[],"closed_at":null,"created_at":"2012-02-25T02:47:05Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3382764,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=5
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4939'), ('content-length', '39838'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=6>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=4>; rel="prev"'), ('etag', '"a7bfe812cbaa85fbb708d70f4d883fac"'), ('date', 'Tue, 29 May 2012 19:27:13 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-02-25T01:36:58Z","body":"Dummy issue to ensure that the 0080 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/970","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/8","number":8,"closed_issues":0,"title":"0080 Release","due_on":"2013-01-01T08:00:00Z","open_issues":3,"created_at":"2012-02-25T01:34:28Z","state":"open","description":"","id":88731},"number":970,"html_url":"https://github.com/openframeworks/openFrameworks/issues/970","assignee":null,"title":"0080 Release tracking issue","labels":[],"closed_at":null,"created_at":"2012-02-25T01:36:54Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3381982,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-25T01:36:37Z","body":"Dummy issue to ensure that the 0074 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/969","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/7","number":7,"closed_issues":0,"title":"0074 Release","due_on":"2012-08-27T07:00:00Z","open_issues":1,"created_at":"2012-02-25T00:41:17Z","state":"open","description":"","id":88728},"number":969,"html_url":"https://github.com/openframeworks/openFrameworks/issues/969","assignee":null,"title":"0074 Release tracking issue","labels":[],"closed_at":null,"created_at":"2012-02-25T01:36:37Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3381977,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-24T04:31:01Z","body":"right now if you try and scale/rotate/etc before calling ofBackgroundGradient, it will fail.\r\n\r\npeople generally call ofBackground at the top of draw() so it shouldn't be a huge issue... but it does make it a little 'fragile'.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/955","comments":0,"milestone":null,"number":955,"html_url":"https://github.com/openframeworks/openFrameworks/issues/955","assignee":null,"title":"ofBackgroundGradient needs to be billboarded","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-02-24T04:31:01Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3367910,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-23T19:12:08Z","body":"Hello, I get a weird error trying to compile the movieplayerexample under linux64 :\r\n\r\n> `.text._ZN11ofBaseVideoD2Ev' referenced in section `.text._ZN11ofBaseVideoD1Ev[non-virtual thunk to ofBaseVideo::~ofBaseVideo()]' of ../../../libs/openFrameworksCompiled/lib/linux64/libopenFrameworks.a(ofBaseTypes.o): defined in discarded section `.text._ZN11ofBaseVideoD2Ev[_ZN11ofBaseVideoD5Ev]' of ../../../libs/openFrameworksCompiled/lib/linux64/libopenFrameworks.a(ofBaseTypes.o)\r\n\r\nMy version of OF is 007, it used to work under  0062...\r\n\r\nWhat should I do ?\r\n\r\nThanks","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/933","comments":4,"milestone":null,"number":933,"html_url":"https://github.com/openframeworks/openFrameworks/issues/933","assignee":null,"title":"Problem with moviePlayerExample under linux64","labels":[],"closed_at":null,"created_at":"2012-02-23T15:46:06Z","state":"open","user":{"url":"https://api.github.com/users/agrosjea","avatar_url":"https://secure.gravatar.com/avatar/e52c167621119d58d03c586bb053a633?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e52c167621119d58d03c586bb053a633","login":"agrosjea","id":1466085},"id":3357855,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-23T05:13:24Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/931","comments":0,"milestone":null,"number":931,"html_url":"https://github.com/openframeworks/openFrameworks/issues/931","assignee":null,"title":"ofCamera is not aware of ofOrientation","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-02-23T05:13:24Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":3351646,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-23T05:12:47Z","body":"do we need the ofOrientation parameter in ofSetupPerspective?\r\n\r\nit applies the rotation but if ofSetOrientation hasn't been called before passing the same orientation the results are not the expected.\r\n\r\nto test it:\r\n\r\nofSetOrientation(OF_ORIENTATION_90_LEFT);\r\nofSetPerspective(ofGetWidth(), ofGetHeight(),OF_ORIENTATION_90_LEFT)\r\n\r\nworks as expected but calling only \r\n\r\nofSetPerspective(ofGetWidth(), ofGetHeight(),OF_ORIENTATION_90_LEFT)\r\n\r\napplies a weird rotation cause the values of ofGetWidth(), ofGetHeight() are still the default ones\r\n\r\nis there any case where it's useful to call setupPerspective with a different orientation that the window has?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/930","comments":0,"milestone":null,"number":930,"html_url":"https://github.com/openframeworks/openFrameworks/issues/930","assignee":null,"title":"ofSetupPerspective ofOrientation","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-23T05:12:47Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":3351643,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-23T04:19:48Z","body":"Currently ofGetLogLevel returns the global log level aka for the \"OF\" module. It would be nice to be able to get the log level for user modules via:\r\n\r\n    ofLogLevel level = ofGetLogLevel(\"myLogModule\");\r\n\r\nIt would as simple as adding the module as a string variable with a default of \"OF\".\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/929","comments":0,"milestone":null,"number":929,"html_url":"https://github.com/openframeworks/openFrameworks/issues/929","assignee":null,"title":"ofGetLogLevel should also accept modules","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-02-23T04:19:48Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","id":480637},"id":3351374,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-23T03:46:32Z","body":"Currently there is a ofBgColorPtr(), but maybe it's nice to have a ofGetBackground() that returns an ofColor object or a reference to one.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/928","comments":0,"milestone":null,"number":928,"html_url":"https://github.com/openframeworks/openFrameworks/issues/928","assignee":null,"title":"no ofGetBackground()","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-23T03:46:32Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","id":480637},"id":3351170,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-22T19:12:56Z","body":"ofGetViewportWidth/Height returns 0 is called in an object destructor, while ofGetWidth/Height do not. Could the ofGetViewport size be set to the ofGetWidth/Height size instead of 0 be default?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/926","comments":0,"milestone":null,"number":926,"html_url":"https://github.com/openframeworks/openFrameworks/issues/926","assignee":null,"title":"ofGetViewportWidth/Height returns 0 at startup","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-22T19:12:56Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","id":480637},"id":3341020,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-22T00:28:08Z","body":"I noticed a few things when working with ofImage:\r\n\r\n* ofImage has a type variable for the image type but this is an int, as opposed to the ofImageType enum, so it's annoying to force convert ...\r\n* the width, height, & bpp variables are public, they should be protected with getters/setters\r\n* there isn't a getBytesPerPixel, you have to get the pixel reference then call getBytesPerPixel ...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/925","comments":0,"milestone":null,"number":925,"html_url":"https://github.com/openframeworks/openFrameworks/issues/925","assignee":null,"title":"ofImage has type as int, public vars, & missing getBPP, etc","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-22T00:28:08Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","id":480637},"id":3324501,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-29T14:41:17Z","body":"As requested in https://github.com/openframeworks/openFrameworks/pull/794 I've branched openframeworks:develop into my own branch and applied the fixes required to build openFrameworks for Android with MinGW on the windows platform.\r\n\r\nThe instructions on how to compile are still valid (except for the part of patching):\r\nhttp://www.multigesture.net/articles/how-to-setup-openframeworks-for-android-on-windows/\r\n\r\nNote 1: You will need to run:\r\nandroid.bat update project --target android-8 --path C:\\openFrameworks\\addons\\ofxAndroid\\ofAndroidLib\r\n\r\nThis updates the project files for ofAndroidLib project. I didn't included those because those are user specific (they contain the path to the sdk)\r\n\r\nNote 2: d3ddf8e1 \r\nI only added this commit in order to make the examples build properly. Someone still needs to fix the proper implementation.\r\n\r\nNote 3: 7a9cf0ba\r\nWhile working on NodeBeat, we found out that not all devices are using /mnt/sdcard as their external storage location. In some cases the sdcard is located somewhere else  (\"Environment.getExternalStorageDirectory()\" doesnt always return the correct location). This commit fixes this problem by checking several locations as reported on multiple Stackoverflow threads. More info about this issue can be found in the commit description.\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/922","comments":13,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"closed_issues":21,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":922,"html_url":"https://github.com/openframeworks/openFrameworks/issues/922","assignee":null,"title":"Windows compatibility patches and External storage location fixes.","labels":[],"closed_at":null,"created_at":"2012-02-19T23:30:24Z","state":"open","user":{"url":"https://api.github.com/users/falcon4ever","avatar_url":"https://secure.gravatar.com/avatar/4a503abeaa3d803e55e99093fbf1505d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"4a503abeaa3d803e55e99093fbf1505d","login":"falcon4ever","id":480019},"id":3288053,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/922.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/922","patch_url":"https://github.com/openframeworks/openFrameworks/pull/922.patch"}},{"updated_at":"2012-02-16T09:39:46Z","body":"What about having our own transform stack , in order to:\r\n-avoid to recompute globalTransformMatrix in each ofNode\r\n-could use it when rendering with OpenGL ES 2.0 shaders , which do not support predefined matrix values as world (modelview), worldProjection , or world inverseTranspose (for normals)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/920","comments":0,"milestone":null,"number":920,"html_url":"https://github.com/openframeworks/openFrameworks/issues/920","assignee":null,"title":"Transform stack","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-16T09:39:46Z","state":"open","user":{"url":"https://api.github.com/users/AugusteBonnin","avatar_url":"https://secure.gravatar.com/avatar/cbf7aa7c655d3652170984c9aa497a4c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"cbf7aa7c655d3652170984c9aa497a4c","login":"AugusteBonnin","id":1442658},"id":3248309,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-16T09:31:24Z","body":"There is an easy-to-correct error in ofNode::transformGL:\r\nIt should call loadMatrix with globalTransformMatrix as parameter (with a void restoreGL), or pushMatrix then multMatrix with localTransformMatrix (with a restoreGL that pops the previously pushed matrix),\r\nNOT push then mult with global. The bug appears as soon as you have got more than one level of depth in your node tree. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/919","comments":0,"milestone":null,"number":919,"html_url":"https://github.com/openframeworks/openFrameworks/issues/919","assignee":null,"title":"Error in ofNode::transformGL","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-02-16T09:31:24Z","state":"open","user":{"url":"https://api.github.com/users/AugusteBonnin","avatar_url":"https://secure.gravatar.com/avatar/cbf7aa7c655d3652170984c9aa497a4c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"cbf7aa7c655d3652170984c9aa497a4c","login":"AugusteBonnin","id":1442658},"id":3248230,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-08T10:15:31Z","body":"vs2010 does not include stdint.h support:\r\n\r\nhttp://stackoverflow.com/questions/126279/c99-stdint-h-header-and-ms-visual-studio\r\n\r\nwhich causes addon bugs like this:\r\n\r\nhttps://github.com/openframeworks/openFrameworks/issues/559\r\nhttps://github.com/kylemcdonald/ofxCv/issues/28\r\n\r\neven though these bugs aren't in the core, i think OF is designed to make it easy for people to write cross-platform, cross-compiler code. so i propose that we add an explicit declaration of the missing types for vs2010.\r\n\r\nthis isn't really something i'm worried about directly since i don't use vs2010, but i know people like elliot do. and it would be cleaner to add it once to the core than to add it once for every addon that is broken.\r\n\r\nthe solution would probably look like: take dan's code from the above issue, and move it from ofxOsc into the core.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/917","comments":5,"milestone":null,"number":917,"html_url":"https://github.com/openframeworks/openFrameworks/issues/917","assignee":null,"title":"add global stdint.h support?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/visual+studio","name":"visual studio","color":"ba4eba"}],"closed_at":null,"created_at":"2012-02-15T02:38:17Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3229504,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-12T14:55:20Z","body":"to match ofGetWidth(), ofGetHeight()\r\n\r\ni.e. for ofGetMouseX() / ofGetWidth()","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/916","comments":1,"milestone":null,"number":916,"html_url":"https://github.com/openframeworks/openFrameworks/issues/916","assignee":null,"title":"ofGetMouseX() and ofGetMouseY() should return float","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2012-02-14T05:17:47Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":3214174,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-13T08:16:08Z","body":"I had downloaded the 007 version, when I run of_preRelease_v007_linux/scripts/linux/debian/install_codeblocks.sh it install codeblocks without error, but when I run preRelease_v007_linux/scripts/linux/debian/install_dependencies.sh  I get this error\r\n\r\ncompiling object for  ../../../openFrameworks/graphics/ofGraphics.cpp\r\nmkdir -p obj/Debug/openFrameworks/graphics\r\ng++ -g3 -Wall -fexceptions -I../../../FreeImage/include -I../../../assimp/include -I../../../assimp/include/Compiler -I../../../cairo/include -I../../../cairo/include/cairo -I../../../cairo/include/pixman-1 -I../../../cairo/include/libpng15 -I../../../fmodex/include -I../../../freetype/include -I../../../freetype/include/freetype2 -I../../../freetype/include/freetype2/freetype -I../../../freetype/include/freetype2/freetype/config -I../../../freetype/include/freetype2/freetype/internal -I../../../freetype/include/freetype2/freetype/internal/services -I../../../glew/include -I../../../glew/include/GL -I../../../kiss/include -I../../../portaudio/include -I../../../rtAudio/include -I../../../tess2/include -I../../../poco/include -I../../../glu/include -I../../../openFrameworks/ -I../../../openFrameworks/3d -I../../../openFrameworks/math -I../../../openFrameworks/types -I../../../openFrameworks/graphics -I../../../openFrameworks/utils -I../../../openFrameworks/app -I../../../openFrameworks/video -I../../../openFrameworks/events -I../../../openFrameworks/communication -I../../../openFrameworks/gl -I../../../openFrameworks/sound  -pthread -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -DOF_USING_GTK  -MMD -MP -MFobj/Debug/openFrameworks/graphics/ofGraphics.d -MTobj/Debug/openFrameworks/graphics/ofGraphics.d -o obj/Debug/openFrameworks/graphics/ofGraphics.o -c ../../../openFrameworks/graphics/ofGraphics.cpp\r\n../../../openFrameworks/graphics/ofGraphics.cpp:37:22: warning: GL/glut.h: No such file or directory\r\n../../../openFrameworks/graphics/ofGraphics.cpp: In function ‘void ofSphere(float)’:\r\n../../../openFrameworks/graphics/ofGraphics.cpp:889: error: ‘glutSolidSphere’ was not declared in this scope\r\n../../../openFrameworks/graphics/ofGraphics.cpp:891: error: ‘glutWireSphere’ was not declared in this scope\r\nmake: *** [obj/Debug/openFrameworks/graphics/ofGraphics.o] Error 1\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/915","comments":2,"milestone":null,"number":915,"html_url":"https://github.com/openframeworks/openFrameworks/issues/915","assignee":null,"title":"problems installing dependencies in debian 6.0.4","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2012-02-13T05:45:01Z","state":"open","user":{"url":"https://api.github.com/users/atomsfat","avatar_url":"https://secure.gravatar.com/avatar/f732e5a8b77f8e4ed8fadc2c71916236?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"f732e5a8b77f8e4ed8fadc2c71916236","login":"atomsfat","id":140008},"id":3196145,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-12T04:41:26Z","body":"We have ofSetDataPathRoot() .... it makes sense to have a Getter as well. Basically I wanted the absolute path to the root data folder.\r\n\r\nI managed to fake this by calling ofToDataPath(\".\",true) but this seems a little counter-intuitive.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/914","comments":0,"milestone":null,"number":914,"html_url":"https://github.com/openframeworks/openFrameworks/issues/914","assignee":null,"title":"Add ofGetDataPathRoot","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-12T04:41:26Z","state":"open","user":{"url":"https://api.github.com/users/pierrep","avatar_url":"https://secure.gravatar.com/avatar/be11c9de8242e7aef0446eceaa289e01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"be11c9de8242e7aef0446eceaa289e01","login":"pierrep","id":392160},"id":3189189,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-12T14:56:56Z","body":"it would be amazing if ofBeginShape()/ofEndShape() and ofPath supported tex coords (maybe ofTexCoord() and addTexCoord()).\r\n\r\nthis would allow for drawing arbitrary subsections of an image, or for creating an ofMesh that is texture mapped by an image.\r\n\r\nprocessing handles this with extra arguments to vertex() http://processing.org/reference/texture_.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/909","comments":3,"milestone":null,"number":909,"html_url":"https://github.com/openframeworks/openFrameworks/issues/909","assignee":null,"title":"shapes with texCoords","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-02-10T01:42:42Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3166745,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-09T08:16:47Z","body":"a student just showed me how you can use the xcode templates for pocode to create a new project wherever you want on the disk. i know we used to have xcode templates for this, but i just tried them and it seems to be hilariously broken.\r\n\r\ni'm not sure if the new project creator stuff covers this idea or not, but it would be great to have a similar ability with OF somehow.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/902","comments":2,"milestone":null,"number":902,"html_url":"https://github.com/openframeworks/openFrameworks/issues/902","assignee":null,"title":"Xcode templates should be fixed or removed","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode","color":"993e7a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-09T04:30:13Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3152323,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-08T21:50:23Z","body":"to draw a filled ofPolyline right now, you need to use beginshape/endshape. but i think a way of adding ofPolylines to an ofPath would be really good -- even a conversion from ofPolyline to ofPath might make sense. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/901","comments":0,"milestone":null,"number":901,"html_url":"https://github.com/openframeworks/openFrameworks/issues/901","assignee":null,"title":"easier filled ofPolyline, or easy ofPolyline->ofPath conversion","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-02-08T21:50:23Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":3148441,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-09T14:46:48Z","body":"Hi.\r\n\r\nI've been trying to load stream video ( mpeg2 .ts and hls .m3u8 ) using OF on MacOS 10.7.2.\r\n\r\nBoth cases causes error -2048 in the line below: ( l:89, ofQuickTimePlayer.cpp )\r\n\r\n```c++\r\nerr = NewMovieFromDataRef(&movie, newMovieAsyncOK,nil, urlDataRef, URLDataHandlerSubType);\r\n```\r\n\r\nLoading remote .mp4 works perect. Loading same streams in QuickTime player(v10.1) works without any troubles.\r\n\r\nSo, it seems the trouble happens just when no videofile size info returned from server.\r\n\r\nIs it a bug? Or I've missed smthng?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/897","comments":4,"milestone":null,"number":897,"html_url":"https://github.com/openframeworks/openFrameworks/issues/897","assignee":null,"title":"ofQuickTimePlayer.createMovieFromURL fails on streaming video","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-02-06T11:42:08Z","state":"open","user":{"url":"https://api.github.com/users/4pcbr","avatar_url":"https://secure.gravatar.com/avatar/52e8e29748826594f27b5c6c20a353e0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"52e8e29748826594f27b5c6c20a353e0","login":"4pcbr","id":247109},"id":3106705,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-05T17:11:59Z","body":"This concerns libraries included in addons in source form. According to [this issue](https://github.com/chrisoshea/ofxMidi/issues/8) reported by @danomatika, the makefile can only compile libraries' source code if they are in an addon's `/src` folder. This is in contradiction with @obviousjim's guide to addons' folder structure at http://ofxaddons.com/howto.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/896","comments":6,"milestone":null,"number":896,"html_url":"https://github.com/openframeworks/openFrameworks/issues/896","assignee":null,"title":"Makefile and ofxaddons.com guide don't agree regarding file structure","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2012-02-05T15:20:42Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":3099567,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-10T02:47:13Z","body":"it needs to handle all these things:\r\n\r\n- meshes vs point clouds\r\n- different types of meshes (depending on the triangles)\r\n- indexed vs non-indexed geometry\r\n- colors, normals, texcoords\r\n- ascii vs binary\r\n- loading from externally created/defined ply files","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/880","comments":1,"milestone":null,"number":880,"html_url":"https://github.com/openframeworks/openFrameworks/issues/880","assignee":null,"title":"test ofMesh::load/save rigorously","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2012-01-25T16:55:09Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":2967700,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-03T19:40:34Z","body":"If you set the proper switches on the iphone sound stream you can get it to play over whatever is playing on the users ipod without muting it. There are a bunch of switches for this behavior detailed in kAudioSessionProperty_Mode.\r\n\r\nThese would need to be set before initing the audio session. The other issue is that there are like 15-20 flags you can set. Maybe just a slightly higher level setting on the stream so that these behaivors could be set in the users testapp.mm","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/878","comments":0,"milestone":null,"number":878,"html_url":"https://github.com/openframeworks/openFrameworks/issues/878","assignee":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"title":"add a switch to the iphone soundstream to support ambient","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-01-24T16:41:17Z","state":"open","user":{"url":"https://api.github.com/users/jonbro","avatar_url":"https://secure.gravatar.com/avatar/893ec14dc008e3774afe5841115920d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"893ec14dc008e3774afe5841115920d6","login":"jonbro","id":1597},"id":2952993,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-15T18:33:39Z","body":"change pan range to -1..1, right now is 0..1","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/875","comments":2,"milestone":null,"number":875,"html_url":"https://github.com/openframeworks/openFrameworks/issues/875","assignee":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"title":"ofOpenALSoundPlayer pan -1..1","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-01-21T00:01:45Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":2918619,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=6
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4938'), ('content-length', '49322'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=7>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=5>; rel="prev"'), ('etag', '"93bd237d518e2c23c29e5e7b340262a8"'), ('date', 'Tue, 29 May 2012 19:27:14 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-03-10T05:09:49Z","body":"    testImg.saveImage(ofxiPhoneGetDocumentsDirectory() + \"test.png\");\r\ncrashes the App and results in this error:\r\n\r\nProgram received signal: \"SIGARBT\".\r\n\r\nerror thrown in this line:\r\n\r\n    FreeImage_Save(fif, bmp, fileName.c_str());","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/872","comments":1,"milestone":null,"number":872,"html_url":"https://github.com/openframeworks/openFrameworks/issues/872","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"saveImage crashes in iOS Simulator","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2012-01-17T21:51:17Z","state":"open","user":{"url":"https://api.github.com/users/khlrqa","gravatar_id":"dfa7e4582a04e784d50c750ae51d894f","login":"khlrqa","avatar_url":"https://secure.gravatar.com/avatar/dfa7e4582a04e784d50c750ae51d894f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":53301},"id":2875276,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-01-07T15:38:14Z","body":"Hi -\r\n\r\nwhen it comes down to multicast communication over udp, it's is important that the correct ip address of the local interface is set. Most computers nowadays have several interfaces (wired and wireless). Whereas ofxUDPManager::BindMcast uses INADDR_ANY as the local address, this might be wrong if you are not using the default interface. In my case, I connect the computers in a local wlan. The wlan device is not the primary device on my machine.\r\n\r\nTherefore I rewrote the BindMcast function adding a third argument pLocal, the local Ip address of the network interface.\r\n\r\n```c++\r\nbool ofxUDPManager::BindMcast(char *pMcast, unsigned short usPort, char *pLocal)\r\n```\r\nchanging the line: \r\n\r\n```c++\r\nmreq.imr_interface.s_addr = pLocal == \"\" ? INADDR_ANY: inet_addr(pLocal);\r\n```\r\n\r\nwhich makes a different header file as well:\r\n\r\n```c++\r\nbool BindMcast(char *pMcast, unsigned short usPort, char *pLocal = \"\");\r\n```\r\n\r\nAs you can see, the pLocal Adress is optional, if omitted, INADDR_ANY is used (backwards compatibility).\r\n\r\n\r\nNOTE:\r\n\r\nI've added the function:\r\n\r\n```c++\r\nchar* GetInterfaceAddr(const char* interface); //returns the IP of a specified interface\r\n```\r\n\r\nto the ofxUDPManager as well.  This function returns the IP adress of an interface (e.g. en1 on a mac for the airport device). This is useful in dhcp networks, where your own address always changes. The function itself looks like:\r\n\r\n```c++\r\n//--------------------------------------------------------------------------------\r\nchar* ofxUDPManager::GetInterfaceAddr(const char* interface)\r\n{\r\n\tint fd;\r\n\tstruct ifreq ifr;\r\n\tfd = socket(AF_INET, SOCK_DGRAM, 0);\r\n\tifr.ifr_addr.sa_family = AF_INET;\r\n\tstrncpy(ifr.ifr_name, interface, IFNAMSIZ-1);\r\n\tioctl(fd, SIOCGIFADDR, &ifr);\r\n\tclose(fd);\r\n\treturn(inet_ntoa(((struct sockaddr_in *)&ifr.ifr_addr)->sin_addr));\r\n}\r\n```\r\n\r\nPlease not that for this function, additional headers have to be included in ofxUDPManager.h:\r\n\r\n```c++\r\n#include <net/if.h>\r\n```\r\n\r\nIf you consider the changes useful, theres a copy of the two files downloadable here:\r\nhttp://dl.dropbox.com/u/394122/ofxUDPManager_uh_07012012.zip\r\n\r\nregards,\r\nUrs Hofer","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/866","comments":0,"milestone":null,"number":866,"html_url":"https://github.com/openframeworks/openFrameworks/issues/866","assignee":null,"title":"Multicast & UDP: Local IP required when dealing with multiple network interfaces","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2012-01-07T15:38:14Z","state":"open","user":{"url":"https://api.github.com/users/urshofer","gravatar_id":"0424af1c917883090f0edddf55a8f21b","login":"urshofer","avatar_url":"https://secure.gravatar.com/avatar/0424af1c917883090f0edddf55a8f21b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":116976},"id":2756440,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-03T19:40:34Z","body":"I've posted here\r\nhttp://forum.openframeworks.cc/index.php/topic,8467.new.html\r\n\r\nAt the moment when you do sample.unloadSound() on iOS the app crashes with\r\n\r\n[Switching to thread 13059]\r\n[Switching to thread 13059]\r\nProgram received signal:  “EXC_BAD_ACCESS”.\r\nwarning: Unable to read symbols for /Developer/Platforms/iPhoneOS.platform/DeviceSupport/4.2.1 (8C148)/Symbols/Developer/usr/lib/libXcodeDebuggerSupport.dylib (file not found).\r\n\r\n\r\nThis has been tested on the soundPlayerExample.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/863","comments":1,"milestone":null,"number":863,"html_url":"https://github.com/openframeworks/openFrameworks/issues/863","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"unloadSound on iOS crashes","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-01-03T12:48:09Z","state":"open","user":{"url":"https://api.github.com/users/chrisoshea","gravatar_id":"62d775b0fa28bcde2d9d29405d059be3","login":"chrisoshea","avatar_url":"https://secure.gravatar.com/avatar/62d775b0fa28bcde2d9d29405d059be3?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":104786},"id":2710048,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-03T19:38:16Z","body":"ofxsynth doesn't wont to compile because this line:\r\nsource->audioOut( working, numFrames, numChannels, tickCount ) in ofxSoundUnit.cpp is wrong.\r\nthe canddates are:\r\n\r\nvirtual void audioOut( float * output, int bufferSize, int nChannels, int deviceID, long unsigned long tickCount  )\r\nvirtual void audioOut( float * output, int bufferSize, int nChannels)\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/861","comments":10,"milestone":null,"number":861,"html_url":"https://github.com/openframeworks/openFrameworks/issues/861","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"ofxSynth semantic issue","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2012-01-02T11:14:47Z","state":"open","user":{"url":"https://api.github.com/users/viniciolindo","gravatar_id":"7aa1a7f9bf0b838c0d99886c3682ac5d","login":"viniciolindo","avatar_url":"https://secure.gravatar.com/avatar/7aa1a7f9bf0b838c0d99886c3682ac5d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1298679},"id":2700549,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-03T19:40:34Z","body":"ofPixels has getPixels(), but OF has no equivalent getSamples() for sound.\r\n\r\nright now the best solution seems to be using libsndfile with OF http://forum.openframeworks.cc/index.php/topic,3502.0.html\r\n\r\nbut i would love to see the audio architecture for OF mirror the visual architecture better. this means ofSoundPlayer acts like ofVideoPlayer, and we need to add an ofSound object that mirrors ofPixels. ofSound should always store samples in memory, while ofSoundPlayer can stream audio from disk like ofVideoPlayer.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/856","comments":1,"milestone":null,"number":856,"html_url":"https://github.com/openframeworks/openFrameworks/issues/856","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"allow access to individual sound samples","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-12-30T02:33:19Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2685556,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-29T04:43:24Z","body":"Today I came across this strange bug.\r\nAny OF app that needed to use the quicktime video grabber crashed at startup when the this was launched from xcode (eg. using build and run) yet it worked correctly when I opened the compiled app by doubleclicking it.\r\n\r\nThe error thrown was a EXCBADACCESS.\r\nthe function that threw this was ACWma1DecoderEntry\r\n\r\nJust some googling and I found that it had to do with Flip4Mac quicktime component.\r\nI uninstalled it and problem gone.\r\n\r\nThe strange thing is that I've had installed Flip4Mac since long ago, yet I updated iTunes a few days ago, that might have done this problem to arise.\r\n\r\nI don't know if this is actually an OF bug from its Quicktime implementation or what ever but it was really annoying getting across with it. Hope this helps others.\r\n\r\nCheers!","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/855","comments":0,"milestone":null,"number":855,"html_url":"https://github.com/openframeworks/openFrameworks/issues/855","assignee":null,"title":"video Grabber crashes with Flip4Mac","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-12-29T04:43:24Z","state":"open","user":{"url":"https://api.github.com/users/roymacdonald","gravatar_id":"fe632ca3d0c42747cfef88a95d942c4a","login":"roymacdonald","avatar_url":"https://secure.gravatar.com/avatar/fe632ca3d0c42747cfef88a95d942c4a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":974878},"id":2677212,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-23T14:13:39Z","body":"ofNode::resetTransform only resets orientation and position.\r\n\r\nI think setScale(1,1,1); needs to be called too in ofNode::resetTransform \r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/851","comments":0,"milestone":null,"number":851,"html_url":"https://github.com/openframeworks/openFrameworks/issues/851","assignee":null,"title":"ofNode::resetTransform does not reset scale","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-12-23T14:13:39Z","state":"open","user":{"url":"https://api.github.com/users/companje","gravatar_id":"30a7e135fe77636519d74d129c60e156","login":"companje","avatar_url":"https://secure.gravatar.com/avatar/30a7e135fe77636519d74d129c60e156?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":156066},"id":2647508,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-22T14:31:37Z","body":"if I add an external lib to my addon, I should provide headers for all platforms to be cross-platfomr like OF but the Makefile doesn't have any switch to ignore certain files which are not needed on linux.\r\n\r\nthe problem is that the OF Makefile compiles everythin under libs/mylib/include\r\n\r\nsee here for more: http://forum.openframeworks.cc/index.php?topic=6486.new;topicseen#new","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/849","comments":0,"milestone":null,"number":849,"html_url":"https://github.com/openframeworks/openFrameworks/issues/849","assignee":null,"title":"skip files in an addon with Makefile","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-12-22T14:31:37Z","state":"open","user":{"url":"https://api.github.com/users/benben","gravatar_id":"614a4e493d7c353296519bba720e77c5","login":"benben","avatar_url":"https://secure.gravatar.com/avatar/614a4e493d7c353296519bba720e77c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":124513},"id":2637694,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-19T22:35:27Z","body":"But it does!\r\n\r\nSomehow it's casting from float to ofPoint, maybe using the ofVec3f( float _x=0.f, float _y=0.f, float _z=0.f ) constructor.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/846","comments":10,"milestone":null,"number":846,"html_url":"https://github.com/openframeworks/openFrameworks/issues/846","assignee":null,"title":"ofCircle(float, float) should not work","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-12-14T00:42:31Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2546302,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-10T21:25:49Z","body":"Please add \"-Wreturn-type\" to the XCode project. I've noticed that it's a common mistake to add a return type but nothing is returned. Adding this option will at least show an error. I think Visual Studio shows an error already by default. You can add it like this in the project settings: http://img805.imageshack.us/img805/8745/screenshot20111210at102.png \r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/843","comments":0,"milestone":null,"number":843,"html_url":"https://github.com/openframeworks/openFrameworks/issues/843","assignee":null,"title":"Add return-type warning for XCode project files ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/xcode","name":"xcode","color":"993e7a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-12-10T21:25:49Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":2512838,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-31T19:36:40Z","body":"Playing a movie crashes on exit on linux. Fedora 16 32-bit, latest git.\r\n\r\noutput:\r\n./moviePlayerExample\r\ndeleting video player\r\nterminate called after throwing an instance of 'Poco::SystemException'\r\n  what():  System exception\r\nAborted (core dumped)\r\n\r\nbacktrace:\r\n#0  0x00110416 in __kernel_vsyscall ()\r\n#1  0x4623998f in raise () from /lib/libc.so.6\r\n#2  0x4623b2d5 in abort () from /lib/libc.so.6\r\n#3  0x46a9b74d in __gnu_cxx::__verbose_terminate_handler() ()\r\n   from /usr/lib/libstdc++.so.6\r\n#4  0x46a994c4 in ?? () from /usr/lib/libstdc++.so.6\r\n#5  0x46a99500 in std::terminate() () from /usr/lib/libstdc++.so.6\r\n#6  0x46a9964f in __cxa_throw () from /usr/lib/libstdc++.so.6\r\n#7  0x08098bef in Poco::MutexImpl::lockImpl (this=0x814eb48)\r\n    at /usr/include/Poco/Mutex_POSIX.h:82\r\n#8  0x08098d07 in Poco::FastMutex::lock (this=0x814eb48)\r\n    at /usr/include/Poco/Mutex.h:257\r\n#9  0x0809907d in Poco::ScopedLock<Poco::FastMutex>::ScopedLock (this=\r\n    0xbfffeabc, mutex=...) at /usr/include/Poco/ScopedLock.h:59\r\n#10 0x0809a340 in Poco::AbstractEvent<ofEventArgs, Poco::FIFOStrategy<ofEventArgs, Poco::AbstractDelegate<ofEventArgs>, Poco::p_less<Poco::AbstractDelegate<ofEventArgs> > >, Poco::AbstractDelegate<ofEventArgs>, Poco::FastMutex>::operator-=\r\n    (this=0x814eb10, aDelegate=...) at /usr/include/Poco/AbstractEvent.h:195\r\n#11 0x080d40c5 in ofRemoveListener<ofEvent<ofEventArgs>, ofEventArgs, ofGstUtils> (event=..., listener=0x82698e0, listenerMethod=\r\n    (void (ofGstUtils::*)(ofGstUtils * const, ofEventArgs &)) 0x80d27b4 <ofGstUtils::update(ofEventArgs&)>) at ../../../openFrameworks/events/ofEventUtils.h:87\r\n#12 0x080d25be in ofGstUtils::close (this=0x82698e0)\r\nat ../../../openFrameworks/video/ofGstUtils.cpp:353\r\n#13 0x080d175e in ofGstUtils::~ofGstUtils (this=0x82698e0, \r\n    __in_chrg=<optimized out>)\r\n    at ../../../openFrameworks/video/ofGstUtils.cpp:85\r\n#14 0x080d32c4 in ofGstVideoUtils::~ofGstVideoUtils (this=0x82698d8, \r\n    __in_chrg=<optimized out>)\r\n    at ../../../openFrameworks/video/ofGstUtils.cpp:536\r\n#15 0x080d06ff in ofGstVideoPlayer::~ofGstVideoPlayer (this=0x82698b8, \r\n    __in_chrg=<optimized out>, __vtt_parm=<optimized out>)\r\n    at ../../../openFrameworks/video/ofGstVideoPlayer.cpp:19\r\n#16 0x080d07d9 in ofGstVideoPlayer::~ofGstVideoPlayer (this=0x82698b8, \r\n    __in_chrg=<optimized out>, __vtt_parm=<optimized out>)\r\n    at ../../../openFrameworks/video/ofGstVideoPlayer.cpp:21\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/840","comments":3,"milestone":null,"number":840,"html_url":"https://github.com/openframeworks/openFrameworks/issues/840","assignee":null,"title":"ofGstVideoPlayer crash on exit","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2011-12-08T11:53:55Z","state":"open","user":{"url":"https://api.github.com/users/gaborpapp","gravatar_id":"9cb0f8a67c238d2aa91d9a7957b9ef4b","login":"gaborpapp","avatar_url":"https://secure.gravatar.com/avatar/9cb0f8a67c238d2aa91d9a7957b9ef4b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":203532},"id":2486705,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-12T12:30:53Z","body":"right now the only way to change the type of pixels is to go through ofImage and set image type there.\r\n\r\nseems like this should be moved into ofPixels.\r\n\r\nthoughts?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/838","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":838,"html_url":"https://github.com/openframeworks/openFrameworks/issues/838","assignee":{"url":"https://api.github.com/users/obviousjim","gravatar_id":"3bcf955bca297a223e9daa1f997bfad5","login":"obviousjim","avatar_url":"https://secure.gravatar.com/avatar/3bcf955bca297a223e9daa1f997bfad5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":321434},"title":"ofPixels has no setImageType","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-12-07T16:30:59Z","state":"open","user":{"url":"https://api.github.com/users/obviousjim","gravatar_id":"3bcf955bca297a223e9daa1f997bfad5","login":"obviousjim","avatar_url":"https://secure.gravatar.com/avatar/3bcf955bca297a223e9daa1f997bfad5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":321434},"id":2476561,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-05T21:44:08Z","body":"I made a small example which uses the Wikipedia xml api to make queries which are then parsed by an ofXmlSettings object. The problem is Wikipedia complains there is no User-Agent string and dosen't return any data, while threatening to block by IP.\r\n\r\nThe fix was as simple as adding this to ofURLFileLoader.cpp line 144:\r\n<pre>\r\n\t\tHTTPRequest req(HTTPRequest::HTTP_GET, path, HTTPMessage::HTTP_1_1);\r\n        \treq.add(\"User-Agent\", \"Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\");\r\n</pre>\r\n\r\nIt uses the iOS safari user agent string. I think the best fix is to expose the HTTPRequest and HTTPResponse Poco objects so that, like in the ofxHttpUtils, you could add manually the string/value to the request before sending it. I don't think it should be set ti a default within the class. Also, it would be awesome to be able to add data into and pull data out of the requests. This is a great wrapper, especially the threading, I'd just like to have the full req/response control ... perhaps provide a method to add Poco::HttpRequests and recieve Poco::HttpResponses which could be set as references inside the ofxHttpRequest/ofxHttpResponse objects?\r\n\r\nOn another note, ofURLFileLoader seems like a rather specific name for a regular HTTP action. What's wrong with ofHttpSession etc since I've found it useful for more then just","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/837","comments":0,"milestone":null,"number":837,"html_url":"https://github.com/openframeworks/openFrameworks/issues/837","assignee":null,"title":"ofURLFileLoader dosen't set HTTP User-Agent string and there is no way to set it","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-12-05T21:44:08Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480637},"id":2455011,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-04T00:08:35Z","body":"Dummy issue to ensure that the 0073 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/836","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/6","closed_issues":0,"number":6,"title":"0073 Release","due_on":"2012-07-30T07:00:00Z","open_issues":5,"created_at":"2011-12-03T15:37:49Z","state":"open","description":"","id":62090},"number":836,"html_url":"https://github.com/openframeworks/openFrameworks/issues/836","assignee":null,"title":"0073 Release tracking issue","labels":[],"closed_at":null,"created_at":"2011-12-04T00:08:35Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":2439965,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T09:03:22Z","body":"Not sure if is an issue or im doing wrong.\r\n\r\nIm trying to implement dragEvent() in an external class in windoes 7.  I'm getting neither an error nor a response nor result. While debugging dragEvent is not called at all.  The same code works perfectly on osx. \r\n\r\nhere's some:\r\n\r\ndummy.h\r\n\r\n\t#include \"ofMain.h\"\r\n\r\n\tclass dummy\r\n\t{\r\n\t\tpublic:\r\n\t\t\tdummy();\r\n\t\t\t~dummy();\r\n\t\t\t\t\t\r\n\t\t\tvoid config();\r\n\t\t\tvoid dragEvent(ofDragInfo &info);\r\n\t\t\t\r\n\t\tprivate:\r\n\t\tprotected:\r\n\t\t\r\n\t};\r\n\r\ndummy.cpp\r\n\r\n\t#include \"dummy.h\"\r\n\r\n\tdummy::dummy(){}\r\n\r\n\tdummy::~dummy(){}\r\n\r\n\tvoid dummy::config(){\r\n\t\tofAddListener(ofEvents.fileDragEvent, this, &dummy::dragEvent);\r\n\t}\r\n\r\n\tvoid dummy::dragEvent(ofDragInfo &info){\r\n\t\tfor( int i = 0; i < info.files.size() ; i++){\r\n\t\t\tcout << \"path: \" << info.files[i] << endl;\r\n\t\t}\r\n\t}\r\n\r\n\r\ntesApp.h\r\n\r\n\t#include \"ofMain.h\"\r\n\t#include \"dummy.h\"\r\n\r\n\r\n\tclass testApp : public ofBaseApp{\r\n\r\n\t\tpublic:\r\n\t\t\tvoid setup();\r\n\t\t\tvoid update();\r\n\t\t\tvoid draw();\r\n\r\n\t\t\tvoid keyPressed  (int key);\r\n\t\t\tvoid keyReleased(int key);\r\n\t\t\tvoid mouseMoved(int x, int y );\r\n\t\t\tvoid mouseDragged(int x, int y, int button);\r\n\t\t\tvoid mousePressed(int x, int y, int button);\r\n\t\t\tvoid mouseReleased(int x, int y, int button);\r\n\t\t\tvoid windowResized(int w, int h);\r\n\t\t\tvoid dragEvent(ofDragInfo dragInfo);\r\n\t\t\tvoid gotMessage(ofMessage msg);\r\n\t\t\t\r\n\t\t\tdummy d;\r\n\r\ntestApp.cpp\r\n\r\n\t#include \"testApp.h\"\r\n\r\n\tvoid testApp::setup(){\r\n\t\td.config();\r\n\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/831","comments":0,"milestone":null,"number":831,"html_url":"https://github.com/openframeworks/openFrameworks/issues/831","assignee":null,"title":"dragEvent() in new class not working in win7","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-12-03T08:51:42Z","state":"open","user":{"url":"https://api.github.com/users/decolector","gravatar_id":"7165a50ea8df968de57ffb5a27ba6ebc","login":"decolector","avatar_url":"https://secure.gravatar.com/avatar/7165a50ea8df968de57ffb5a27ba6ebc?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":390056},"id":2436532,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-02T16:28:49Z","body":"Dummy issue to ensure that the 0072 milestone stays open. Only close immediately before release.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/829","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":829,"html_url":"https://github.com/openframeworks/openFrameworks/issues/829","assignee":null,"title":"0072 Release tracking issue","labels":[],"closed_at":null,"created_at":"2011-12-02T16:28:49Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":2429871,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-11-29T17:54:48Z","body":"Loading Futura at font size 10 and simplify=0 yields oversimplified chars in a pdf render. I'm not sure if there's a way to fix this if the fonts are small.\r\n\r\nA workaround is to load the font at a larger size, say 40, then scale down by 0.25 when drawing. \r\n\r\nThe font below is a zoom of the pdf export using font size 10. The font above is Futura at font size 144 by comparison.\r\n\r\n![oversimplified fonts](http://farm8.staticflickr.com/7161/6423768819_9129b6d608_o.jpg)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/825","comments":2,"milestone":null,"number":825,"html_url":"https://github.com/openframeworks/openFrameworks/issues/825","assignee":null,"title":"small font sizes yield oversimplified glyph shapes","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-11-29T08:26:16Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480637},"id":2380571,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-19T07:01:47Z","body":"If I use loadScreenData with anti-Aliasing turned on in the program's startup like this:\r\n\r\nofAppiPhoneWindow * iOSWindow = new ofAppiPhoneWindow();\r\niOSWindow->enableAntiAliasing(4);\r\n\r\nthen the texture will load in nothing but solid black. If I bypass this anti-aliasing, it works fine. I also cannot properly populate a texture using loadScreenData in a landscape orientation. Changing to Portrait orientation in the update loop, and then back to landscape after the grab fixes it.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/822","comments":5,"milestone":null,"number":822,"html_url":"https://github.com/openframeworks/openFrameworks/issues/822","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"iOS - ofTexture.loadScreenData issue when antiAliasing is on","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-11-28T06:48:27Z","state":"open","user":{"url":"https://api.github.com/users/momo-the-monster","gravatar_id":"31f8a3ef87e828b70d2a441c8dae97d8","login":"momo-the-monster","avatar_url":"https://secure.gravatar.com/avatar/31f8a3ef87e828b70d2a441c8dae97d8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":737888},"id":2364541,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-11-28T18:48:58Z","body":"It'd be nice if ofRectangle used a ofVec2f or ofVec3f internally so you could do the something like:\r\n\r\n<pre>\r\nofRectangle myRect;\r\nofVec2f vel(-1, 2);\r\nmyRect.pos += vel;\r\n</pre>\r\n\r\nNow I'm not saying drop the x and y member vars, but link them to the ofVec internals thorugh either a union or reference. A reference would be easy through the constructor:\r\n\r\n<pre>\r\nclass ofRectangle {\r\n\r\n   public:\r\n\r\n     float &x, &y;\r\n     ofVec2f pos;\r\n     ....\r\n\r\n\r\nofRectangle::ofRectangle() : x(pos.x), y(pos.y) {\r\n\r\n...\r\n</pre>\r\n\r\nThis way we get the best of both worlds without broken code ...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/821","comments":3,"milestone":null,"number":821,"html_url":"https://github.com/openframeworks/openFrameworks/issues/821","assignee":null,"title":"suggest: ofRectangle internal ofVec","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-11-26T20:19:31Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480637},"id":2356801,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-01T18:13:35Z","body":"i'm experiencing troubles in windows when i use a system file-opening dialog from openframeworks. after using it Data root path seems to get pointing to a wrong location, causing troubles e.g. true type fonts not loading.\r\nif I use the open-file dialog once again to open a file in root folder of the application, then the data path is reset correctly.\r\nusing ofSetDataPathRoot() doens't seem to fix the issue, or maybe I'm not using it correctly.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/819","comments":2,"milestone":null,"number":819,"html_url":"https://github.com/openframeworks/openFrameworks/issues/819","assignee":null,"title":"datapath messed in windows after using file open dialog","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-11-22T10:50:13Z","state":"open","user":{"url":"https://api.github.com/users/hvfrancesco","gravatar_id":"e02a8a3953de9d5d9ec1c7aa8d43eca4","login":"hvfrancesco","avatar_url":"https://secure.gravatar.com/avatar/e02a8a3953de9d5d9ec1c7aa8d43eca4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":614123},"id":2316595,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-02T15:19:58Z","body":"Had a talk with Theo about this. I think that it would be really nice if it were possible to #define/ pre-process macro if you want to exclude modules like ofVideoPlayer/ofSoundplayer in your app. \r\n\r\nThis would be super helpful for a couple of reasons.\r\n\r\nplugins that are not able to use the modules can exclude them without hacking the core.\r\nif you want to reduce the final size of you app and its not using something like ofVideoPlayer you dont need to add it.\r\n\r\nwhat do you think...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/818","comments":1,"milestone":null,"number":818,"html_url":"https://github.com/openframeworks/openFrameworks/issues/818","assignee":null,"title":"#defines for modules ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-11-21T16:45:51Z","state":"open","user":{"url":"https://api.github.com/users/vanderlin","gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","login":"vanderlin","avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":149997},"id":2306518,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-11-17T15:17:10Z","body":"Hello, \r\nRunning on MacOS 10.7 with XCode 4.1 I could not compile any of the examples in devApps, except for _DeployExamples. \r\nThe first error always encountered is: \r\n\r\n../../../libs/openFrameworks/utils/ofConstants.h:101:22: error: GL/glew.h: No such file or directory\r\n\r\nI tried both changing the paths of the include part in the code and dragging the GL folder that contains glew.h separately in the project, but neither worked. \r\n\r\nHelp please... \r\n\r\nThanks, \r\n\r\nIannis Zannos","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/815","comments":3,"milestone":null,"number":815,"html_url":"https://github.com/openframeworks/openFrameworks/issues/815","assignee":null,"title":"Examples in devApps folder do not compile. Missing glew.h","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-11-17T13:45:47Z","state":"open","user":{"url":"https://api.github.com/users/iani","gravatar_id":"8200f2533f23c9daaff63c4dba6f4819","login":"iani","avatar_url":"https://secure.gravatar.com/avatar/8200f2533f23c9daaff63c4dba6f4819?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":181956},"id":2268829,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-14T16:30:18Z","body":"Hello, \r\nIt took me more than 4 hours to get openFrameworks to compile deployExamples on MacOS X 10.7.2 with XCode 4.1, because of having to figure out two things; \r\n\r\n1. Need to change SDK for the deployExamples project definitions to 10.6\r\n2. Need to choose deployExamples in the build menu on the toolbar of the project window. \r\n\r\nPerhaps this info should be added to the readme.txt file of the present master branch in order to spare other people the hassle? \r\n\r\nI suggest the following addition: \r\n=====\r\nTo deploy openFrameworks examples from the files cloned via the present github repository, you should build and run the project: \r\napps/devApps/_DeployExamples/deployExamples.xcodeproj\r\n\r\nTo successfully compile in Lion (MacOS X 10.7) in XCode you should select in the project file list of XCode both the target deployExamples from the top level of the file hierarchy and the project openFrameworksLib.xcodeproj from inside the openFrameworks folder, then find the project definition, and change the SDK to MacOS X 10.6. You should do the same for the targets of those two items. \r\n\r\nImportant: Before clicking the Build and Go, or the Run button, make sure that you choose the deployExamples project in the menu on the toolbar of the project window. (Otherwise if you leave openFrameworks as selected project and push Run or Build and Run, no application will be created or run). \r\n\r\n\r\n=====\r\nHopefully this helps. \r\nCheers, \r\nIannis Zannos","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/814","comments":2,"milestone":null,"number":814,"html_url":"https://github.com/openframeworks/openFrameworks/issues/814","assignee":null,"title":"Suggest adding some info about Lion to readme.txt","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-11-17T11:48:32Z","state":"open","user":{"url":"https://api.github.com/users/iani","gravatar_id":"8200f2533f23c9daaff63c4dba6f4819","login":"iani","avatar_url":"https://secure.gravatar.com/avatar/8200f2533f23c9daaff63c4dba6f4819?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":181956},"id":2267854,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-11-16T04:46:48Z","body":"I'm trying this simple ofFbo example on OF 007, the system is Ubuntu Lucid, with an Intel 945 GPU.\r\n\r\n]//--------------------------------------------------------------\r\nvoid testApp::setup(){\r\n    fbo.allocate(500, 500, GL_RGBA);\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::update(){\r\n\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::draw(){\r\n\r\n    fbo.begin();\r\n        ofClear(255, 255, 255, 255);\r\n        ofSetColor(255, 0, 0);\r\n        ofCircle(mouseX, mouseY, 100);\r\n    fbo.end();\r\n\r\n    ofSetColor(255);\r\n    fbo.draw(0, 0);\r\n}\r\n\r\nI got a segfault in i915 dri, and any test using ofFbo leads to same results.\r\n\r\n\r\n#0 0x1bd3c36    _mesa_FramebufferRenderbufferEXT() (/usr/lib/dri/i915_dri.so:??)\r\n#1 0x80cc56a    ofFbo::createAndAttachRenderbuffer(this=0x85b28e8, internalFormat=34041, attachmentPoint=33306) (../../../openFrameworks/gl/ofFbo.cpp:489)\r\n#2 0x80cc352    ofFbo::allocate(this=0x85b28e8, _settings=...) (../../../openFrameworks/gl/ofFbo.cpp:388)\r\n#3 0x80cc269    ofFbo::allocate(this=0x85b28e8, width=500, height=500, internalformat=6408, numSamples=0) (../../../openFrameworks/gl/ofFbo.cpp:363)\r\n#4 0x80562ec    testApp::setup(this=0x85b28d8) (src/testApp.cpp:5)\r\n#5 0x8059ca6    ofNotifySetup() (../../../openFrameworks/events/ofEvents.cpp:73)\r\n#6 0x8056a23    ofAppGlutWindow::runAppViaInfiniteLoop(this=0xbffff2f8, appPtr=0x85b28d8) (../../../openFrameworks/app/ofAppGlutWindow.cpp:317)\r\n#7 0x80584cc    ofRunApp(OFSA=0x85b28d8) (../../../openFrameworks/app/ofAppRunner.cpp:82)\r\n#8 0x8055bfc    main() (src/main.cpp:14)\r\n\r\nany idea about what I should try or where the problem could be? has anyone experienced similar problems?\r\n\r\nthanks in advance to all","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/811","comments":1,"milestone":null,"number":811,"html_url":"https://github.com/openframeworks/openFrameworks/issues/811","assignee":null,"title":"ofFBO causes segfault on Linux Ubuntu Lucid with i945 GPU","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-11-13T20:49:26Z","state":"open","user":{"url":"https://api.github.com/users/hvfrancesco","gravatar_id":"e02a8a3953de9d5d9ec1c7aa8d43eca4","login":"hvfrancesco","avatar_url":"https://secure.gravatar.com/avatar/e02a8a3953de9d5d9ec1c7aa8d43eca4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":614123},"id":2223158,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-09T18:51:38Z","body":"Julapy and I were discussing how to do this on the forum http://forum.openframeworks.cc/index.php?topic=7852 and I think adding a flag to allocate for mipmaps to ofTexture and ofFbo would come in handy for some people.\r\n\r\n```c\r\nvoid ofTexture::allocate(int w, int h, int internalGlDataType, bool bUseARBExtention, bool generateMipmaps = false)    \r\n{\r\n    if( generateMipmaps )\r\n    {\r\n        glTexParameterf( texData.textureTarget, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_NEAREST );\r\n        glTexParameterf( texData.textureTarget, GL_TEXTURE_MAG_FILTER, GL_LINEAR );\r\n        glTexParameterf( texData.textureTarget, GL_GENERATE_MIPMAP,    GL_TRUE );\r\n    }\r\n```\r\n\r\nand in ofFbo\r\n\r\n```c\r\nstruct Settings {\r\n    bool generateMipMaps; // or int\r\n}\r\n```\r\n\r\nI'd be happy to do this & submit a pull request too.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/810","comments":2,"milestone":null,"number":810,"html_url":"https://github.com/openframeworks/openFrameworks/issues/810","assignee":null,"title":"Add flag for mipmapping in ofTexture/ofFbo","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-11-11T07:34:53Z","state":"open","user":{"url":"https://api.github.com/users/joshuajnoble","gravatar_id":"10960ba0f305803a1cdc7cd6188d643b","login":"joshuajnoble","avatar_url":"https://secure.gravatar.com/avatar/10960ba0f305803a1cdc7cd6188d643b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":237423},"id":2206980,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=7
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4937'), ('content-length', '49276'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=8>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=6>; rel="prev"'), ('etag', '"362300e7c4c0fc8f170b2c345084dfad"'), ('date', 'Tue, 29 May 2012 19:27:16 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2011-12-03T23:58:48Z","body":"right now it's inside ofMath.h","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/800","comments":3,"milestone":null,"number":800,"html_url":"https://github.com/openframeworks/openFrameworks/issues/800","assignee":null,"title":"ofInsidePoly should be a static method of ofPolyline","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-30T04:16:14Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2089523,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-05T21:31:07Z","body":"ofRect very commonly has a little chunk missing from one corner.\r\n\r\nthere is also a discrepancy between the filled and outline rectangles. it's not clear whether the outline rect should be within the bounds of the filled rect, or enclosing the filled rect, and in practice it can be a little of both.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/798","comments":2,"milestone":null,"number":798,"html_url":"https://github.com/openframeworks/openFrameworks/issues/798","assignee":null,"title":"ofRect isn't quite rectangular","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-10-29T06:38:43Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2086039,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-29T02:37:28Z","body":"we're working on some ideas regarding procedural animation and posing:\r\n\r\nhttp://forum.openframeworks.cc/index.php/topic,7714.new.html#new\r\n\r\nwhich should be more powerful than playing back manual animations.\r\n\r\nintegrating it into the core would be ideal, but we're still trying to understand how it works.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/797","comments":0,"milestone":null,"number":797,"html_url":"https://github.com/openframeworks/openFrameworks/issues/797","assignee":null,"title":"procedural posing of bones in ofxAssimpModelLoader","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-29T02:37:28Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2085543,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T03:48:47Z","body":"this fails to display any text:\r\n\r\n\tofBackground(0);\r\n\tofSetColor(255, 254);\r\n\tofDrawBitmapString(\"this text is not displayed\", 10, 20);\r\n\r\nthis is because line 448 of ofBitmapFont.h reads:\r\n\r\n\tglAlphaFunc(GL_EQUAL, 1.0f);\r\n\r\nwhich should be changed to:\r\n\r\n\tglAlphaFunc(GL_GREATER, 0);","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/795","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":795,"html_url":"https://github.com/openframeworks/openFrameworks/issues/795","assignee":null,"title":"ofDrawBitmapString does not work with alpha","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/codeblocks+","name":"codeblocks ","color":"cb6efa"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-27T09:50:07Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":2066090,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-25T23:39:09Z","body":"\r\nThis should be user adjustable / on / off.  it's sort of a drag to be using easy cam and trigger double clicks are you are interacting with a gui, etc.... \r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/793","comments":1,"milestone":null,"number":793,"html_url":"https://github.com/openframeworks/openFrameworks/issues/793","assignee":null,"title":"easyCam -- ability to disable doubleClick reset","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-25T23:36:40Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":2051692,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T23:53:12Z","body":"when drawing certain shapes i get crashes, debugger claims a tessellator issue pointing to \r\n\"if (!tessTesselate(cacheTess, polyWindingMode, TESS_POLYGONS, 3, 3, 0)){\"    in \"performTessellation\" function in file ofTessellator.cpp ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/789","comments":1,"milestone":null,"number":789,"html_url":"https://github.com/openframeworks/openFrameworks/issues/789","assignee":null,"title":"crashes with tessellator","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-10-21T14:49:12Z","state":"open","user":{"url":"https://api.github.com/users/ruim","gravatar_id":"18875575931764c674b5fc64ae8b7274","login":"ruim","avatar_url":"https://secure.gravatar.com/avatar/18875575931764c674b5fc64ae8b7274?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480525},"id":2016194,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-19T22:39:37Z","body":"would be useful as well. Perhaps an ofxMeshUtils would be in order for upcoming versions...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/787","comments":0,"milestone":null,"number":787,"html_url":"https://github.com/openframeworks/openFrameworks/issues/787","assignee":null,"title":"half edge mesh structure extension of ofMesh","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-19T22:39:37Z","state":"open","user":{"url":"https://api.github.com/users/kpasko","gravatar_id":"b3685ad8a761582e5f1c3e151f9f854f","login":"kpasko","avatar_url":"https://secure.gravatar.com/avatar/b3685ad8a761582e5f1c3e151f9f854f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":167271},"id":1999520,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-11-04T21:59:22Z","body":"would be quite useful","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/786","comments":1,"milestone":null,"number":786,"html_url":"https://github.com/openframeworks/openFrameworks/issues/786","assignee":null,"title":"axis aligned bounding box tree for ofMesh","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-19T22:38:35Z","state":"open","user":{"url":"https://api.github.com/users/kpasko","gravatar_id":"b3685ad8a761582e5f1c3e151f9f854f","login":"kpasko","avatar_url":"https://secure.gravatar.com/avatar/b3685ad8a761582e5f1c3e151f9f854f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":167271},"id":1999513,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-27T17:58:58Z","body":"I am loading in boujou camera data (translation and euler rotation), and I get really fine results when I do: \r\n\r\nglTranslatef(tx,ty,tz);\r\nglRotatef(rx, 1,0,0);\r\nglRotatef(ry, 0,1,0);\r\nglRotatef(rz, 0,0,1);\r\n\r\nbut when I create an ofCamera, and do: \r\n\r\nsetPosition(ofPoint(tx, ty, tz));\r\nsetOrientation(ofPoint(rx, ry, rz));\r\n\r\nI get strange results.  I am wondering about ofNodes \"setOrientation\" and if it's really right in that the order is switched:\r\n\r\nsetOrientation(ofQuaternion(eulerAngles.y, ofVec3f(0, 1, 0), eulerAngles.x, ofVec3f(1, 0, 0), eulerAngles.z, ofVec3f(0, 0, 1)));\r\n\r\nalso, maybe I am mis interpreting what \"set orientation\" does.   But I can't seem to get similar results with ofCam, even if I do, for example, \r\n\r\ncam.setPosition( tx,ty,tz);\r\ncam.rotate( rx, 1,0,0);\r\ncam.rotate( ry, 0,1,0);\r\ncam.rotate( rz, 0,0,1);\r\n\r\nI still don't get the same results as when I do it via opengl.   This seems like a bug maybe with how ofNode handles rotation?\r\n\r\n(note , I am calling resetTranform() on the camera, so it's not an accumulation of rotations....  it's just that I can't seem to find a way to get ofCam to rotate in the same way as opengl commands). \r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/785","comments":2,"milestone":null,"number":785,"html_url":"https://github.com/openframeworks/openFrameworks/issues/785","assignee":null,"title":"ofCamera setOrientation gives odd results","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-10-19T11:16:42Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":1992818,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-09T11:46:35Z","body":"It seems to be happening pretty far in, if you put debug statements in touchesMoved in EAGL view, you will see that y is set to the x value of the touch.\r\n\r\nThis does not occur in debug mode, or in the simulator, and it has to be done with xcode4. I am running the newest ios5 beta as well.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/778","comments":2,"milestone":null,"number":778,"html_url":"https://github.com/openframeworks/openFrameworks/issues/778","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"running an iphone retina app in release mode causes touch.x == touch.y","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-10-18T11:26:26Z","state":"open","user":{"url":"https://api.github.com/users/jonbro","gravatar_id":"893ec14dc008e3774afe5841115920d6","login":"jonbro","avatar_url":"https://secure.gravatar.com/avatar/893ec14dc008e3774afe5841115920d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1597},"id":1938472,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-16T18:30:08Z","body":"\r\nat the moment, the ofCamera draw calls ofNode, which does't really give you a clear indication of which way the camera is looking.   even that is weird, because a camera looks on -z, and the node draw draws a line on positive z. \r\n\r\nI suggest we add something that draws a bit of a frustum (ie, fov, etc) and gives you a feeling about orientation.   \r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/774","comments":0,"milestone":null,"number":774,"html_url":"https://github.com/openframeworks/openFrameworks/issues/774","assignee":null,"title":"ofCamera draw() should be more indicative of where the camera is facing. ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-16T18:30:08Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":1922704,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-12T15:09:29Z","body":"Currently we have:\r\n\tvirtual void draw(float x,float y)=0;\r\n\tvirtual void draw(float x,float y,float w, float h)=0;\r\n\r\n\tvirtual float getHeight()=0;\r\n\tvirtual float getWidth()=0;\r\n\r\nSince we're insisting that the user define a getWidth and getHeight, can I ask why we don't set the default of draw(x,y) to be\r\n        virtual void draw(float x,float y) {draw(x, y, getWidth(), getHeight()) };\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/772","comments":0,"milestone":null,"number":772,"html_url":"https://github.com/openframeworks/openFrameworks/issues/772","assignee":null,"title":"ofBaseDraws draw(x, y) default","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-10-12T15:08:55Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":1888302,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-14T15:11:08Z","body":"Greetings,\r\n\r\nI downloaded OF v.007 on my laptop running Vista SP2. I compiled and ran some of the example apps like imageLoader example using VS2010. \r\n\r\nTextures seem to be broken. Images appear as white slabs.\r\n\r\nI tracked it down and found that disabling ArbTex, with ofDisableArbTex(), will get the textures working again. \r\n\r\nUsing ArbTex worked fine in OF v0.62 on the same machine.\r\n\r\nLaptop:\r\nHP Pavilion dv600 Notebook PC\r\nManufacturer: Hewlett-Packard\r\nOperating System: Windows Vista Home Premium, Service Pack 2 (6.0.6002)\r\nPhysical Memory:\t 2037 MB\r\nProcessor: Intel Core2 Duo PU T5250 @ 1.5 GHz, 1.5 GHz\r\n\r\nCompiler:\r\nMicrosoft Visual Studio 2010\r\nInstalled Version: Professional\r\nMicrosoft Visual C++ 2010\r\n\r\nGraphics:\r\nGraphics: Intel Graphics Media Accelerator Driver for Mobile\r\nGraphics: Driver Version: 7.14.10.1244\r\nDirectX Version:\t10.0\r\nOpenGL Version 1.5\r\n\r\nHere's a full report of OpenGL info from GLview:\r\n\r\n\r\nRenderer: Intel 965/963 Graphics Media Accelerator\r\nVendor: Intel\r\nMemory: 448 MB\r\nVersion: 1.5.0 - Build 7.14.10.1244\r\nShading language version: N/A\r\n\r\n\r\nMax texture size: 2048 x 2048\r\nMax texture coordinates: 8\r\nMax vertex texture image units: 0\r\nMax texture image units: 16\r\nMax geometry texture units: 0\r\nMax anisotropic filtering value: 2\r\nMax number of light sources: 16\r\nMax viewport size: 2048 x 2048\r\nMax uniform vertex components: 0\r\nMax uniform fragment components: 0\r\nMax geometry uniform components: 0\r\nMax varying floats: 0\r\nMax samples: 0\r\nMax draw buffers: 0\r\n\r\n\r\nExtensions: 56\r\n\r\nGL_3DFX_texture_compression_FXT1\r\nGL_ARB_depth_texture\r\nGL_ARB_fragment_program\r\nGL_ARB_multitexture\r\nGL_ARB_occlusion_query\r\nGL_ARB_point_parameters\r\nGL_ARB_shadow\r\nGL_ARB_texture_border_clamp\r\nGL_ARB_texture_compression\r\nGL_ARB_texture_cube_map\r\nGL_ARB_texture_env_add\r\nGL_ARB_texture_env_combine\r\nGL_ARB_texture_env_crossbar\r\nGL_ARB_texture_env_dot3\r\nGL_ARB_transpose_matrix\r\nGL_ARB_vertex_buffer_object\r\nGL_ARB_vertex_program\r\nGL_ARB_window_pos\r\nGL_EXT_abgr\r\nGL_EXT_bgra\r\nGL_EXT_blend_color\r\nGL_EXT_blend_func_separate\r\nGL_EXT_blend_minmax\r\nGL_EXT_blend_subtract\r\nGL_EXT_clip_volume_hint\r\nGL_EXT_compiled_vertex_array\r\nGL_EXT_draw_range_elements\r\nGL_EXT_fog_coord\r\nGL_EXT_multi_draw_arrays\r\nGL_EXT_packed_pixels\r\nGL_EXT_rescale_normal\r\nGL_EXT_secondary_color\r\nGL_EXT_separate_specular_color\r\nGL_EXT_shadow_funcs\r\nGL_EXT_stencil_two_side\r\nGL_EXT_stencil_wrap\r\nGL_EXT_texture3D\r\nGL_EXT_texture_compression_s3tc\r\nGL_EXT_texture_env_add\r\nGL_EXT_texture_env_combine\r\nGL_EXT_texture_filter_anisotropic\r\nGL_EXT_texture_lod_bias\r\nGL_IBM_texture_mirrored_repeat\r\nGL_NV_blend_square\r\nGL_NV_texgen_reflection\r\nGL_SGIS_generate_mipmap\r\nGL_SGIS_texture_edge_clamp\r\nGL_SGIS_texture_lod\r\nGL_WIN_swap_hint\r\nWGL_ARB_buffer_region\r\nWGL_ARB_extensions_string\r\nWGL_ARB_make_current_read\r\nWGL_ARB_pbuffer\r\nWGL_ARB_pixel_format\r\nWGL_EXT_extensions_string\r\nWGL_EXT_swap_control\r\n\r\nCore features\r\nv1.1 (100 % - 7/7)\r\nv1.2 (100 % - 8/8)\r\nv1.3 (100 % - 9/9)\r\nv1.4 (100 % - 15/15)\r\nv1.5 (100 % - 3/3)\r\nv2.0 (10 % - 1/10)\r\nv2.1 (0 % - 0/3)\r\nv3.0 (0 % - 0/23)\r\nv3.1 (0 % - 0/8)\r\nv3.2 (0 % - 0/10)\r\nv3.3 (0 % - 0/10)\r\nv4.0 (0 % - 0/14)\r\nv4.1 (0 % - 0/7)\r\nv4.2 (0 % - 0/12)\r\n\r\nOpenGL driver version check (Current: 1.5.0 - Build 7.14.10.1244, Latest known: ):\r\nLatest version of display drivers found\r\nAccording the database, you are running the latest display drivers for your video card.\r\n\r\nNo ICD registry entry\r\nThe current OpenGL driver doesn't expose the SOFTWARE/Microsoft/Windows (NT)/CurrentVersion/OpenGLDrivers registry entry. Unable to detect the driver version, driver revision name and filename.\r\n\r\nCompiled vertex array support\r\nThis feature improves OpenGL performance by using video memory to cache transformed vertices.\r\n\r\nMultitexture support\r\nThis feature accelerates complex rendering such as lightmaps or environment mapping.\r\n\r\nSecondary color support\r\nThis feature provides an alternate method of coloring specular highlights on polygons.\r\n\r\nS3TC compression support\r\nThis feature improves texture mapping performance in some applications by using lossy compression.\r\n\r\nTexture edge clamp support\r\nThis feature improves texturing quality by adding clamping control to edge texel filtering.\r\n\r\nVertex program support\r\nThis feature enables a wide variety of effects via flexible vertex programming (equivalent to DX8 Vertex Shader.)\r\n\r\nFragment program support\r\nThis feature enables a wide variety of effects via per pixel programming (equivalent to DX9 Pixel Shader.)\r\n\r\nTexture anisotropic filtering support\r\nThis feature improves the quality of texture mapping on oblique surfaces.\r\n\r\nOcclusion test support\r\nThis feature provides hardware accelerated culling for objects.\r\n\r\nNo OpenGL Shading Language support\r\nThis may break compatibility for applications using per pixel shading.\r\n\r\nNo Frame buffer object support\r\nThis may break compatibility for applications using render to texture functions.\r\n\r\nDisabling ArbTex will work for me, but I thought others might have the same problem with 007.\r\n\r\n- Rob","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/771","comments":3,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":771,"html_url":"https://github.com/openframeworks/openFrameworks/issues/771","assignee":null,"title":"Textures Didn't Work in 007 on my Laptop, Had to Disable ArbTex","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-10-11T13:02:28Z","state":"open","user":{"url":"https://api.github.com/users/robgonsalves","gravatar_id":"7c2e18ac17a0b907dbac36aaa6a9ec0f","login":"robgonsalves","avatar_url":"https://secure.gravatar.com/avatar/7c2e18ac17a0b907dbac36aaa6a9ec0f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1119357},"id":1874373,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-24T15:27:29Z","body":"When integrating openFrameworks into existing build systems, it would make things easier if this common include convention was followed.\r\n\r\ni.e. to include openFrameworks headers in my own build, because all the includes look like:\r\n\r\n#include \"ofMesh.h\"\r\n#include \"ofAppGlutWindow.h\"\r\n#include \"ofSerial.h\"\r\n\r\nI have to add all these paths to my include paths:\r\n\r\n\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/app\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/3d\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/communication\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/gl\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/graphics\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/utils\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/types\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/math\r\n  ../Libraries/of_preRelease_v007_linux64/libs/openFrameworks/events\r\n\r\n\r\n\r\nIt is common to instead structure files like (in the case of openFrameworks):\r\n\r\noF/include/oF\r\noF/include/oF/app\r\noF/include/oF/3d\r\noF/include/oF/communication\r\noF/include/oF/gl\r\noF/include/oF/graphics\r\n...etc...\r\n\r\nand just write:\r\n\r\n#include <of/ofMain.h>\r\n#include <of/communication/ofSerial.h>\r\n\r\netc.\r\n\r\nI'm not sure if there is an argument to leave it like it is because it's easier for oF's demographic? But I would say teaching the some_lib/include/some_lib/ convention would help people use more C++.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/767","comments":2,"milestone":null,"number":767,"html_url":"https://github.com/openframeworks/openFrameworks/issues/767","assignee":null,"title":"#include <lib/header.h> instead of #include <header.h>","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-10-09T03:58:30Z","state":"open","user":{"url":"https://api.github.com/users/gimlids","gravatar_id":"cc4cace34c61103f0624002a692820f7","login":"gimlids","avatar_url":"https://secure.gravatar.com/avatar/cc4cace34c61103f0624002a692820f7?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":186277},"id":1854874,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-12T13:12:02Z","body":"\r\nat the moment, ofNode has a draw function that has awkwardly hard coded sizes: \r\n\r\nvirtual void customDraw() {\r\n\t\tofBox(10);\r\n\t\tofDrawAxis(20);\r\n\t}\r\n\r\nI'd like a draw(size) option.  obviously I can extend ofNode and create my own functions, but if I just draw a node, I might want to adjust the size internally, as the \"10\" and \"20\" might not make any sense based on where I am drawing, for example here: \r\n\r\nhttp://imgur.com/idWPp\r\n\r\nlooks quite weird, but at 1/10th the size would look ok. \r\n\r\nas most other OF objects have draw(size) options, I think ofNodeShould have this too. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/766","comments":4,"milestone":null,"number":766,"html_url":"https://github.com/openframeworks/openFrameworks/issues/766","assignee":null,"title":"ofNode should have a draw(float size) option","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-08T09:38:46Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":1851779,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T23:51:04Z","body":"edit: originally this issue was about adding glu functions. now i realize any remaining ones need to be removed. but it's still relevant to have an ofScreenToWorld and ofWorldToScreen. \r\n\r\nthis would be really awesome. there is already some code in ofDrawBitmapString that's using gluProject, it would be good to clean it up.\r\n\r\nthe main issue is that glu is not on iOS, so we'd need to find/write our own implementation.\r\n\r\nhere's a first pass:\r\n\r\n\tGLdouble modelviewMatrix[16], projectionMatrix[16];\r\n\tGLint viewport[4];\r\n\tvoid updateProjectionState() {\r\n\t\tglGetDoublev(GL_MODELVIEW_MATRIX, modelviewMatrix);\r\n\t\tglGetDoublev(GL_PROJECTION_MATRIX, projectionMatrix);\r\n\t\tglGetIntegerv(GL_VIEWPORT, viewport);\r\n\t}\r\n\r\n\tofVec3f ofWorldToScreen(ofVec3f world) {\r\n\t\tupdateProjectionState();\r\n\t\tGLdouble x, y, z;\r\n\t\tgluProject(world.x, world.y, world.z, modelviewMatrix, projectionMatrix, viewport, &x, &y, &z);\r\n\t\tofVec3f screen(x, y, z);\r\n\t\tscreen.y = ofGetHeight() - screen.y;\r\n\t\treturn screen;\r\n\t}\r\n\r\n\tofVec3f ofScreenToWorld(ofVec3f screen) {\r\n\t\tupdateProjectionState();\r\n\t\tGLdouble x, y, z;\r\n\t\tscreen.y = ofGetHeight() - screen.y;\r\n\t\tgluUnProject(screen.x, screen.y, screen.z, modelviewMatrix, projectionMatrix, viewport, &x, &y, &z);\r\n\t\tofVec3f world(x, y, z);\r\n\t\treturn world;\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/765","comments":4,"milestone":null,"number":765,"html_url":"https://github.com/openframeworks/openFrameworks/issues/765","assignee":null,"title":"remove gluProject and gluUnProject, add screenToWorld, worldToScreen","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-10-07T09:46:06Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1841802,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T06:02:37Z","body":"I made an app using the preRelease version 007, I have a gui view with a bunch of buttons and sliders this view is 1/3 of the screen size and sits at the bottom, it is an Universal app that allows any orientation on the iPad and supports Portrait only for the iPhone / iPod Touch, here is my problem I need to allow touches to pass through the gui view for this I use **[ofxiPhoneGetGLView() addSubview:guiViewController.view];** the problem this method is that the gui view does not call the **willAnimateRotationToInterfaceOrientation()** at launch, and I get the following message in the console\r\n_**Action connections from &lt;UIView: 0x5b88d0; frame = (20 0; 280 320); autoresize = LM+RM+H; layer = &lt;CALayer: 0x5b7d30&gt;&gt; are not supported.**_\r\n\r\n if I use **[ofxiPhoneGetUIWindow() addSubview:guiViewController.view];** the **willAnimateRotationToInterfaceOrientation()** method works at launch as expected and the gui view adjust itself to the correct position and size\r\n\r\nAny help will be much appreciated","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/764","comments":1,"milestone":null,"number":764,"html_url":"https://github.com/openframeworks/openFrameworks/issues/764","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"Autoresize problem in iOS","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-10-05T20:35:04Z","state":"open","user":{"url":"https://api.github.com/users/nardove","gravatar_id":"8022cb5f529975afbc64cc9312008d8c","login":"nardove","avatar_url":"https://secure.gravatar.com/avatar/8022cb5f529975afbc64cc9312008d8c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":277690},"id":1827792,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-28T01:00:34Z","body":"ofxXmlXettings uses TinyXML which gives you lots of useful error info like what line the error is on as well as what it has trouble reading. This is super awesome and useful to people like me who always mistype xml here and there.\r\n\r\nCurrently ofxXmlSettings::loadFile only returns a bool and you're left to figure out if it's a path issue, bad xml formatting, etc. At the least, we should be able to grab an error string.\r\n\r\nHere's how to do it:\r\n<pre>\r\nstd::string Xml::getErrorString(const TiXmlDocument* xmlDoc)\r\n{\r\n    if(xmlDoc == NULL)\r\n        return \"\";\r\n\r\n    std::stringstream error;\r\n    error &#060;&#060; \"line \" &#060;&#060;  xmlDoc->ErrorRow() &#060;&#060; \", \" &#060;&#060; (std::string) xmlDoc->ErrorDesc();\r\n    return error.str();\r\n}\r\n</pre>","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/760","comments":1,"milestone":null,"number":760,"html_url":"https://github.com/openframeworks/openFrameworks/issues/760","assignee":null,"title":"ofxXmlSettings does not print any useful error messages","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-09-28T00:53:09Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480637},"id":1758237,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T03:48:47Z","body":"This would be the best thing ever. \r\n\r\nstring ipAddr = ofxXmlSettings::readValueFromFile(\"data.xml\", \"ip\", \"127.0.0.1\"); \r\n\r\nofxXmlSettings::saveValueToFile(\"data.xml\", \"ip\", ipAddr); ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/758","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":758,"html_url":"https://github.com/openframeworks/openFrameworks/issues/758","assignee":null,"title":"non ofxXmlSettings object read and write value","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/codeblocks+","name":"codeblocks ","color":"cb6efa"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-09-26T11:54:06Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":1738864,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-25T13:22:59Z","body":"in my opinion, it would make sense for ofPixels::allocate to initialize the new memory to 0. even for large images, i don't think this is such an expensive operation.\r\n\r\ni discovered that it is not initialized to 0 when i had a really weird bug -- some code that gave me different results depending on whether i loaded another image before allocating or not. i was expecting OF to act like opencv, which also sets new memory to 0. this would be in line with ofVec*, ofColor, and a few other things, which are all allocated to 0.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/757","comments":0,"milestone":null,"number":757,"html_url":"https://github.com/openframeworks/openFrameworks/issues/757","assignee":null,"title":"ofPixels::allocate should init new memory","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-09-25T13:22:59Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1733504,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-22T08:20:27Z","body":"void ofFbo::end() {\r\n\tunbind();\r\n\tif(ofGetGLRenderer()){\r\n\t\tofGetGLRenderer()->setCurrentFBO(NULL);\r\n\t}\r\n\tofPopView();\r\n}\r\n\r\nthis will go wrong if nested fbo as following\r\n\r\nfbo1.begin();\r\n...\r\n   fbo2.begin();\r\n   ...\r\n   fbo2.end();\r\n...\r\nfbo1.end();\r\n\r\nso probably the current fbo must not be set NULL\r\n\r\nerror show's in\r\nvoid ofGLRenderer::viewport(float x, float y, float width, float height, bool invertY) {\r\n\tif(width == 0) width = ofGetWindowWidth();\r\n\tif(height == 0) height = ofGetWindowHeight();\r\n\r\n\tif (invertY){\r\n\t\tif(currentFbo){\r\n\t\t\ty = currentFbo->getHeight() - (y + height);\r\n\t\t}else{\r\n\t\t\ty = ofGetWindowHeight() - (y + height);\r\n\t\t}\r\n\t}\r\n\tglViewport(x, y, width, height);\t\r\n}\r\nthe  'y' will computing wrong when current height is wrong\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/754","comments":0,"milestone":null,"number":754,"html_url":"https://github.com/openframeworks/openFrameworks/issues/754","assignee":null,"title":"nested fbo causing currentFBO lost","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-09-22T08:20:27Z","state":"open","user":{"url":"https://api.github.com/users/liquidzym","gravatar_id":"166640c513e589c86d2de49c52258eb4","login":"liquidzym","avatar_url":"https://secure.gravatar.com/avatar/166640c513e589c86d2de49c52258eb4?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":51957},"id":1708332,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:38:03Z","body":"I found an issue with readToPixels() on iOS that works as expected when compiled for OSX. \r\n\r\nInitialize an FBO:\r\n\r\n   ofFbo::Settings settings;\r\n    settings.width = 1024;\r\n    settings.height = 1024;\r\n    settings.internalformat = GL_RGB;\r\n    settings.numSamples = 0;\r\n    settings.useDepth = false;\r\n    settings.useStencil = false;\r\n    screenFBO.allocate(settings);\r\n\r\nthen draw into the FBO and attempt to retrieve the pixels:\r\n\r\n    ofPixels pixels;  \r\n    screenFBO.readToPixels(pixels);  \r\n\r\nThis gives me the ofPixels I'm expecting in OSX, in iOS the pixels aren't populated. I can draw the FBO and see it on screen, I just can't get the pixels out of the texture in iOS.\r\n\r\nThis seems to be related to this portion of readToPixels() from ofFbo.cpp:\r\n\r\n    bind();  \r\n    int format,type;  \r\n    ofGetGlFormatAndType(settings.internalformat,format,type);  \r\n    glReadPixels(0,0,settings.width, settings.height, format, GL_UNSIGNED_BYTE, pixels.getPixels());  \r\n    unbind();  \r\n\r\nHas anyone experienced this issue – any fixes?\r\n\r\nThanks,\r\nSteve","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/753","comments":1,"milestone":null,"number":753,"html_url":"https://github.com/openframeworks/openFrameworks/issues/753","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"ofFbo readToPixels() in iOS","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-09-21T20:50:33Z","state":"open","user":{"url":"https://api.github.com/users/stephen-baker","gravatar_id":"96e9ae469240e57fc3ebeed6769c7016","login":"stephen-baker","avatar_url":"https://secure.gravatar.com/avatar/96e9ae469240e57fc3ebeed6769c7016?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1047836},"id":1704855,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-21T10:37:20Z","body":"I'm having a problem with creating an image out of ofFbo pixels with some image and fbo sizes\r\n\r\n```c++\r\nvoid testApp::setup(){\r\n\r\n    ofSetLogLevel(OF_LOG_VERBOSE);\r\n\tofSetVerticalSync(false);\r\n    ofBackground(34, 34, 34);\r\n\tofEnableAlphaBlending();\r\n\r\n    ofSetWindowShape(1024, ofGetScreenHeight()-70);\r\n    ofSetFrameRate(60);\r\n\r\n    frame.loadImage(\"lay.png\");\r\n    \r\n    imageHeight = 1172;\r\n    imageWidth = 1182;\r\n\r\n    mergeFbo.allocate(imageWidth, imageHeight, GL_RGB);\r\n\r\n    final.setImageType(OF_IMAGE_COLOR);\r\n\r\n}\r\n\r\n//--------------------------------------------------------------\r\nvoid testApp::draw(){\r\n\r\n    ofEnableAlphaBlending();\r\n\r\n    mergeFbo.begin();\r\n\r\n    ofClear(0, 0, 0, 1);\r\n\r\n    frame.draw(0, 0);\r\n\r\n    mergeFbo.end();\r\n\r\n\r\n    mergeFbo.draw(200, 100, 100, 200);\r\n    \r\n    \r\n    mergeFbo.readToPixels(pixels);\r\n    final.setFromPixels(pixels);\r\n\r\n    final.draw(0, 0);\r\n\r\n}\r\n```","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/752","comments":1,"milestone":null,"number":752,"html_url":"https://github.com/openframeworks/openFrameworks/issues/752","assignee":null,"title":"ofFbo (problems with certain image dimensions)","labels":[],"closed_at":null,"created_at":"2011-09-20T21:16:24Z","state":"open","user":{"url":"https://api.github.com/users/ammalgamma","gravatar_id":"96b69749f518cf6a2964b999bf29ee8e","login":"ammalgamma","avatar_url":"https://secure.gravatar.com/avatar/96b69749f518cf6a2964b999bf29ee8e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":517000},"id":1691874,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-19T09:04:12Z","body":"feature request for a more generic ofJoin() function that accepts vectors of all kinds of objects (float, int, ofVec2f, etc) rather than just string. anything that implements operator<<\r\n\r\nhere's an example using stl:\r\n\r\n\t#include <iterator>\r\n\ttemplate <class T>\r\n\tstring ofJoin(vector<T>& elements, string delimiter) {\r\n\t\tstringstream result;\r\n\t\tcopy(elements.begin(), elements.end(), ostream_iterator<T>(result, delimiter.c_str()));\r\n\t\treturn result.str();\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/748","comments":3,"milestone":null,"number":748,"html_url":"https://github.com/openframeworks/openFrameworks/issues/748","assignee":null,"title":"more generic ofJoin","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-09-17T07:26:18Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1668066,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-21T17:22:14Z","body":"\r\nI'm looking into creating some new primitives for OF [1] and the polygon winding has me a bit confused.\r\n\r\nIf you take for instance \"graphicsExample\" an you add:\r\n\r\n```glEnable( GL_CULL_FACE );```\r\n\r\nSomewhere you will no longer see much drawn to screen.\r\n\r\nGL_CCW is the default FrontFace for OpenGL, but OF seems to be the opposite.\r\nhttp://www.khronos.org/opengles/sdk/docs/man/xhtml/glFrontFace.xml\r\n\r\nWhich is coolio of course, as long as we are consistent.\r\n\r\nOur options are either to throw a ```glFrontFace( GL_CW );``` in there somewhere OR re-write all the drawing to be consistent with OpenGL default, not sure what is the best in the long run.\r\n\r\nWhat say you all?\r\n\r\n/A\r\n\r\n\r\n[1] https://github.com/andreasmuller/openFrameworks/blob/develop-opengles2/libs/openFrameworks/3d/of3dPrimitives.h","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/745","comments":2,"milestone":null,"number":745,"html_url":"https://github.com/openframeworks/openFrameworks/issues/745","assignee":null,"title":"Polygon winding","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-09-14T13:50:48Z","state":"open","user":{"url":"https://api.github.com/users/andreasmuller","gravatar_id":"210831a04d36f1aa26413ecbdbd4b07c","login":"andreasmuller","avatar_url":"https://secure.gravatar.com/avatar/210831a04d36f1aa26413ecbdbd4b07c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":791114},"id":1643672,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=8
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4936'), ('content-length', '42586'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=9>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=7>; rel="prev"'), ('etag', '"1f6749765d79f3319834dfda4c27cd5e"'), ('date', 'Tue, 29 May 2012 19:27:17 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-03-17T16:52:58Z","body":"i think it would be wonderful if every OF example was named ofApp instead of testApp. especially because:\r\n\r\n\tclass ofApp : public ofBaseApp {\r\n\r\nis more natural than:\r\n\r\n\tclass testApp : public ofBaseApp {\r\n\r\ngiven the rest of OF naming conventions. and it would increase consistency with things like:\r\n\r\n\tofGetAppPtr();\r\n\tofAppBaseWindow\r\n\tofAppGlutWindow\r\n\r\nthis is a massive refactor that shouldn't be difficult, but should be done at the same time as something like a code formatting cleanup.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/744","comments":10,"milestone":null,"number":744,"html_url":"https://github.com/openframeworks/openFrameworks/issues/744","assignee":null,"title":"rename testApp to ofApp","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-09-14T07:02:36Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1641198,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-26T11:56:48Z","body":"calling ofEnableAlphaBlending() crashes my app on a machine with opengl version 1.1.0,  because glBlendEquation(), introduced at opengl 1.3, needs to gracefully degrade. Here is the solution:\r\n\r\n<pre>\r\nvoid ofEnableAlphaBlending_slightlySafer(void){\r\n\tconst GLubyte * version = glGetString(GL_VERSION);\r\n\tint major, minor;\r\n\tsscanf((const char*)version, \"%i.%i\",&major, &minor);\r\n\r\n\tif(major > 1 || (major==1 && minor>=3)){\r\n\t\tofEnableAlphaBlending();\r\n\t}\t\r\n}\r\n</pre>","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/743","comments":1,"milestone":null,"number":743,"html_url":"https://github.com/openframeworks/openFrameworks/issues/743","assignee":null,"title":"seg fault on ofEnableAlphaBlending() -> glBlendEquation()","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-09-13T22:53:55Z","state":"open","user":{"url":"https://api.github.com/users/jtnimoy","gravatar_id":"153ba4a8df491692b717daad7a6030be","login":"jtnimoy","avatar_url":"https://secure.gravatar.com/avatar/153ba4a8df491692b717daad7a6030be?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":183796},"id":1639020,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:39:00Z","body":"In ofxiPhoneAppDelegate.mm in the setAnimationFrameInterval method should be changed from\r\n\r\n\r\nif (animating){\r\n  [self stopAnimation];\r\n [self startAnimation];\r\n}\r\n\r\nto\r\n\r\nif (animating){\r\n  [self stopAnimation];\r\n}\r\n [self startAnimation];\r\n\r\nThis will allow it start again if it's stopped.\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/738","comments":0,"milestone":null,"number":738,"html_url":"https://github.com/openframeworks/openFrameworks/issues/738","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"ofxiPhone - setting ofSetFrameRate(0) and then back to > 0 doesn't start again","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-09-12T21:23:04Z","state":"open","user":{"url":"https://api.github.com/users/cerupcat","gravatar_id":"91b3d4bfbbb99d840b096cde3af877bf","login":"cerupcat","avatar_url":"https://secure.gravatar.com/avatar/91b3d4bfbbb99d840b096cde3af877bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":204151},"id":1628082,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T22:55:09Z","body":"it would be awesome to have lines drawn nicer when they are 1 thick and 2 make sharp edges. processing has some functions strokeCap() and strokeJoin() for setting this behavior, but it doesn't work with OPENGL mode. we could probably adapt a geometry shader to do some smart mitering for us on the GPU.\r\n\r\nprompted by the discussion here: http://forum.openframeworks.cc/index.php/topic,7278.0/topicseen.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/730","comments":1,"milestone":null,"number":730,"html_url":"https://github.com/openframeworks/openFrameworks/issues/730","assignee":null,"title":"nicer stroke mitering/joining and end caps","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-09-07T03:27:13Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1586262,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-05T15:39:58Z","body":"ofColor_<T>:operator+= currently calls clamp() when it's done doing the +=\r\n\r\ni imagined one of the applications of ofFloatColor would be for averaging or summing ofColor, which normally requires non-saturation semantics for +=. i could also do a / or * every += operation to avoid overflow. this doesn't have to be a bug, but it should at least be documented clearly when we discuss ofColor.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/728","comments":1,"milestone":null,"number":728,"html_url":"https://github.com/openframeworks/openFrameworks/issues/728","assignee":null,"title":"ofColor and clamping","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-09-05T14:41:50Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1569364,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-05T10:17:48Z","body":"Hello\r\n\r\nI had a problem with gamma for my Carbon app in OSX 10.6, UI looked \"blotched\" with Pappis' help it was solved, here are details:\r\n\r\nhttp://forum.openframeworks.cc/index.php/topic,6404.msg30519.html#msg30519\r\n\r\nHowever, the trick with HIWindowSetColorSpace does not work in OSX 10.7 Lion\r\nLooking for solutions again\r\n\r\nThanks\r\nTom\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/727","comments":0,"milestone":null,"number":727,"html_url":"https://github.com/openframeworks/openFrameworks/issues/727","assignee":null,"title":"OSX 10.7 Gamma Problem","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2011-09-05T10:17:48Z","state":"open","user":{"url":"https://api.github.com/users/Tommato","gravatar_id":"95bbfbd39116dffe06be4d816f322bf0","login":"Tommato","avatar_url":"https://secure.gravatar.com/avatar/95bbfbd39116dffe06be4d816f322bf0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":1027082},"id":1566286,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-26T18:44:30Z","body":"Related forum post: http://forum.openframeworks.cc/index.php/topic,7053.0.html\r\n\r\nFrom what I understand, it's best to leave the mainThread for UIKit elements and move openGL and other things to another thread. Currently, if there's a lot of drawing then the UIKit elements are delayed and can even pause the update/draw methods entirely. Moving the drawing to it's own thread should help with this.\r\n\r\nI'm still testing, but this looks like it could be a good candidate for core integration. It has examples of threaded, single (what we currently use), and GCD (which I think is iOS 4.0 only) openGL implementation: https://github.com/Volcore/LimbicGL In my early tests, it does fix any pausing of the update/draw with the threaded example (haven't tried the others). I could use some help though trying to integrate this into OF properly.\r\n\r\nThe main example classes are here: https://github.com/Volcore/LimbicGL/tree/master/limbicgl/drivers\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/721","comments":0,"milestone":null,"number":721,"html_url":"https://github.com/openframeworks/openFrameworks/issues/721","assignee":null,"title":"ofxiPhone - Move openGL to its own thread","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-08-26T18:43:09Z","state":"open","user":{"url":"https://api.github.com/users/cerupcat","gravatar_id":"91b3d4bfbbb99d840b096cde3af877bf","login":"cerupcat","avatar_url":"https://secure.gravatar.com/avatar/91b3d4bfbbb99d840b096cde3af877bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":204151},"id":1497330,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:39:39Z","body":"The libraries linked in 007 as well as the new AVFoundationVideoPlayer is not compatible with 3.x devices and won't build.\r\n\r\nAfter further exploring, I believe these are the steps to get things running on 3.x devices.\r\n\r\n1) In Xcode, Click on target -> application name\r\n2) In the File Name window, set AVFoundation, CoreMedia, and CoreVideo from role \"required\" to \"weak\". They need to be weak linked since they're only available in iOS 4+.\r\n3) In ofxiPhone src folder, AVFoundationVideoPlayer.mm uses CMBlockBufferRef and that is only available in iOS4. This means, this function should be commented out (sorry - avfoundationvideoplayer won't run on iOS4 unless the blocker is changed). Either that or you can comment ouf AVFoundationVideoPlayer from being included in OF.\r\n4) Clean all targets and rebuild","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/720","comments":0,"milestone":null,"number":720,"html_url":"https://github.com/openframeworks/openFrameworks/issues/720","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"007 ofxiPhone not compatible with 3.x devices ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-08-26T18:38:38Z","state":"open","user":{"url":"https://api.github.com/users/cerupcat","gravatar_id":"91b3d4bfbbb99d840b096cde3af877bf","login":"cerupcat","avatar_url":"https://secure.gravatar.com/avatar/91b3d4bfbbb99d840b096cde3af877bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":204151},"id":1497291,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-22T17:38:49Z","body":"\r\nbased on this comment, \r\n\r\nhttp://forum.openframeworks.cc/index.php/topic,5319.msg33381.html#msg33381\r\n\r\nI wonder if we can be smarter in endShape() / ofPath::tessellate() and look for simple usage (3 or 4 points, etc) before tessellating, or if the slow down is just based on the use of the ofPath object. \r\n\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/719","comments":1,"milestone":null,"number":719,"html_url":"https://github.com/openframeworks/openFrameworks/issues/719","assignee":null,"title":"optimize ofEndShape() to deal with simple shapes","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-08-22T16:56:27Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":1459353,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-22T16:02:30Z","body":"change\r\n\r\nfloat ofCamera::getImagePlaneDistance(ofRectangle viewport) const {\r\n\treturn getPosition().length(); //viewport.height / (2.0f * tanf(PI * fov / 360.0f));\r\n}\r\n\r\nold in comment\r\n\r\ncurrent system is abitrary\r\nsuggest new system is more sensible\r\n(i'm always working in normalised coords)\r\npls check in your life before changing :)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/717","comments":0,"milestone":null,"number":717,"html_url":"https://github.com/openframeworks/openFrameworks/issues/717","assignee":null,"title":"suggest new calc clip planes routine","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-08-22T16:02:30Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":1458979,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-22T14:11:34Z","body":"http://forum.openframeworks.cc/index.php/topic,5222.msg33366.html#msg33366\r\n\r\nthere also seem to be a memory leak, when deleting a ofQuicktimeVideoPlayer","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/716","comments":0,"milestone":null,"number":716,"html_url":"https://github.com/openframeworks/openFrameworks/issues/716","assignee":null,"title":"problems with stop/play in quicktime videoPlayer","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-08-22T14:11:34Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":1458044,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-16T13:39:49Z","body":"Here\r\nhttps://github.com/openframeworks/openFrameworks/issues/653\r\nI downloaded latest version but in still crashes on my old video card Nvidia GeForce Go 7200.\r\nAny idea why?\r\nofxFBOTexture works,  but i got some trobles in pixel format there. \r\nofxFBOTexture uses function with postfix EXT sometimes? ofFbo without it.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/711","comments":5,"milestone":null,"number":711,"html_url":"https://github.com/openframeworks/openFrameworks/issues/711","assignee":null,"title":"Problem with ofFbo. Crashes on allocate.There were the same issue","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-08-16T10:21:29Z","state":"open","user":{"url":"https://api.github.com/users/IonRod","gravatar_id":"cf3cb346817dd8a9f8327d1af13c3d46","login":"IonRod","avatar_url":"https://secure.gravatar.com/avatar/cf3cb346817dd8a9f8327d1af13c3d46?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":886012},"id":1414013,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-15T14:23:47Z","body":"i'm noticing this on osx 10.6. all 8-bit images are correct, but somehow i didn't notice about unsigned short and float until now!\r\n\r\ni'm super busy atm, but i've kind of been maintaining the unsigned short/float loading so i'll look into this if someone else doesn't get to it first.\r\n\r\nmeanwhile it would be good to see if it's the same on windows or not. for anyone interested in testing, please check devApps/AdvancedImageLoading and compare the results of the app to the .exr opened in photoshop.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/710","comments":0,"milestone":null,"number":710,"html_url":"https://github.com/openframeworks/openFrameworks/issues/710","assignee":null,"title":"16-bit and 32-bit images are red/blue swapped","labels":[],"closed_at":null,"created_at":"2011-08-15T14:23:47Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1407813,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-07T12:19:07Z","body":"in the past there has been ofxQtVideoSaver and a few others. i think this is a really hard problem because it basically needs to be written for each platform, but something that should eventually be solved.\r\n\r\ntwo major use cases i know are:\r\n\r\n- capturing and saving simultaneously, for long streams\r\n- capturing a quick burst of video then saving it to disk\r\n\r\nwhich would might be handled a little differently.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/702","comments":1,"milestone":null,"number":702,"html_url":"https://github.com/openframeworks/openFrameworks/issues/702","assignee":null,"title":"cross platform video saving (ofVideoSaver?)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-08-07T03:23:38Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1359729,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-06T20:20:03Z","body":"Hi!\r\n\r\nI have problems even getting the ofxOsc Send/Receive examples talking on Ubuntu 11.04 64bit. \r\nThey compile without problems, but sometimes when I run them, communication fails somewhere along the road - input events are not shown in the receiver app. Sometimes it does not work at all.\r\n\r\nThis works all flawlessly on 32bit Ubuntu 11.04. See http://forum.openframeworks.cc/index.php/topic,6918.0.html for more details.\r\n\r\nCan anyone reproduce these problems? Any tips? How could I debug this?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/701","comments":3,"milestone":null,"number":701,"html_url":"https://github.com/openframeworks/openFrameworks/issues/701","assignee":null,"title":"ofxOsc does not seem to work on 64bit Ubuntu","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2011-08-06T19:14:37Z","state":"open","user":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"id":1358688,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-08-05T03:06:25Z","body":"very simple but helpful feature request. e.g.,\r\n\r\nofBuffer::operator=(const ofBuffer& mom) {\r\n  set(mom.getBinaryBuffer(), mom.size());\r\n}\r\n\r\nthis goes along with the general \"what does the equal operator mean\" debate/discussion :)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/700","comments":0,"milestone":null,"number":700,"html_url":"https://github.com/openframeworks/openFrameworks/issues/700","assignee":null,"title":"ofBuffer with overloaded = operator","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-08-05T03:06:25Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1349012,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-14T15:11:28Z","body":"this seems like an api inconsistency to me: i feel like ofTexture::loadData() is similar to ofImage::setFromPixels(), but setFromPixels() will allocate space if necessary while loadData() just prints an error if the data is larger than the allocated space.\r\n\r\ni think auto-allocation would be nice, but i might just be misunderstanding/making a false comparison here.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/699","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":699,"html_url":"https://github.com/openframeworks/openFrameworks/issues/699","assignee":null,"title":"loadData() does not allocate as necessary","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-08-04T10:29:57Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":1343463,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-14T15:12:03Z","body":"from: http://forum.openframeworks.cc/index.php/topic,6952.msg32509.html\r\n\r\n\r\n\r\ngetBmpFromPixels() crashed repeatedly when I tried to rescale grayscale Images of size 3026*2048.\r\n\r\nIt's because memcpy overshoots the src pixel array because dstStride can be larger than srcStride.\r\n\r\nIn ofImage.cpp \r\n\r\ngetBmpFromPixels()\r\n\r\naround line 119, I believe, it should read:\r\n\r\nCode:\r\nview plaincopy to clipboardprint?\r\n...  \r\n    int srcStride = width * pix.getBytesPerPixel();  \r\n    int dstStride = FreeImage_GetPitch(bmp);  \r\n    unsigned char* src = (unsigned char*) pixels;  \r\n    unsigned char* dst = bmpBits;  \r\n    for(int i = 0; i < (int)height; i++) {  \r\n        // memcpy(dst, src, dstStride);  \r\n        memcpy(dst, src, srcStride);        // did overshoot with e.g. grayscale img of size 3026*2048  \r\n        src += srcStride;  \r\n        dst += dstStride;  \r\n    }  \r\n...  \r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/698","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":698,"html_url":"https://github.com/openframeworks/openFrameworks/issues/698","assignee":null,"title":"getBmpFromPixels memcpy issue / ofImage::resize issue","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-08-03T18:15:55Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":1339116,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-21T15:34:07Z","body":"I'm trying to build ofxPd in Visual Studio and running into multiple define issues related to the videoinput lib, namely static `verbose`: https://github.com/openframeworks/openFrameworks/blob/master/libs/videoInput/include/videoInput.h#L115\r\n\r\nCouldn't this variable as well as `comInitCount` be moved to the implementation files? or at least in a header hidden from the global namespace? At the least, `verbose` could be renamed to something not so common ...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/697","comments":1,"milestone":null,"number":697,"html_url":"https://github.com/openframeworks/openFrameworks/issues/697","assignee":null,"title":"videoinput lib global statics","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-08-03T02:27:52Z","state":"open","user":{"url":"https://api.github.com/users/danomatika","gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","login":"danomatika","avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":480637},"id":1334657,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-25T00:53:30Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/685","comments":3,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":685,"html_url":"https://github.com/openframeworks/openFrameworks/issues/685","assignee":null,"title":"update shader example to work on ati.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/codeblocks+","name":"codeblocks ","color":"cb6efa"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-07-28T15:57:58Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":1303812,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:40:42Z","body":"It is very annoying if you can not disable autocorrections in ofxiPhoneKeyboard. Specially for creative uses of this class. I add code how to add this feature.\r\n\r\n[CODE] Add to  ofxiPhoneKeyboard class:\r\n\r\n- (void)disableAutoCorrection;\r\n- (void)enableAutoCorrection;\r\n\r\n//--------------------------------------------------------------\r\nvoid ofxiPhoneKeyboard::disableAutoCorrection()\r\n{\r\n    [keyboard disableAutoCorrection];\r\n}\r\n//--------------------------------------------------------------\r\nvoid ofxiPhoneKeyboard::enableAutoCorrection()\r\n{\r\n    [keyboard enableAutoCorrection];\r\n}\r\n\r\n- (void)disableAutoCorrection\r\n{\r\n    _textField.autocorrectionType = UITextAutocorrectionTypeNo;\r\n}\r\n\r\n- (void)enableAutoCorrection\r\n{\r\n    _textField.autocorrectionType = UITextAutocorrectionTypeYes;\r\n}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/684","comments":0,"milestone":null,"number":684,"html_url":"https://github.com/openframeworks/openFrameworks/issues/684","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"ofxiPhoneKeyboard  should have disable/enable methods for auto correction","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-07-28T12:12:52Z","state":"open","user":{"url":"https://api.github.com/users/mcanet","gravatar_id":"e4d2b0151a843dde7b815b848170d6e9","login":"mcanet","avatar_url":"https://secure.gravatar.com/avatar/e4d2b0151a843dde7b815b848170d6e9?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":308759},"id":1302375,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-24T18:26:54Z","body":"I think there's a bug in ofQuaternion in of007. When i use ofNode's setOrientation() or ofNode setRoll I can rotate my ofNode object around the Z axis. However when I try to obtain the current rotation around the Z axis it will always give a value like -180, 0 or 180.\r\n\r\nRick","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/679","comments":0,"milestone":null,"number":679,"html_url":"https://github.com/openframeworks/openFrameworks/issues/679","assignee":null,"title":"possible bug in getEuler / getOrientation / getRoll","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-24T18:26:54Z","state":"open","user":{"url":"https://api.github.com/users/companje","gravatar_id":"30a7e135fe77636519d74d129c60e156","login":"companje","avatar_url":"https://secure.gravatar.com/avatar/30a7e135fe77636519d74d129c60e156?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":156066},"id":1278252,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T22:13:24Z","body":"I know that with the 007 release ofxDirList addon is deprecated and instead we are encouraged to use ofDirectory to achiece the same kind of functionality. In fact the are so similar that is possible to use them interchangeably. To do that transparently you changed the ofxDirList.h so that it made a typedef to point to ofDirectory (and will probably remove it completely someday).\r\n\r\nThe contents of ofxDirList.h are the following:\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n#pragma once\r\n\r\n#include \"ofFileUtils.h\"\r\n\r\n#warning ofxDirList has been deprecated. \r\n#warning Remove all references to ofxDirList.h and use ofDirectory instead.\r\ntypedef ofDirectory ofxDirList;\r\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nSo far so good. The problem is that  you use the #warning preprocessing directive is non-standard and unsupported on Visual C++ compiler. In fact it gives me an error while building a project that I ported from 0062 version that used ofxDirList. To make it work I had to comment the two #warning lines. \r\n\r\nI suggest that you remove the #warning directives and replace it with something else that works across all compilers. I know that the #warning directive works on GCC and MinGW but not on VC++ so if you are going to support all those compilers (like you do) you better have all of your code working across all of them.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/676","comments":2,"milestone":null,"number":676,"html_url":"https://github.com/openframeworks/openFrameworks/issues/676","assignee":null,"title":"ofxDirList deprecated #warning directive preprocessor Visual Studio 2010","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-23T01:19:54Z","state":"open","user":{"url":"https://api.github.com/users/petersaints","gravatar_id":"03848790c2ebb8e5edbe130e8ce76f1d","login":"petersaints","avatar_url":"https://secure.gravatar.com/avatar/03848790c2ebb8e5edbe130e8ce76f1d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157810},"id":1273716,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-21T11:29:24Z","body":"changed this in dirListExample\r\n\r\n    ofFile testfile;\r\n\t// you can now iterate through the files and load them into the ofImage vector\r\n\tfor(int i = 0; i < (int)dir.size(); i++){\r\n\t\timages[i].loadImage(dir.getPath(i));\r\n\t\ttestfile.open(dir.getPath(i));\r\n\t\tcout << testfile.isFile() << endl; //THIS LINE SEGFAULTS ON WIN7\r\n        testfile.close();\r\n\t}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/671","comments":0,"milestone":null,"number":671,"html_url":"https://github.com/openframeworks/openFrameworks/issues/671","assignee":null,"title":"isFile() segfaults on win7","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-07-21T11:27:16Z","state":"open","user":{"url":"https://api.github.com/users/benben","gravatar_id":"614a4e493d7c353296519bba720e77c5","login":"benben","avatar_url":"https://secure.gravatar.com/avatar/614a4e493d7c353296519bba720e77c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":124513},"id":1262459,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-21T10:39:29Z","body":"just added output to all events in an emptyExample on windows7 64bit.\r\n\r\nif im clicking, the following output occurs even if the mouse is not moved\r\n\r\n    mousePressed\r\n    mouseReleased\r\n    mouseMoved","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/670","comments":2,"milestone":null,"number":670,"html_url":"https://github.com/openframeworks/openFrameworks/issues/670","assignee":null,"title":"mouseReleased fires mouseMoved too (win7)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-07-21T09:34:52Z","state":"open","user":{"url":"https://api.github.com/users/benben","gravatar_id":"614a4e493d7c353296519bba720e77c5","login":"benben","avatar_url":"https://secure.gravatar.com/avatar/614a4e493d7c353296519bba720e77c5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":124513},"id":1261982,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=9
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4935'), ('content-length', '45016'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=10>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=8>; rel="prev"'), ('etag', '"c403779e3346f56dddb655b8bb57d5ae"'), ('date', 'Tue, 29 May 2012 19:27:18 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-03-09T06:11:12Z","body":"I'm curious why the movieplayer uses AvAsset instead of AvPlayer which seems better suited for OF needs ( seeking / looping etc ) \r\n\r\nhttp://developer.apple.com/library/ios/#documentation/AVFoundation/Reference/AVPlayer_Class/Reference/Reference.html\r\n\r\nhttp://stackoverflow.com/questions/5361145/looping-a-video-with-avfoundation-avplayer\r\n\r\n\r\nI think you can get init a player with an AVAsset:\r\nhttp://developer.apple.com/library/ios/#documentation/AVFoundation/Reference/AVPlayer_Class/Reference/Reference.html%23//apple_ref/occ/instm/AVPlayer/initWithPlayerItem:\r\nhttp://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVPlayerItem_Class/Reference/Reference.html#//apple_ref/occ/instm/AVPlayerItem/initWithAsset:\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/666","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":666,"html_url":"https://github.com/openframeworks/openFrameworks/issues/666","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"iphone video player should use AVPlayer ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/codeblocks+","name":"codeblocks ","color":"cb6efa"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-07-20T20:01:04Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":1258863,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-01-08T04:45:01Z","body":"In some cases, when modifier keys are used, the pressedKeys set will accumulate keys.\r\n\r\nThis happens because \"modifier-up\" messages are not sent in the same way as normal and special keys.\r\n\r\nTo test, watch the size of the pressedKeys:\r\n\r\n    cout << pressedKeys.size() << \" num pressed keys \" << endl;\r\n\r\nPress a modifier key and a normal key -- say ctrl-a.  If the 'a' is lifted first, then the modified-a key int is removed from the pressedKeys set.  If CTRL is released before the 'a', then the non-modified-a key-up int is sent, and it is not erased from the pressedKeys set.  If this is repeated with different modifier+key downs / ups the accumulation occurs.\r\n\r\nUltimately, there needs to be better handling of modifier keys.  Perhaps there is a way to use the modifier masks keep track of modifier keys with a call to glutGetModifiers() in the keyboard_cb and keyboard_up_cb static methods?\r\n\r\nIt looks like progress has been made toward this in ofConstants.h\r\n\r\n\t#define OF_KEY_CTRL\t\t\t0x0200\r\n\t#define OF_KEY_ALT\t\t\t0x0300\r\n\t#define OF_KEY_SHIFT\t\t0x0400\r\n\r\nBut it seems to have stopped there.\r\n\r\nI'm happy to work on this -- any suggestions on a strategy?  Perhaps this is already being addressed of 007?\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/652","comments":5,"milestone":null,"number":652,"html_url":"https://github.com/openframeworks/openFrameworks/issues/652","assignee":null,"title":"ofAppGlutWindow/ofEvents: pressedKeys accumulate in special cases","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-15T18:49:46Z","state":"open","user":{"url":"https://api.github.com/users/bakercp","gravatar_id":"8f6ac7bc0f5c26b87269d442d5339206","login":"bakercp","avatar_url":"https://secure.gravatar.com/avatar/8f6ac7bc0f5c26b87269d442d5339206?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":300484},"id":1231959,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-20T19:04:31Z","body":"If you use those these two together the 3d objects get an unwanted offset\r\n\r\ncode:\r\n\r\n```c++\r\nvoid testApp::draw()\r\n{\r\n    \r\n    cam.begin();\r\n        ofPushMatrix();\r\n            ofSetColor(255,255,255);\r\n            ofBox(200);\r\n        ofPopMatrix();\r\n    cam.end();\r\n    \r\n    \r\n    fbo.begin();\r\n    cam.begin();\r\n        \r\n            ofClear(0);\r\n            ofPushMatrix();\r\n                ofSetColor(0,0,0);\r\n                ofBox(200);\r\n            ofPopMatrix();\r\n        \r\n    cam.end();\r\n    fbo.end();\r\n    \r\n    \r\n    glPushMatrix();\r\n        //ofTranslate(0,6,0);  <--- now i'm using something like this to \"repair\" it\r\n        ofSetColor(255,255,255,255);\r\n        glScalef(1,-1,1);\r\n        fbo.draw(0,- ofGetHeight());\r\n    glPopMatrix();\r\n    \r\n    \r\n   \r\n}\r\n```\r\n\r\nNormally the two boxes should overlap completely, instead it looks like this:\r\n\r\n![screen1](http://i51.tinypic.com/11cfi1l.png)\r\n![screen2](http://i55.tinypic.com/2ewnv5i.png)\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/651","comments":4,"milestone":null,"number":651,"html_url":"https://github.com/openframeworks/openFrameworks/issues/651","assignee":null,"title":"ofFBO + ofCamera = unwanted offset","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2011-07-15T13:21:44Z","state":"open","user":{"url":"https://api.github.com/users/toxin20","gravatar_id":"29a3b85e704ec06a72df8897a726920e","login":"toxin20","avatar_url":"https://secure.gravatar.com/avatar/29a3b85e704ec06a72df8897a726920e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":123776},"id":1230184,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-19T00:31:38Z","body":"\r\nA tiny issue I spotted:\r\n\r\nofQuaternion.cpp, line 14:\r\n\r\n```C++\r\n/// Set the elements of the Quat to represent a rotation of angle\r\n/// (radians) around the axis (x,y,z)\r\nvoid ofQuaternion::makeRotate( float angle, float x, float y, float z ) {\r\n\tangle = ofDegToRad(angle);\r\n```\r\n\r\nof**X**Quaternion::makeRotate used to take radians, only noticed as I was moving some old code over, otherwise I would have just looked at the code in ofQuaternion.cpp to see the angle type. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/646","comments":1,"milestone":null,"number":646,"html_url":"https://github.com/openframeworks/openFrameworks/issues/646","assignee":null,"title":"ofQuaternion::makeRotate takes degrees, used to take radians, documentation says radians","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2011-07-13T15:18:04Z","state":"open","user":{"url":"https://api.github.com/users/andreasmuller","gravatar_id":"210831a04d36f1aa26413ecbdbd4b07c","login":"andreasmuller","avatar_url":"https://secure.gravatar.com/avatar/210831a04d36f1aa26413ecbdbd4b07c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":791114},"id":1216274,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-12T16:05:23Z","body":"^^^^\r\nTried on Mac:\r\nhttps://gist.github.com/1078282","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/645","comments":0,"milestone":null,"number":645,"html_url":"https://github.com/openframeworks/openFrameworks/issues/645","assignee":null,"title":"ofVideoGrabber::listDevices() does not list devices when initGrabber not called","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-12T16:05:23Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":1209436,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-16T04:21:18Z","body":"https://gist.github.com/1077933\r\n\r\nsaving images converted to 8PP using ofImage::setImageType(OF_IMAGE_GRAYSCALE) and then calling saveImage() save blank on windows, but works on OS X\r\n\r\ntraced the issue down to the call to FreeImage_Save(), both seem to be the same. not sure what the problem is\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/643","comments":1,"milestone":null,"number":643,"html_url":"https://github.com/openframeworks/openFrameworks/issues/643","assignee":null,"title":"8 BPP (grayscale) ofImage saves blank on Windows, fine on os x","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-07-12T13:05:25Z","state":"open","user":{"url":"https://api.github.com/users/obviousjim","gravatar_id":"3bcf955bca297a223e9daa1f997bfad5","login":"obviousjim","avatar_url":"https://secure.gravatar.com/avatar/3bcf955bca297a223e9daa1f997bfad5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":321434},"id":1208289,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:42:09Z","body":"Forum issue: http://forum.openframeworks.cc/index.php/topic,6316.new.html#new\r\n\r\nThis may be related to using CADisplayLink. When openGL seems to be pushed a bit, touch events seem to drop or are delayed. When using NSTimer in ofxiPhoneAppDelegate instead of CADisplayLink this does not occur.\r\n\r\nIt may be beneficial for developers to set whether they'd like to use CADisplayLink (if available) vs NSTimer for rendering or not.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/642","comments":0,"milestone":null,"number":642,"html_url":"https://github.com/openframeworks/openFrameworks/issues/642","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"ofxiPhone: Possible delayed input/touch event issue ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-12T02:46:23Z","state":"open","user":{"url":"https://api.github.com/users/cerupcat","gravatar_id":"91b3d4bfbbb99d840b096cde3af877bf","login":"cerupcat","avatar_url":"https://secure.gravatar.com/avatar/91b3d4bfbbb99d840b096cde3af877bf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":204151},"id":1205789,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-12T13:03:00Z","body":"See title and test code:\r\nhttps://gist.github.com/952bd35591dc0cb23f61","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/631","comments":1,"milestone":null,"number":631,"html_url":"https://github.com/openframeworks/openFrameworks/issues/631","assignee":null,"title":"ofImage::saveImage() - saving from png to gif creates grayscale image","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-07T21:37:47Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":1185346,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T03:48:47Z","body":"Tried to load a text file over https but I got this message:\r\n\r\n``<html><head><title>400 The plain HTTP request was sent to HTTPS port</title></head>\r\n<body bgcolor=\"white\"><center><h1>400 Bad Request</h1></center><center>The plain HTTP request was sent to HTTPS port</center><hr><center>nginx/1.0.4</center></body></html>``\r\n\r\n\r\n\r\nUsing this code\r\n``ofHttpResponse resp = ofLoadURL(\"https://raw.github.com/openframeworks/openFrameworks/6af1dc980f6d93d84b3bf8fdc1b6435697be9ed9/readme.txt\");``\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/623","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":623,"html_url":"https://github.com/openframeworks/openFrameworks/issues/623","assignee":null,"title":"ofLoadURL() does not work with httpS","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-06T18:12:06Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":1175654,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-07-06T18:09:03Z","body":"Setting the position of an ofEasyCam instance in ofSetup() does not work.  What does work in testApp::setup() is calling ofEasyCam::setDistance().  When calling ofEasyCam::setPosition() in for example testApp::draw() does work.\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/618","comments":0,"milestone":null,"number":618,"html_url":"https://github.com/openframeworks/openFrameworks/issues/618","assignee":null,"title":"call ofEasyCam::setPosition in testApp::setup() is forgotten","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-07-05T18:23:34Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":1169032,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-06-27T18:30:26Z","body":"Currently there doesn't appear to be any way to do this other than by hand\r\nAlso it would be highly useful ofMatrix3x3 in general had equivalent accessors to ofMatrix4x4","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/612","comments":0,"milestone":null,"number":612,"html_url":"https://github.com/openframeworks/openFrameworks/issues/612","assignee":null,"title":"need conversion ofMatrix3x3<->ofMatrix4x4","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-06-27T18:30:26Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":1124068,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-10-04T10:10:06Z","body":"Need some way of applying current ofMatrix4x4 to the scene without going down to gl calls","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/605","comments":4,"milestone":null,"number":605,"html_url":"https://github.com/openframeworks/openFrameworks/issues/605","assignee":null,"title":"function wrapping glMultMatrixf in ofMatrix4x4","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-06-16T13:13:35Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":328294},"id":1067300,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:42:59Z","body":"Here's a function that will do it...\r\n\r\nvoid ofxiPhoneLaunchBrowser(string url) {\r\n\t[[UIApplication sharedApplication] openURL:[NSURL URLWithString:ofxStringToNSString(url)]];\r\n}","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/603","comments":0,"milestone":null,"number":603,"html_url":"https://github.com/openframeworks/openFrameworks/issues/603","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"ofLaunchBrowser() for iPhone not implemented","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-06-13T13:03:15Z","state":"open","user":{"url":"https://api.github.com/users/mazbox","gravatar_id":"3cfb19dbce7926933555ac9755a86ca8","login":"mazbox","avatar_url":"https://secure.gravatar.com/avatar/3cfb19dbce7926933555ac9755a86ca8?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":194121},"id":1048971,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T21:38:43Z","body":"OF: OF_LOG_ERROR: ofxNetwork:/addons/ofxNetwork/src/ofxTCPManager.cpp: 157 ECONNREFUSED: the server has actively refused to establish the connection\r\n\r\nThis error happens in every use of ofxTCPClient.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/599","comments":1,"milestone":null,"number":599,"html_url":"https://github.com/openframeworks/openFrameworks/issues/599","assignee":null,"title":"TCPManager Consistent Error","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-06-08T23:02:28Z","state":"open","user":{"url":"https://api.github.com/users/tomorrowevening","gravatar_id":"f92a8e912b59171abde0354e2f212c12","login":"tomorrowevening","avatar_url":"https://secure.gravatar.com/avatar/f92a8e912b59171abde0354e2f212c12?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":626143},"id":1027184,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-06-01T13:56:17Z","body":"http://forum.openframeworks.cc/index.php/topic,6370.0.html\r\n\r\nwhen they are not power of 2 perhaps?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/591","comments":0,"milestone":null,"number":591,"html_url":"https://github.com/openframeworks/openFrameworks/issues/591","assignee":null,"title":"problem with ofImage resize","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-06-01T13:56:17Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":984564,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-05-31T12:33:31Z","body":"### ofxNetworkUtils.h - issue 1\n\nThe default message should print out `err` instead of `errno`\n\n```\n\tdefault:\n\t\tofLog(OF_LOG_ERROR,\"ofxNetwork:\"+file+\": \" +line+\" unknown error: \" + ofToString(errno) + \" see errno.h for description of the error\");\n\t\tbreak;\n```\n\nto:\n\n```\n\tdefault:\n\t\tofLog(OF_LOG_ERROR,\"ofxNetwork:\"+file+\": \" +line+\" unknown error: \" + ofToString(err) + \" see errno.h for description of the error\");\n\t\tbreak;\n```\n\nSince errno would not be set on windows machines.\n\n\n\n\n### ofxTCPManager.cpp - issue 2\n\nIn the `Receive` method of the `ofxTCPManager`  the function will always return -1 when checking for data and there is no new data and the TCPServer has been set to non-blocking.\n\nAfter changing the code in issue 1 mentioned above i got:\n\n`ofxNetwork:addons\\ofxNetwork\\src\\ofxTCPManager.cpp: 304 unknown error: 10035 see errno.h for description of the error`\n\ninstead of `error: 0` when `errno`was used.\n\nWhich on windows is the [`WSAEWOULDBLOCK`](http://msdn.microsoft.com/en-us/library/ms740668.aspx) or `EWOULDBLOCK` as defined in  `ofxNetworkUtils`\n\nSo  someplace in the code there should be a mechanism to check if the code is client is non-blocking and ignore the error.\nThis is `windows` only but still could be as an additional parameter to the `Receive` method. Or add it as an `switch case` for the `EWOULDBLOCK` in the `ofxNetworkUtils` and ignore the ouput and comment it.\n\nI just noticed this above when i started usin an application that i was developing on my mac an using it on windows machines this code would appear too often.\n\nSo as stated above my solution is that i added:\n\n```\n        #ifdef TARGET_WIN32 // otherwise EAGAIN & EWOULDBLOCK will create a \"duplicate case value\" on Non windows\n\tcase EWOULDBLOCK: \n\t\t// \tofLog(OF_LOG_VERBOSE,\"ofxNetwork:\"+file+\": \" +line+\" EWOULDBLOCK: perhaps non-blocking\");\n\t\tbreak;\n        #endif\n```\ncode and ignoring the output.\n\n\n\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/590","comments":0,"milestone":null,"number":590,"html_url":"https://github.com/openframeworks/openFrameworks/issues/590","assignee":null,"title":"ofxTCPManager.receive() - EWOULDBLOCK on Windows","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-05-31T11:31:08Z","state":"open","user":{"url":"https://api.github.com/users/cristobal","gravatar_id":"c7f941e0c10696b758ae8792714a6744","login":"cristobal","avatar_url":"https://secure.gravatar.com/avatar/c7f941e0c10696b758ae8792714a6744?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":155505},"id":978212,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-05-31T02:06:22Z","body":"setFromPixels has two forms: one that takes an int channels, another that takes ofImageType.\r\n\r\nsetFromExternalPixels only has one form: it takes an int channels.\r\n\r\nin my opinion, it makes sense to change them both to ofImageType only, because the int channels is susceptible to accidentally passing an ofImageType to it.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/589","comments":0,"milestone":null,"number":589,"html_url":"https://github.com/openframeworks/openFrameworks/issues/589","assignee":null,"title":"setFromPixels vs setFromExternalPixels","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-05-31T02:06:22Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":976610,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T21:54:02Z","body":"ofImage_<T> should be ofBaseImage<Type>, likewise with ofPixels_<T>\n\nin general, X_<T> style classes should be BaseX<Type>\n\ntemplated functions that are just sitting around should also have descriptive template names.\n\nit's important for this to happen before 007, otherwise code will be written against ofImage\\_&lt;T&gt; etc.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/582","comments":5,"milestone":null,"number":582,"html_url":"https://github.com/openframeworks/openFrameworks/issues/582","assignee":null,"title":"templated code needs to be more readable","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-05-23T17:46:28Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":942647,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-31T13:42:28Z","body":"just need to add the line\r\n\r\n\t\t\tcase 230400: cfsetispeed(&options,B230400);\r\n\t\t\t\tcfsetospeed(&options,B230400);\r\n\t\t\t\tbreak;\r\n\r\nin the setup function after\r\ncase 115200: cfsetispeed(&options,B115200);\r\n\t\t\t\t\t\tcfsetospeed(&options,B115200);\r\n\t\t\t\tbreak;\r\n\r\ntested with our device that runs at that baud rate, seems to work a-OK so far.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/577","comments":2,"milestone":null,"number":577,"html_url":"https://github.com/openframeworks/openFrameworks/issues/577","assignee":null,"title":"ofSerial: add 230400 speed","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-05-20T16:16:52Z","state":"open","user":{"url":"https://api.github.com/users/labatrockwell","gravatar_id":"e6d243a56cd069a225f56f4a388e8838","login":"labatrockwell","avatar_url":"https://secure.gravatar.com/avatar/e6d243a56cd069a225f56f4a388e8838?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-orgs.png","id":313943},"id":932655,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-25T19:59:00Z","body":"This is a generic Linux build of oF for ARM Cortex A8/9 devices (Beagleboard, Pandaboard, Gumstix, Tegra 250, IGEPv2, ...) with built-in NEON optimizations in the included libs and makefiles (via gcc -O3 -march=armv7-a -mtune=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/576","comments":17,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/8","closed_issues":0,"number":8,"title":"0080 Release","due_on":"2013-01-01T08:00:00Z","open_issues":3,"created_at":"2012-02-25T01:34:28Z","state":"open","description":"","id":88731},"number":576,"html_url":"https://github.com/openframeworks/openFrameworks/issues/576","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"Generic armv7l Linux build for Beagleboard &co. ","labels":[],"closed_at":null,"created_at":"2011-05-19T14:49:57Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"id":927378,"pull_request":{"diff_url":"https://github.com/openframeworks/openFrameworks/pull/576.diff","html_url":"https://github.com/openframeworks/openFrameworks/pull/576","patch_url":"https://github.com/openframeworks/openFrameworks/pull/576.patch"}},{"updated_at":"2011-05-13T15:28:46Z","body":"http://forum.openframeworks.cc/index.php?topic=6201.0","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/572","comments":0,"milestone":null,"number":572,"html_url":"https://github.com/openframeworks/openFrameworks/issues/572","assignee":null,"title":"ofToggleFullscreen doesn't set width and height correctly","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS","color":"2a8296"}],"closed_at":null,"created_at":"2011-05-13T15:28:46Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":895515,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-02T15:47:14Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/569","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":569,"html_url":"https://github.com/openframeworks/openFrameworks/issues/569","assignee":null,"title":"saving an image with the image quality flag set to high or best causes empty jpegs. ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-05-11T13:53:42Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":883385,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T03:48:47Z","body":"Currently using an FBO with an ofCamera is really tricky, as both setup their own viewing matrix and viewport. \r\n\r\nDoes it make sense to have ofFbo use an ofCamera internally?\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/568","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":568,"html_url":"https://github.com/openframeworks/openFrameworks/issues/568","assignee":null,"title":"ofFbo and ofCamera do not play well together.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-05-11T13:52:46Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":883380,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-15T18:31:30Z","body":"Greetings,\r\n\r\nI have downloaded the latest master of Openframeworks b4397c1 and I have tried to compile the AllAddons example (just to check if everything was well installed).\r\n\r\nThe ofxSynth library just won't compile (using either GCC or LLVM, Xcode 3 or Xcode4), be it in the allAddons or in it's own examples, here is the error log :\r\n\r\nUndefined symbols for architecture i386:\r\n  \"typeinfo for ofxSoundEffect\", referenced from:\r\n      typeinfo for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"non-virtual thunk to ofxSoundEffect::setSampleRate(int)\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundBuffer::ofxSoundBuffer()\", referenced from:\r\n      ofxSoundSink::ofxSoundSink()in ofxSynth.o\r\n  \"vtable for ofxSoundEffect\", referenced from:\r\n      ofxSoundEffect::~ofxSoundEffect()in ofxSynthDelayLine.o\r\n      ofxSoundEffect::~ofxSoundEffect()in ofxSynthDelayLine.o\r\n  \"vtable for ofxSoundSink\", referenced from:\r\n      ofxSoundSink::~ofxSoundSink()in ofxSynthDelayLine.o\r\n      ofxSoundSink::~ofxSoundSink()in ofxSynthDelayLine.o\r\n  \"virtual thunk to ofxSoundSink::getInputs()\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"typeinfo for ofxSoundSink\", referenced from:\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundSink::setSampleRate(int)\", referenced from:\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundSink::getInputs()\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundSink::addInputFrom(ofxSoundSource*)\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"VTT for ofxSoundEffect\", referenced from:\r\n      ofxSoundEffect::~ofxSoundEffect()in ofxSynthDelayLine.o\r\n      ofxSoundEffect::~ofxSoundEffect()in ofxSynthDelayLine.o\r\n  \"ofxSoundEffect::setSampleRate(int)\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundSink::audioIn(float*, int, int, unsigned long long)\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundSink-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundEffect::audioOut(float*, int, int, unsigned long long)\", referenced from:\r\n      vtable for ofxSynthFilterin ofxSynthFilter.o\r\n      construction vtable for ofxSoundEffect-in-ofxSynthFilterin ofxSynthFilter.o\r\n  \"ofxSoundBuffer::~ofxSoundBuffer()\", referenced from:\r\n      ofxSoundSink::~ofxSoundSink()in main.o\r\n      ofxSoundSink::~ofxSoundSink()in ofxSynthDelayLine.o\r\n      ofxSoundSink::~ofxSoundSink()in ofxSynthDelayLine.o\r\nld: symbol(s) not found for architecture i386\r\ncollect2: ld returned 1 exit status\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/566","comments":3,"milestone":null,"number":566,"html_url":"https://github.com/openframeworks/openFrameworks/issues/566","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"ofxSynth won't compile","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-05-07T12:25:01Z","state":"open","user":{"url":"https://api.github.com/users/benoitespinola","gravatar_id":"d08687285addcdde144d4eceb4cfa78e","login":"benoitespinola","avatar_url":"https://secure.gravatar.com/avatar/d08687285addcdde144d4eceb4cfa78e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":720460},"id":862321,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-10T04:48:58Z","body":"I'm fixing it using \r\n_textField.transform = CGAffineTransformMakeRotation(M_PI*1.5f);\r\nin - (void) setFrame: (CGRect) rect\r\nto fix it now.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/565","comments":1,"milestone":null,"number":565,"html_url":"https://github.com/openframeworks/openFrameworks/issues/565","assignee":{"url":"https://api.github.com/users/julapy","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":331382},"title":"Textfield in ofxiPhoneKeyboard upside down in landscape","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-05-05T14:20:42Z","state":"open","user":{"url":"https://api.github.com/users/labatrockwell","gravatar_id":"e6d243a56cd069a225f56f4a388e8838","login":"labatrockwell","avatar_url":"https://secure.gravatar.com/avatar/e6d243a56cd069a225f56f4a388e8838?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-orgs.png","id":313943},"id":853551,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=10
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4934'), ('content-length', '43807'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=11>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=9>; rel="prev"'), ('etag', '"78e9c565cba926f6a72fa2b7dd021b78"'), ('date', 'Tue, 29 May 2012 19:27:19 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2011-12-03T21:20:01Z","body":"Does anybody know the status of this?\r\nI would like to help but I'm not sure where to start. Is the `iphone-dev-0061` the branch to work on this?\r\nI just want to know what's been done or whether there are plans in the works.\r\n\r\nI have posted this in the forum but have not received any response.\r\nhttp://forum.openframeworks.cc/index.php/topic,4089.msg29156.html#msg29156","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/564","comments":1,"milestone":null,"number":564,"html_url":"https://github.com/openframeworks/openFrameworks/issues/564","assignee":null,"title":"ofxShader for iOS","labels":[],"closed_at":null,"created_at":"2011-05-04T18:35:58Z","state":"open","user":{"url":"https://api.github.com/users/chrisirhc","gravatar_id":"22d0038769b1786fcdc0983bdb2e4033","login":"chrisirhc","avatar_url":"https://secure.gravatar.com/avatar/22d0038769b1786fcdc0983bdb2e4033?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":132584},"id":850096,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-12T08:58:12Z","body":"it's compiling now but doesn't work in openGL ES.\r\n\r\nalso take a look at setupShadow generating depthBuffer as texture, when it's released as a renderbuffer","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/560","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":560,"html_url":"https://github.com/openframeworks/openFrameworks/issues/560","assignee":null,"title":"fix ofFbo for openGL ES","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/android","name":"android","color":"2bc4ad"}],"closed_at":null,"created_at":"2011-04-30T17:21:39Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":833772,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-26T00:37:56Z","body":"nothing fancy, but I have an implementation of ofxCvHaarFinder that draws, and it's useful for debugging.  something like:\n\n``` c++\n   void ofxCvHaarFinder::draw( float x, float y ) {\n\t\t// ofPushStyle(); ?\n\t\tofEnableAlphaBlending();\n\t\tofSetColor( 255,0,200,100 );\n\t\tglPushMatrix();\n\t\t\n\t\tglTranslatef( x, y, 0.0 );\n\t\t\n\t\tofNoFill();\n\t\tfor( int i=0; i<blobs.size(); i++ ) {\n\t\t\tofRect( blobs[i].boundingRect.x, blobs[i].boundingRect.y, \n\t\t\t\t   blobs[i].boundingRect.width, blobs[i].boundingRect.height );\n\t\t}\n\t\t\n\t\tglPopMatrix();\n\t\t//  ofPopStyle();\n\t}\n\n```","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/555","comments":0,"milestone":null,"number":555,"html_url":"https://github.com/openframeworks/openFrameworks/issues/555","assignee":null,"title":"ofxOpenCv -- ofxCvHaarFinder should have a draw function","labels":[],"closed_at":null,"created_at":"2011-04-26T00:36:47Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":812623,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-22T11:11:26Z","body":"^_^ would be sweet if the application is opened in the center of the screen by default.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/549","comments":0,"milestone":null,"number":549,"html_url":"https://github.com/openframeworks/openFrameworks/issues/549","assignee":null,"title":"Open application centered on screen?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-22T11:11:26Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":802074,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:11:07Z","body":"between line 721 and 765\r\n\r\n/* Special folders */\r\nenum {\r\n    kAppleExtrasFolderIcon      = FOUR_CHAR_CODE('aex�'),\r\n    kAppleMenuFolderIcon        = FOUR_CHAR_CODE('amnu'),\r\n    kApplicationsFolderIcon     = FOUR_CHAR_CODE('apps'),\r\n    kApplicationSupportFolderIcon = FOUR_CHAR_CODE('asup'),\r\n    kAssistantsFolderIcon       = FOUR_CHAR_CODE('ast�'),\r\n    kContextualMenuItemsFolderIcon = FOUR_CHAR_CODE('cmnu'),\r\n    kControlPanelDisabledFolderIcon = FOUR_CHAR_CODE('ctrD'),\r\n    kControlPanelFolderIcon     = FOUR_CHAR_CODE('ctrl'),\r\n    kControlStripModulesFolderIcon = FOUR_CHAR_CODE('sdv�'),\r\n    kDocumentsFolderIcon        = FOUR_CHAR_CODE('docs'),\r\n    kExtensionsDisabledFolderIcon = FOUR_CHAR_CODE('extD'),\r\n    kExtensionsFolderIcon       = FOUR_CHAR_CODE('extn'),\r\n    kFavoritesFolderIcon        = FOUR_CHAR_CODE('favs'),\r\n    kFontsFolderIcon            = FOUR_CHAR_CODE('font'),\r\n    kHelpFolderIcon             = FOUR_CHAR_CODE('�hlp'),\r\n    kInternetFolderIcon         = FOUR_CHAR_CODE('int�'),\r\n    kInternetPlugInFolderIcon   = FOUR_CHAR_CODE('�net'),\r\n    kLocalesFolderIcon          = FOUR_CHAR_CODE('�loc'),\r\n    kMacOSReadMeFolderIcon      = FOUR_CHAR_CODE('mor�'),\r\n    kPreferencesFolderIcon      = FOUR_CHAR_CODE('prf�'),\r\n    kPrinterDescriptionFolderIcon = FOUR_CHAR_CODE('ppdf'),\r\n    kPrinterDriverFolderIcon    = FOUR_CHAR_CODE('�prd'),\r\n    kPrintMonitorFolderIcon     = FOUR_CHAR_CODE('prnt'),\r\n    kRecentApplicationsFolderIcon = FOUR_CHAR_CODE('rapp'),\r\n    kRecentDocumentsFolderIcon  = FOUR_CHAR_CODE('rdoc'),\r\n    kRecentServersFolderIcon    = FOUR_CHAR_CODE('rsrv'),\r\n    kScriptingAdditionsFolderIcon = FOUR_CHAR_CODE('�scr'),\r\n    kSharedLibrariesFolderIcon  = FOUR_CHAR_CODE('�lib'),\r\n    kScriptsFolderIcon          = FOUR_CHAR_CODE('scr�'),\r\n    kShutdownItemsDisabledFolderIcon = FOUR_CHAR_CODE('shdD'),\r\n    kShutdownItemsFolderIcon    = FOUR_CHAR_CODE('shdf'),\r\n    kSpeakableItemsFolder       = FOUR_CHAR_CODE('spki'),\r\n    kStartupItemsDisabledFolderIcon = FOUR_CHAR_CODE('strD'),\r\n    kStartupItemsFolderIcon     = FOUR_CHAR_CODE('strt'),\r\n    kSystemExtensionDisabledFolderIcon = FOUR_CHAR_CODE('macD'),\r\n    kSystemFolderIcon           = FOUR_CHAR_CODE('macs'),\r\n    kTextEncodingsFolderIcon    = FOUR_CHAR_CODE('�tex'),\r\n    kAppearanceFolderIcon       = FOUR_CHAR_CODE('appr'),\r\n    kUtilitiesFolderIcon        = FOUR_CHAR_CODE('uti�'),\r\n    kVoicesFolderIcon           = FOUR_CHAR_CODE('fvoc'),\r\n    kColorSyncFolderIcon        = FOUR_CHAR_CODE('prof'),\r\n    kInternetSearchSitesFolderIcon = FOUR_CHAR_CODE('issf'),\r\n    kUsersFolderIcon            = FOUR_CHAR_CODE('usr�')\r\n};\r\n\r\nshould be:\r\n\r\nenum {\r\n    kAppleExtrasFolderIcon      = FOUR_CHAR_CODE('aex'),\r\n    kAppleMenuFolderIcon        = FOUR_CHAR_CODE('amnu'),\r\n    kApplicationsFolderIcon     = FOUR_CHAR_CODE('apps'),\r\n    kApplicationSupportFolderIcon = FOUR_CHAR_CODE('asup'),\r\n    kAssistantsFolderIcon       = FOUR_CHAR_CODE('ast'),\r\n    kContextualMenuItemsFolderIcon = FOUR_CHAR_CODE('cmnu'),\r\n    kControlPanelDisabledFolderIcon = FOUR_CHAR_CODE('ctrD'),\r\n    kControlPanelFolderIcon     = FOUR_CHAR_CODE('ctrl'),\r\n    kControlStripModulesFolderIcon = FOUR_CHAR_CODE('sdv'),\r\n    kDocumentsFolderIcon        = FOUR_CHAR_CODE('docs'),\r\n    kExtensionsDisabledFolderIcon = FOUR_CHAR_CODE('extD'),\r\n    kExtensionsFolderIcon       = FOUR_CHAR_CODE('extn'),\r\n    kFavoritesFolderIcon        = FOUR_CHAR_CODE('favs'),\r\n    kFontsFolderIcon            = FOUR_CHAR_CODE('font'),\r\n    kHelpFolderIcon             = FOUR_CHAR_CODE('hlp'),\r\n    kInternetFolderIcon         = FOUR_CHAR_CODE('int'),\r\n    kInternetPlugInFolderIcon   = FOUR_CHAR_CODE('net'),\r\n    kLocalesFolderIcon          = FOUR_CHAR_CODE('loc'),\r\n    kMacOSReadMeFolderIcon      = FOUR_CHAR_CODE('mor'),\r\n    kPreferencesFolderIcon      = FOUR_CHAR_CODE('prf'),\r\n    kPrinterDescriptionFolderIcon = FOUR_CHAR_CODE('ppdf'),\r\n    kPrinterDriverFolderIcon    = FOUR_CHAR_CODE('prd'),\r\n    kPrintMonitorFolderIcon     = FOUR_CHAR_CODE('prnt'),\r\n    kRecentApplicationsFolderIcon = FOUR_CHAR_CODE('rapp'),\r\n    kRecentDocumentsFolderIcon  = FOUR_CHAR_CODE('rdoc'),\r\n    kRecentServersFolderIcon    = FOUR_CHAR_CODE('rsrv'),\r\n    kScriptingAdditionsFolderIcon = FOUR_CHAR_CODE('scr'),\r\n    kSharedLibrariesFolderIcon  = FOUR_CHAR_CODE('lib'),\r\n    kScriptsFolderIcon          = FOUR_CHAR_CODE('scr'),\r\n    kShutdownItemsDisabledFolderIcon = FOUR_CHAR_CODE('shdD'),\r\n    kShutdownItemsFolderIcon    = FOUR_CHAR_CODE('shdf'),\r\n    kSpeakableItemsFolder       = FOUR_CHAR_CODE('spki'),\r\n    kStartupItemsDisabledFolderIcon = FOUR_CHAR_CODE('strD'),\r\n    kStartupItemsFolderIcon     = FOUR_CHAR_CODE('strt'),\r\n    kSystemExtensionDisabledFolderIcon = FOUR_CHAR_CODE('macD'),\r\n    kSystemFolderIcon           = FOUR_CHAR_CODE('macs'),\r\n    kTextEncodingsFolderIcon    = FOUR_CHAR_CODE('tex'),\r\n    kAppearanceFolderIcon       = FOUR_CHAR_CODE('appr'),\r\n    kUtilitiesFolderIcon        = FOUR_CHAR_CODE('uti'),\r\n    kVoicesFolderIcon           = FOUR_CHAR_CODE('fvoc'),\r\n    kColorSyncFolderIcon        = FOUR_CHAR_CODE('prof'),\r\n    kInternetSearchSitesFolderIcon = FOUR_CHAR_CODE('issf'),\r\n    kUsersFolderIcon            = FOUR_CHAR_CODE('usr')\r\n};","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/548","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":548,"html_url":"https://github.com/openframeworks/openFrameworks/issues/548","assignee":null,"title":"Corrupted file: /libs/quicktime/include/Icons.h","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/critical","name":"critical","color":"ff0000"}],"closed_at":null,"created_at":"2011-04-20T23:05:39Z","state":"open","user":{"url":"https://api.github.com/users/PatrickCheng","gravatar_id":"d477a667b70f59244113a61d5ed7527f","login":"PatrickCheng","avatar_url":"https://secure.gravatar.com/avatar/d477a667b70f59244113a61d5ed7527f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":219038},"id":796591,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-11-06T14:40:46Z","body":"ofDirectory::listDir() really needs to call getPathForDirectory() in the case that someone has forgotten their trailing slash.\r\n\r\nthe direction of the slash is system dependent, however. poco has a good solution to this that i've wrapped with getPathForDirectory(). personally, i think addTrailingSlash() and addLeadingSlash() are dangerous and should be completely removed.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/545","comments":2,"milestone":null,"number":545,"html_url":"https://github.com/openframeworks/openFrameworks/issues/545","assignee":null,"title":"ofDirectory regression: does not add trailing slash to paths","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-04-19T17:49:33Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":789889,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-16T13:39:04Z","body":"Hello I've just noticed that video.setPosition() function is not much usable more than once at a time, probably because it examines the file for getTotalNumFrames every time, which is expensive. \r\nWhat about some kind of lookup table to store TotalFrames for each video?\r\nAnyway, this is not an important suggestion because it can be done easily with video.setFrame() and video.getTotalNumFrames()","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/541","comments":0,"milestone":null,"number":541,"html_url":"https://github.com/openframeworks/openFrameworks/issues/541","assignee":null,"title":"Suggestion: video.setPosition() performance","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-16T13:39:04Z","state":"open","user":{"url":"https://api.github.com/users/dimitre","gravatar_id":"2510c33845ef9568d7d753be5de0f96a","login":"dimitre","avatar_url":"https://secure.gravatar.com/avatar/2510c33845ef9568d7d753be5de0f96a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":58289},"id":778216,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-11T19:29:28Z","body":"Let setFromPixels return boolean if everything went well and add a check if it's allocated. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/534","comments":0,"milestone":null,"number":534,"html_url":"https://github.com/openframeworks/openFrameworks/issues/534","assignee":null,"title":"ofxCvColorImage.setFromPixels should allocate + return boolean","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-04-11T19:29:28Z","state":"open","user":{"url":"https://api.github.com/users/roxlu","gravatar_id":"a3e45d93c2d24b6ae8bbef0453065e45","login":"roxlu","avatar_url":"https://secure.gravatar.com/avatar/a3e45d93c2d24b6ae8bbef0453065e45?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":358809},"id":755811,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-11T16:15:02Z","body":"it would be good to have an option for drawing normals of an OF mesh, for debugging purposes, etc.  It could be a debug draw mode, like drawWireFrame(), ie: \n\ndrawNormals(float scaleAmount = 1.0);\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/533","comments":0,"milestone":null,"number":533,"html_url":"https://github.com/openframeworks/openFrameworks/issues/533","assignee":null,"title":"ofMesh - draw normals","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-11T16:14:52Z","state":"open","user":{"url":"https://api.github.com/users/yynZach","gravatar_id":"f43301c58bf19b07cd06befc98f52a9f","login":"yynZach","avatar_url":"https://secure.gravatar.com/avatar/f43301c58bf19b07cd06befc98f52a9f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":716026},"id":754864,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:11:06Z","body":"if ofEasyCam \n\tcamera.setPosition(ofPoint(ofGetWidth()/2, ofGetHeight()/2, 700));\n\nresults in the bottom left corner of the normal OF view appearing at the center of the screen\n\nif its ofCamera:\n\tcamera.setPosition(ofPoint(ofGetWidth()/2, ofGetHeight()/2, 700));\n\nresults in the center of the normal OF View appearing at the center of the screen. \n\nshouldn't these be the same @memo ? \n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/532","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":532,"html_url":"https://github.com/openframeworks/openFrameworks/issues/532","assignee":null,"title":"ofEasyCam setPosition doesn't work as ofCamera's does","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-3D","name":"section-3D","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-04-10T17:24:30Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":750739,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-09T21:38:33Z","body":"ofBox at the moment only does cubes (width/height/depth are equal).  \r\n\r\nvoid ofBox(float x, float y, float z, float size);\r\nvoid ofBox(float x, float y, float size);\r\nvoid ofBox(const ofPoint& position, float size);\r\nvoid ofBox(float size);\r\n\r\nIt would much more useful if it could do non cube sizes as well, such as: \r\n\r\nvoid ofBox(const ofPoint& position, const ofPoint & dimensions);\r\nvoid ofBox(float x, float y, float z, float w, float h, float d);\r\n\r\netc\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/530","comments":0,"milestone":null,"number":530,"html_url":"https://github.com/openframeworks/openFrameworks/issues/530","assignee":null,"title":"ofBox is limited to cubes, we should allow for different box sizes. ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-09T21:38:33Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":748446,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-09T21:24:28Z","body":"\r\nit seems we are missing this in ofShader, which was in an ofxShader before. \r\n \r\nvoid    setUniform (char * name, int length, int count, float *value);\r\n\r\n+ \r\n\r\nalso, I preferred the older setuniform (which used parameter overloading)... much easier to write.  Was there a reason to move to more explicit setUniform() (setUniform1i, etc) functions?\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/529","comments":0,"milestone":null,"number":529,"html_url":"https://github.com/openframeworks/openFrameworks/issues/529","assignee":null,"title":"ofShader setUniform()... missing array and also not sure about the new style. ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-04-09T21:24:28Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":748422,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-09T21:16:36Z","body":"ofShader uses setup:\n\n\n\tbool setup(string shaderName);\n\tbool setup(string vertName, string fragName, string geomName=\"\");\n\t\n\t\nwhere all other OF objects use load (loadMovie, loadFont, loadImage).  it probably should match the core of OF, and how other objects are loading in data. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/528","comments":0,"milestone":null,"number":528,"html_url":"https://github.com/openframeworks/openFrameworks/issues/528","assignee":null,"title":"ofShader load vs setup","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-04-09T21:16:25Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":142897},"id":748409,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T15:47:57Z","body":"this line crashes if a mesh doesn't have indices:\r\n\r\n\t\tofVec3f v = transform(primitive.getVertex(primitive.getIndex(0)));\r\n\r\nits weird as the openGL renderer doesn't need indices. \r\nis there a way to render to cairo without ? or should we do a warning to set auto indices on for the mesh? ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/525","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":525,"html_url":"https://github.com/openframeworks/openFrameworks/issues/525","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"cairo rendering ofMesh crashes if indicies are not set.","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-04-06T18:31:41Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":738910,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T15:48:17Z","body":"Currently even if you use ofSetViewport the cairo page is the same size as the screen. \r\nIt would be great to be able to save pages bigger than your screensize. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/524","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":524,"html_url":"https://github.com/openframeworks/openFrameworks/issues/524","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"cairo renderer - render page bigger than screen size. ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-06T15:31:48Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":738097,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T15:48:32Z","body":"currently with the cairo workflow if I want to save out just one frame on a key press there is no easy way to do this. \r\n\r\nIf I do it via ofSetDefaultRenderer it tries to delete the cairorenderer instead. \r\n\r\nIdeally I would add both renderers but set cairo disabled - then when I want to save a frame I would enable cairo and then disable again. disabling cairo would cause the pdf to be closed and saved to disk. \r\n\r\nalso it would be great to be able to change the cairo save path and type on the fly rather than just have it happening in setup. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/523","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":523,"html_url":"https://github.com/openframeworks/openFrameworks/issues/523","assignee":null,"title":"ofBaseRenders needs an enable() and disable(); ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-04-06T15:29:33Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":738085,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-02T20:56:55Z","body":"ofSetLineWidth seems to restrict max line width in 10 or 12 pixels.\r\nusing latest master in os x here","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/522","comments":0,"milestone":null,"number":522,"html_url":"https://github.com/openframeworks/openFrameworks/issues/522","assignee":null,"title":"ofSetLineWidth, width greater than 10 or 12 pixels","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-04-02T20:56:55Z","state":"open","user":{"url":"https://api.github.com/users/dimitre","gravatar_id":"2510c33845ef9568d7d753be5de0f96a","login":"dimitre","avatar_url":"https://secure.gravatar.com/avatar/2510c33845ef9568d7d753be5de0f96a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":58289},"id":727394,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-09-30T10:56:04Z","body":"the default mode for ofDrawBitmapString should be OF_BITMAPMODE_MODEL_BILLBOARD, otherwise any text drawn in 3d will be rendered differently in >007 than <007. this can be changed in the ofStyle() constructor.\r\n\r\nalso, @elliotwoods it would be great to have a comment next to each of the constants in enum ofDrawBitmapMode explaining what they do.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/520","comments":1,"milestone":null,"number":520,"html_url":"https://github.com/openframeworks/openFrameworks/issues/520","assignee":null,"title":"ofDrawBitmapString default behavior has changed","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-04-01T06:37:16Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":723496,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-03-31T17:49:33Z","body":"it's obvious if you've used opengl directly before, but i would expect something more like:\r\n\r\n\tvoid ofSetTextureInterpolation(ofInterpolationType downscale, ofInterpolationType upscale)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/519","comments":0,"milestone":null,"number":519,"html_url":"https://github.com/openframeworks/openFrameworks/issues/519","assignee":null,"title":"ofSetMinMagFilters() is confusingly named","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-03-31T17:49:33Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":721833,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-17T00:51:48Z","body":"movieGrabberExample => videoGrabberExample\r\nmoviePlayerExample => videoPlayerExample\r\n\r\nthere are probably other examples of this, but this one strikes me as particularly odd. there's probably some historical reason... :)","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/510","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":510,"html_url":"https://github.com/openframeworks/openFrameworks/issues/510","assignee":null,"title":"movieGrabber/PlayerExamples are poorly named","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-03-22T06:47:02Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":693126,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-03-21T01:01:25Z","body":"i accidentally initialized my ofFbo with setupShadow() instead of setup(), and when i said draw() it caused EXC_BAD_ACCESS. draw() calls getTexture(), so maybe the best way to handle this is to put a check inside getTexture() like this:\r\n\r\n\tif(textures.size() == 0) {\r\n\t\tofLog(OF_LOG_ERROR, \"You must call ofFbo::setup() before you can use an FBO\");\r\n\t}\r\n\treturn textures[attachmentPoint];","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/507","comments":0,"milestone":null,"number":507,"html_url":"https://github.com/openframeworks/openFrameworks/issues/507","assignee":null,"title":"ofFbo::draw() causes EXC_BAD_ACCESS when setup() isn't called","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-03-21T01:01:25Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":689769,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-03-20T17:35:05Z","body":"i know the reason for this is because the mappings are OS and mouse dependent, and that it's GLUT slowing us down here, but i think we could at least add a guess like OF_MOUSE_LEFT = 0, OF_MOUSE_MIDDLE= 1, OF_MOUSE_RIGHT = 2, etc.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/503","comments":0,"milestone":null,"number":503,"html_url":"https://github.com/openframeworks/openFrameworks/issues/503","assignee":null,"title":"no OF_MOUSE_LEFT or OF_MOUSE_RIGHT","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-03-20T17:35:05Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":688955,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T15:48:41Z","body":"you need to use bUse3D flag but even then graphics aren't saved to pdf as they look on screen. \r\ntry the OF_ORIENTATION_90_LEFT or 90_RIGHT to reproduce. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/502","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":502,"html_url":"https://github.com/openframeworks/openFrameworks/issues/502","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"ofSetOrientation doesn't work for cairo","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-03-18T09:17:36Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":684091,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-03-18T03:56:02Z","body":"it looks like ofGLRenderer::drawString is currently overriding whatever the current blend mode is:\n\n\tglEnable(GL_BLEND);\n\tglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\n\nand then setting it back later.\n\ni'm guessing this is so the empty/alpha part of the bitmap font is drawn.\n\ninstead of using glBlendFunc i would suggest glAlphaFunc... but it looks like as of OpenGL ES 2.0 glAlphaFunc doesn't exist anymore :(\n\nnot sure what to do, but it's really weird to have ofSetColor(255) work, but not ofSetColor(255, 254). e.g.:\n\n\tofBackground(128);\n\tofEnableAlphaBlending();\n\tofSetColor(255, 254);\n\tofDrawBitmapString(\"255, 254\", 10, 20);\n\tofSetColor(255, 255);\n\tofDrawBitmapString(\"255, 255\", 10, 40);\n\tofDisableAlphaBlending();","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/501","comments":0,"milestone":null,"number":501,"html_url":"https://github.com/openframeworks/openFrameworks/issues/501","assignee":null,"title":"ofDrawBitmapString / ofGLRenderer::drawString doesn't work with alpha","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-03-18T03:54:34Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":683732,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-03T10:41:35Z","body":"right now ofImage::getPixelsRef() is always non-const, as well as ofImage::getPixels()","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/500","comments":4,"milestone":null,"number":500,"html_url":"https://github.com/openframeworks/openFrameworks/issues/500","assignee":null,"title":"missing const version of getPixelsRef()","labels":[],"closed_at":null,"created_at":"2011-03-14T19:14:21Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":672608,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=11
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4933'), ('content-length', '40272'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=12>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=10>; rel="prev"'), ('etag', '"b87c61471553096d60e5ff8b292ff704"'), ('date', 'Tue, 29 May 2012 19:27:20 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"milestone":null,"state":"open","user":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"osx movieplayer problem on reloading","html_url":"https://github.com/openframeworks/openFrameworks/issues/495","comments":0,"assignee":null,"updated_at":"2011-03-09T16:17:56Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=7&t=5729&view=unread#unread","number":495,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/495","labels":[{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":659446,"closed_at":null,"created_at":"2011-03-09T16:17:56Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"GLUT 007 hack","html_url":"https://github.com/openframeworks/openFrameworks/issues/491","comments":0,"assignee":null,"updated_at":"2011-03-04T14:44:53Z","body":"it seems that some commented defines are still being preprocessed and making gdb behave weird:\r\n\r\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=4&t=5602&view=unread#unread","number":491,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/491","labels":[{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":646846,"closed_at":null,"created_at":"2011-03-04T14:44:53Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"close corners on basic shapes?","html_url":"https://github.com/openframeworks/openFrameworks/issues/490","comments":0,"assignee":null,"updated_at":"2011-03-03T16:35:17Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=8&t=5678&view=unread#unread\r\n\r\nperhaps use style.linewith? won't work if you use glLineWidth though","number":490,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/490","labels":[{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":643861,"closed_at":null,"created_at":"2011-03-03T16:35:17Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"893ec14dc008e3774afe5841115920d6","url":"https://api.github.com/users/jonbro","login":"jonbro","id":1597,"avatar_url":"https://secure.gravatar.com/avatar/893ec14dc008e3774afe5841115920d6?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofOrientation incompatible with iOS addon","html_url":"https://github.com/openframeworks/openFrameworks/issues/486","comments":0,"assignee":{"gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","url":"https://api.github.com/users/julapy","login":"julapy","id":331382,"avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-10T04:50:03Z","body":"the existing iOS orientation methods are not compatible with the virtual functions that they inherit from. The new virtuals use a ofOrientation enum, and the old functions use ints.\r\n\r\nThis issue was introduced in https://github.com/openframeworks/openFrameworks/commit/38011d54","number":486,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/486","labels":[{"color":"2babad","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":635112,"closed_at":null,"created_at":"2011-02-28T18:14:04Z"},{"milestone":{"state":"open","description":"","title":"0073 Release","due_on":"2012-07-30T07:00:00Z","closed_issues":0,"open_issues":5,"number":6,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/6","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":62090,"created_at":"2011-12-03T15:37:49Z"},"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"grabFrame/idleFrame deprecation","html_url":"https://github.com/openframeworks/openFrameworks/issues/484","comments":12,"assignee":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-04-24T21:04:32Z","body":"it would be nice to start deprecating grabFrame() and idleFrame()  (but maybe wait a couple years to actually remove them) , and change the examples to only use update() and isFrameNew().","number":484,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/484","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":613171,"closed_at":null,"created_at":"2011-02-20T17:56:02Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"ace632f74988653fdbde09225134bfdd","url":"https://api.github.com/users/nemik","login":"nemik","id":62301,"avatar_url":"https://secure.gravatar.com/avatar/ace632f74988653fdbde09225134bfdd?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofVideoPlayer bug when loading subsequent movies after the first one","html_url":"https://github.com/openframeworks/openFrameworks/issues/475","comments":0,"assignee":null,"updated_at":"2011-02-14T17:11:08Z","body":"Within 0062, inside libs/openFrameworks/video/ofVideoPlayer.cpp on line 314 there is a check for height and width not being 0, then \"bDoWeAlreadyHaveAGworld = true;\" is set. However, this prevents other movies after the first from being loaded into that instance of ofVideoPlayer. \r\nI have posted about this in the forum with a fix (to just remove that check) here: http://www.openframeworks.cc/forum/viewtopic.php?f=8&t=5222\r\n\r\nInside the latest code, it is within ofQuickTimePlayer.cpp https://github.com/openframeworks/openFrameworks/blob/master/libs/openFrameworks/video/ofQuickTimePlayer.cpp#L281.","number":475,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/475","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":598097,"closed_at":null,"created_at":"2011-02-14T17:11:08Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","url":"https://api.github.com/users/danomatika","login":"danomatika","id":480637,"avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"object init/load state is not consistently testable","html_url":"https://github.com/openframeworks/openFrameworks/issues/463","comments":0,"assignee":null,"updated_at":"2011-02-07T19:58:23Z","body":"I like to be able to know when an object has successfully initialized or loaded and OF provides for this, for the most part, but in an inconsistent manner ie\r\n\r\nofVideoGrabber::initGrabber() returns a bool, but ofVideoGrabber:bInitialized is protected and therefore not accessible\r\n\r\nwhile\r\n\r\nofTrueTypeFont::bLoadedOk is public, but ofTrueTypeFont::loadFont() returns void\r\n\r\nand\r\n\r\nofImage::loadImage() returns a bool and ofLoadImage::bAllocated() returns a bool, yet ofImage::setFromPixels() returns void\r\n\r\nI propose all loadable/initable objects have loading functions which always return a bool and a testable function (isInited(), isLoaded(), etc) for use after loading. Ideally, the testable functions would always be named the same ie myImage.isLoaded(), myVideoGrabber().isLoaded(), myFont.isLoaded() but of course a general name may not apply to all situations (myVideoGrabber.isInited() probably makes more sense).\r\n\r\nHell, all the load functions could be overloaded ie ofImage::load(string filename), ofImage::load(ofPixels pixels), ofImage::load(unsigned char* pixels) across different objects, ofTrueTypeFont::load(string filename), ofVideoGrabber::load(int w, int h, int deviceID). This consistency looks nice to anal me. but might be confusing to newbies and of course would break old code (unless wrapped for legacy compatibility). It seems a little annoying that every objects seems to have it's own way of checking this and that ...","number":463,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/463","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"37c200","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy"}],"id":581395,"closed_at":null,"created_at":"2011-02-07T19:58:23Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"8022cb5f529975afbc64cc9312008d8c","url":"https://api.github.com/users/nardove","login":"nardove","id":277690,"avatar_url":"https://secure.gravatar.com/avatar/8022cb5f529975afbc64cc9312008d8c?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"OpenCV cvSobel() not working with latest master branch","html_url":"https://github.com/openframeworks/openFrameworks/issues/462","comments":0,"assignee":null,"updated_at":"2011-02-07T15:58:19Z","body":"Hi,\r\n\r\nI get the following error:\r\n// INIT OF ERROR\r\nOF_WARNING: ofBaseVideoPlayer::setPixelFormat not implemented\r\nOpenCV Error: Assertion failed (src.size() == dst.size() && src.channels() == dst.channels() && ((src.depth() == CV_8U && (dst.depth() == CV_16S || dst.depth() == CV_32F)) || (src.depth() == CV_32F && dst.depth() == CV_32F))) in cvSobel, file /Users/theo/Documents/CODE/__OPENFRAMEWORKS/gitOF/__BuildAllLibs/OpenCV-2.2.0/modules/imgproc/src/deriv.cpp, line 347\r\nterminate called after throwing an instance of 'cv::Exception'\r\n  what():  /Users/theo/Documents/CODE/__OPENFRAMEWORKS/gitOF/__BuildAllLibs/OpenCV-2.2.0/modules/imgproc/src/deriv.cpp:347: error: (-215) src.size() == dst.size() && src.channels() == dst.channels() && ((src.depth() == CV_8U && (dst.depth() == CV_16S || dst.depth() == CV_32F)) || (src.depth() == CV_32F && dst.depth() == CV_32F)) in function cvSobel\r\n// END OF ERROR\r\n\r\nWhen I try to call the cvSobel method like this:\r\ncvSobel( grayImage.getCvImage(), grayImage.getCvImage(), 0, 1, 3 );\r\n\r\nThis works fine in 0062.\r\n\r\nCheers\r\n- rS","number":462,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/462","labels":[{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":580717,"closed_at":null,"created_at":"2011-02-07T15:58:19Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"5fa1d3aa502b308b8a3ae814fb88ac04","url":"https://api.github.com/users/danomatika","login":"danomatika","id":480637,"avatar_url":"https://secure.gravatar.com/avatar/5fa1d3aa502b308b8a3ae814fb88ac04?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"get number of input devices and device IDs from ofVideoGrabber","html_url":"https://github.com/openframeworks/openFrameworks/issues/461","comments":0,"assignee":null,"updated_at":"2011-02-07T19:38:51Z","body":"Currently, the ofVideoGrabber can list devices to stdout, but does not return the number of available devices. I propose that either listDevices() return an int or a new function be added, something like getNumDevices() or a getDeviceNums() which returns a vector of valid device ids. This could be related to Arturo's Issue where the devices could be retrieved as strings. I think it makes sense to have these as static functions so that you could open all available cameras into an Array of ofVideoGrabbers by retrieving the number of devices and their ids to open them.","number":461,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/461","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":580556,"closed_at":null,"created_at":"2011-02-07T15:24:21Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"saveImage() and other save operations should create missing directories","html_url":"https://github.com/openframeworks/openFrameworks/issues/460","comments":8,"assignee":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-08T15:56:48Z","body":"i feel like it happens relatively often where i try to save an image (for example) and the parent directories don't exist, so it just fails without really saying anything.\r\n\r\nit would be nice if the dir(s) were just created automatically for you.","number":460,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/460","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":579790,"closed_at":null,"created_at":"2011-02-07T07:52:25Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofTexture::allocate not checking for unnecessary reallocation","html_url":"https://github.com/openframeworks/openFrameworks/issues/454","comments":0,"assignee":null,"updated_at":"2011-02-06T04:26:44Z","body":"ofPixels::allocate is smart in that it doesn't reallocate if you ask for the same size as what's already there. ofTexture should work the same way to avoid unnecessary overhead.","number":454,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/454","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":578069,"closed_at":null,"created_at":"2011-02-06T04:26:44Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofViewport doesn't work with ofSetOrientation","html_url":"https://github.com/openframeworks/openFrameworks/issues/449","comments":0,"assignee":null,"updated_at":"2011-02-02T00:03:09Z","body":"maybe a generic 'transformer' function would handle both this and mouse coordinates, and anything else? ofPoint ofGetAsbolutePosition(x,y)?","number":449,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/449","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":568540,"closed_at":null,"created_at":"2011-02-02T00:03:09Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"no way to get imageType of ofVideoGrabber","html_url":"https://github.com/openframeworks/openFrameworks/issues/446","comments":0,"assignee":null,"updated_at":"2011-01-31T19:26:41Z","body":"ofVideoGrabber has getOFPixels in the .h, but it isn't implemented in the .cpp.\r\n\r\nmaybe this is just a signal that ofPixels stuff needs to be resolved soon... :) i'd be glad to help with this if possible.","number":446,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/446","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":565122,"closed_at":null,"created_at":"2011-01-31T19:26:41Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"e5d92e48e175112e9df112e2418bd528","url":"https://api.github.com/users/kylemcdonald","login":"kylemcdonald","id":157106,"avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofGetElapsedTimeMillis returns an int instead of unsigned long","html_url":"https://github.com/openframeworks/openFrameworks/issues/428","comments":0,"assignee":null,"updated_at":"2011-01-28T06:28:01Z","body":"the start time is stored internally as an unsigned long, but ofGetElapsedTimeMillis returns it as an int. ofGetElapsedTimef also does calculations using time as an int. this means time wraps around every (2^31 - 1) milliseconds in days  = 24.8 days.\r\n\r\nas an unsigned long it would be (2^64 - 1) milliseconds in years = 584 million years :)","number":428,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/428","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"65a300","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize"}],"id":558215,"closed_at":null,"created_at":"2011-01-28T06:28:01Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"4fc88ba881fee72fc4c5de473dc2ebbf","url":"https://api.github.com/users/NickHardeman","login":"NickHardeman","id":142694,"avatar_url":"https://secure.gravatar.com/avatar/4fc88ba881fee72fc4c5de473dc2ebbf?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Check ofShader Texture Wrap Parameters","html_url":"https://github.com/openframeworks/openFrameworks/issues/424","comments":1,"assignee":null,"updated_at":"2011-12-02T21:05:54Z","body":"I thought checking for custom texture wrapping in ofShader might be useful. Not sure how to add a label to this :/\n\n#include ofGraphics.h\n\nvoid setUniformTexture(const char* name, ofBaseHasTexture& img, int textureLocation=-1);\nvoid setUniformTexture(const char* name, ofTexture& img, int textureLocation=-1);\n\nvoid ofShader::setUniformTexture(const char* name, ofTexture& tex, int textureLocation) {\n\tif(bLoaded) {\n\t\t\n\t\tGLfloat wrapS = -1;\n\t\tGLfloat wrapT = -1;\n\t\t\n\t\tif (ofGetUsingCustomTextureWrap()) {\n\t\t\tglGetTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, &wrapS);\n\t\t\tglGetTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, &wrapT);\n\t\t}\n\t\t\n\t\tofTextureData texData = tex.getTextureData();\n\t\tif (textureLocation < 0) textureLocation = texData.textureID;\n\t\tglActiveTexture(GL_TEXTURE0 + textureLocation);\n\t\tglEnable(texData.textureTarget);\n\t\t\n\t\tif(wrapS > 0) glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, wrapS);\n\t\tif(wrapT > 0) glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, wrapT);\n\t\t\n\t\tglBindTexture(texData.textureTarget, texData.textureID);\n\t\tglDisable(texData.textureTarget);\n\t\tsetUniform1i(name, texData.textureID);\n\t\tglActiveTexture(GL_TEXTURE0);\n\t}\n}","number":424,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/424","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":556923,"closed_at":null,"created_at":"2011-01-27T19:43:31Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"problem with reloading movies in osx","html_url":"https://github.com/openframeworks/openFrameworks/issues/423","comments":0,"assignee":null,"updated_at":"2011-01-24T22:34:29Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=8&t=5222","number":423,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/423","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"2a8296","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS"}],"id":548302,"closed_at":null,"created_at":"2011-01-24T22:34:29Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"117a7eecfee7c7f7e954623fd96e1b6e","url":"https://api.github.com/users/snibbe","login":"snibbe","id":581517,"avatar_url":"https://secure.gravatar.com/avatar/117a7eecfee7c7f7e954623fd96e1b6e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Retina display support **that doesn't crash devices!** with backward compatibility to OS 3.0","html_url":"https://github.com/openframeworks/openFrameworks/issues/421","comments":2,"assignee":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2011-12-05T22:03:15Z","body":"Hi guys,\r\n\r\nI posted to the OF forum a solution back in August to support retina display with backward compatibility to pre-OS 4.0 devices:\r\n\r\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=25&t=4185&start=15\r\n\r\nIf it's still outstanding, here's the solution!\r\n\r\nEAGLView.mm, initWithFrame, after the eaglLayer.drawableProperties assignment, add:\r\n\r\n     if ([[UIScreen mainScreen] respondsToSelector:@selector(scale)]) {\r\n        if ([[UIScreen mainScreen] scale] > 1) {\r\n            // code below doesn't work on iPad 3.2 OS and below, but doesn't need to because scale is 1\r\n            [self setContentScaleFactor:[[UIScreen mainScreen] scale]];\r\n        }\r\n     }\r\n\r\nofAppiPhoneWindow.mm, timerLoop, after [ofxiPhoneGetGLView() startRender]; add:\r\n\r\n     int ofwidth = ofGetWidth();\r\n     int ofheight = ofGetHeight();\r\n   \r\n     if ([[UIScreen mainScreen] respondsToSelector:@selector(scale)]) {\r\n        ofwidth *= [[UIScreen mainScreen] scale];\r\n        ofheight *= [[UIScreen mainScreen] scale];\r\n     }\r\n\r\nthen change the glViewport calls:\r\n\r\n\t// this could be taken out and included in ofAppBaseWIndow\r\n\tif(orientation == OFXIPHONE_ORIENTATION_PORTRAIT || orientation == OFXIPHONE_ORIENTATION_UPSIDEDOWN)\r\n\t\tglViewport( 0, 0, ofwidth, ofheight );\r\n\telse\r\n\t\tglViewport( 0, 0, ofheight, ofwidth );","number":421,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/421","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"2a8296","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/macOS","name":"macOS"}],"id":548070,"closed_at":null,"created_at":"2011-01-24T20:52:18Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"something to wrap glMultMatrixf","html_url":"https://github.com/openframeworks/openFrameworks/issues/418","comments":0,"assignee":null,"updated_at":"2011-01-22T15:57:37Z","body":"suggestions:\r\n\r\n    ofPopMatrix(ofMatrix4x4 m)\r\n\r\n    ofMultMatrix(ofMatrix4x4 m)\r\n\r\n    ofMatrix4x4::apply();\r\n    ofMatrix4x4::push();","number":418,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/418","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":543729,"closed_at":null,"created_at":"2011-01-22T15:57:37Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"3D isn't scale invariant in certain parts","html_url":"https://github.com/openframeworks/openFrameworks/issues/417","comments":0,"assignee":null,"updated_at":"2011-01-22T15:24:07Z","body":"e.g.\r\n\r\n void ofEasyCam::reset() {\r\n\ttarget.resetTransform();\r\n\tdistance = 100;\r\n }\r\n\r\nofNode's\r\n\tvirtual void customDraw() {\r\n\t\tofBox(10);\r\n\t\tofDrawAxis(20);\r\n\t}\r\n\r\nsuggestions:\r\n\r\nglobal variable called something like 'base3DScaleFactor = 10.0f' which will affect all of these current constant scale factors","number":417,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/417","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"}],"id":543694,"closed_at":null,"created_at":"2011-01-22T15:24:07Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","url":"https://api.github.com/users/vanderlin","login":"vanderlin","id":149997,"avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"Simulator not working with any examples ","html_url":"https://github.com/openframeworks/openFrameworks/issues/414","comments":3,"assignee":{"gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","url":"https://api.github.com/users/julapy","login":"julapy","id":331382,"avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-10T05:00:35Z","body":"Getting this error after the app launches in simulator mode \r\n\r\nDetected an attempt to call a symbol in system libraries that is not present on the iPhone:\r\n\r\n","number":414,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/414","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"2babad","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":539979,"closed_at":null,"created_at":"2011-01-20T20:17:35Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofCamera::setPan is broken","html_url":"https://github.com/openframeworks/openFrameworks/issues/413","comments":1,"assignee":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-14T15:11:06Z","body":"","number":413,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/413","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"}],"id":539915,"closed_at":null,"created_at":"2011-01-20T20:01:00Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"84c985e7168027f833fd837f3afd9f3e","url":"https://api.github.com/users/arturoc","login":"arturoc","id":48240,"avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"add setMultisampling method to glutWindow","html_url":"https://github.com/openframeworks/openFrameworks/issues/412","comments":0,"assignee":null,"updated_at":"2011-01-20T19:33:30Z","body":"multisampling is now working in linux through the display string option. perhaps we could add a method to easily set it if it also works on win/osx","number":412,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/412","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"622425","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature"},{"color":"244569","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows"}],"id":539845,"closed_at":null,"created_at":"2011-01-20T19:33:30Z"},{"milestone":{"state":"open","description":"","title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"number":5,"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","creator":{"gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","url":"https://api.github.com/users/bilderbuchi","login":"bilderbuchi","id":327442,"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"id":61810,"created_at":"2011-12-02T15:29:48Z"},"state":"open","user":{"gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","url":"https://api.github.com/users/ofTheo","login":"ofTheo","id":144000,"avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofCamera / ofEasyCamera does not work correctly for iPhone / iPad","html_url":"https://github.com/openframeworks/openFrameworks/issues/410","comments":2,"assignee":{"gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","url":"https://api.github.com/users/julapy","login":"julapy","id":331382,"avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"updated_at":"2012-03-14T15:11:06Z","body":"Needs to take into account the rotation and the flipping happening in ofAppiPhoneWindow::timerLoop() \n\nAlso the internal call to ofViewport causes clipping in horizontal mode. \n\nIts currently very difficult to setup the camera correctly for iPad / iPhone - would be great if the default for ofCamera would be to start with the typical OF camera view. ","number":410,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/410","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"2babad","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"}],"id":539744,"closed_at":null,"created_at":"2011-01-20T18:59:10Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","url":"https://api.github.com/users/vanderlin","login":"vanderlin","id":149997,"avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofEnableLighting","html_url":"https://github.com/openframeworks/openFrameworks/issues/406","comments":0,"assignee":null,"updated_at":"2011-01-19T19:39:37Z","body":"ofLight bug not sure what the ios equivalent is..\r\n\r\nglColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE); is not supported in IOS","number":406,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/406","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"}],"id":537416,"closed_at":null,"created_at":"2011-01-19T19:39:36Z"},{"milestone":null,"state":"open","user":{"gravatar_id":"bea30676dca310e7f38269f245214944","url":"https://api.github.com/users/elliotwoods","login":"elliotwoods","id":328294,"avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png"},"title":"ofViewport doesn't match rest of openFrameworks coordinates","html_url":"https://github.com/openframeworks/openFrameworks/issues/405","comments":0,"assignee":null,"updated_at":"2011-01-19T13:24:54Z","body":"Suggest change line 126 of ofGraphics.h to\r\n\tglViewport(x, ofGetHeight() - y - height, width, height);\r\n\r\nto be in line with rest of openFrameworks coordinate system\r\ne.g. ofRect(myRect) matches ofViewport(myRect)\r\n","number":405,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/405","labels":[{"color":"db6a1f","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core"},{"color":"b31d1d","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug"},{"color":"31e03a","url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed"}],"id":536614,"closed_at":null,"created_at":"2011-01-19T13:24:53Z"}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=12
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4932'), ('content-length', '38352'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=13>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=11>; rel="prev"'), ('etag', '"679d499a026b6f6d6a1e20857a7392dc"'), ('date', 'Tue, 29 May 2012 19:27:21 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2011-01-17T23:39:31Z","body":"it should be only in the implementations and queried by the grabber/player in case an implementation doesn't support a format if not the app can crash or have really weird results","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/403","comments":0,"milestone":null,"number":403,"html_url":"https://github.com/openframeworks/openFrameworks/issues/403","assignee":null,"title":"setPixelFormat shouldn't be stored in videoGrabber/Player","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-17T23:39:31Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":532954,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-17T16:37:42Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/400","comments":0,"milestone":null,"number":400,"html_url":"https://github.com/openframeworks/openFrameworks/issues/400","assignee":null,"title":"ofTTF should have setAnchorPercent so you can draw strings centered, right aligned etc","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-typography","name":"section-typography","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-01-17T16:37:42Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":532096,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-03-20T17:33:14Z","body":"every frame, it should update the pmouse value. so if you don't move the mouse, the pmouse value is equal to the current value.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/391","comments":1,"milestone":null,"number":391,"html_url":"https://github.com/openframeworks/openFrameworks/issues/391","assignee":null,"title":"ofGetPreviousMouseX/Y() does not update per frame","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-16T07:21:15Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":529705,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-03-20T17:32:59Z","body":"this is a limitation to glut, but it might be hackable on each system separately.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/389","comments":1,"milestone":null,"number":389,"html_url":"https://github.com/openframeworks/openFrameworks/issues/389","assignee":null,"title":"mouse position doesn't update until mouse is moved","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-16T07:11:53Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":529700,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-03-13T21:10:48Z","body":"following error appears when i try to load an image; commenting out the call to loadImage(\"...\") makes the error go away.\n\n    Undefined symbols:\n      \"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, int)\", \n    referenced from:\n      Poco::Net::HTTPClientSession::proxyAuthenticateImpl(Poco::Net::HTTPRequest&)in PocoNet.a(HTTPClientSession.o)\n      Poco::Net::HTTPClientSession::proxyAuthenticateImpl(Poco::Net::HTTPRequest&)in PocoNet.a(HTTPClientSession.o)\n      Poco::Net::HTTPRequest::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(HTTPRequest.o)\n      Poco::Net::HTTPRequest::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(HTTPRequest.o)\n      Poco::Net::HTTPRequest::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(HTTPRequest.o)\n      Poco::Net::MessageHeader::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(MessageHeader.o)\n      Poco::Net::MessageHeader::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(MessageHeader.o)\n      Poco::Net::HTTPResponse::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(HTTPResponse.o)\n      Poco::Net::HTTPResponse::write(std::basic_ostream<char, std::char_traits<char> >&) constin PocoNet.a(HTTPResponse.o)\n\nld: symbol(s) not found\n</code>\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/387","comments":1,"milestone":null,"number":387,"html_url":"https://github.com/openframeworks/openFrameworks/issues/387","assignee":null,"title":"Linker error when loading image (Poco::Net related?)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-16T05:57:51Z","state":"open","user":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"id":529646,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-15T17:01:08Z","body":"would be nice if it was a float (0-1) and not an int(0-100) for standardization with every other audio thing in the universe aside from quicktime","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/375","comments":2,"milestone":null,"number":375,"html_url":"https://github.com/openframeworks/openFrameworks/issues/375","assignee":{"url":"https://api.github.com/users/damiannz","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144366},"title":"ofVideoPlayer setVolume uses an int","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-video","name":"section-video","color":"DDDDDD"}],"closed_at":null,"created_at":"2011-01-15T23:03:57Z","state":"open","user":{"url":"https://api.github.com/users/stfj","gravatar_id":"b089227a1748a2d70cdfc4ef00b325ad","login":"stfj","avatar_url":"https://secure.gravatar.com/avatar/b089227a1748a2d70cdfc4ef00b325ad?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":177578},"id":529268,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-14T19:30:31Z","body":"glDrawBitmapString doesn't work when GL_LIGHTING is enabled.\r\n\r\nwell, it works... but it is black because it isn't reflecting any light. regardless of the ofSetColor.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/357","comments":0,"milestone":null,"number":357,"html_url":"https://github.com/openframeworks/openFrameworks/issues/357","assignee":null,"title":"glDrawBitmapString vs GL_LIGHTING","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-14T19:30:31Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":527591,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-14T01:33:38Z","body":"some of the core functions only work with 2d points, others only with 3d points, some work with both. but they all take ofPoints.\r\n\r\nit's good for teaching purposes to have ofPoints because you don't have to explain what a 'vector' is, but it's unclear for advanced users whether the functions take 2d or 3d points...","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/347","comments":0,"milestone":null,"number":347,"html_url":"https://github.com/openframeworks/openFrameworks/issues/347","assignee":null,"title":"none of the core functions report how many dimensions they work for","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2011-01-14T01:33:38Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":526094,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-13T16:16:40Z","body":"e.g., GL_DEPTH_TEST.\r\n\r\none of the reasons for this is that it's not obvious to newbies what common features are available.\r\n\r\nanother is that i've seen lots of people write GL_DEPTH instead, which obviously doesn't work.\r\n\r\nthere might be some others too, see processing's hint():\r\n\r\nhttp://processing.org/reference/hint_.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/340","comments":0,"milestone":null,"number":340,"html_url":"https://github.com/openframeworks/openFrameworks/issues/340","assignee":null,"title":"OF wrapper for basic gl functions that aren't intuitive to newbies","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2011-01-13T16:16:40Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":524875,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-05-27T13:35:42Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/337","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":337,"html_url":"https://github.com/openframeworks/openFrameworks/issues/337","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"ofFileDialog allow folder selection ( works on os x ) needs code for win and linux","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-01-13T05:21:53Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":523837,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-14T15:11:06Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/330","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":330,"html_url":"https://github.com/openframeworks/openFrameworks/issues/330","assignee":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"title":"OpenCv 2.2 for Win ( CB and VS )","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/codeblocks+","name":"codeblocks ","color":"cb6efa"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/visual+studio","name":"visual studio","color":"ba4eba"}],"closed_at":null,"created_at":"2011-01-12T19:09:37Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":522789,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-04T14:06:34Z","body":"currentStyle stores everything about the current style, so it can be used rather than things like drawMode for tracking how things should currently be draw.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/325","comments":1,"milestone":null,"number":325,"html_url":"https://github.com/openframeworks/openFrameworks/issues/325","assignee":null,"title":"drawMode can be deprecated, currentStyle.bFill should be used instead","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-12T15:41:11Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":522255,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-12T15:34:48Z","body":"ordering for code completion is a little weird.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/324","comments":0,"milestone":null,"number":324,"html_url":"https://github.com/openframeworks/openFrameworks/issues/324","assignee":null,"title":"ofPushView/ofPopView appear before ofPushMatrix/ofPopMatrix","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"}],"closed_at":null,"created_at":"2011-01-12T15:34:48Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":522231,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-10T22:30:48Z","body":"under the /video directory","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/311","comments":0,"milestone":null,"number":311,"html_url":"https://github.com/openframeworks/openFrameworks/issues/311","assignee":null,"title":"openFrameworksLib has ofQtUtils included twice","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-10T22:30:48Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":518434,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-10T06:36:27Z","body":"better to use aggregation (helper classes/functions) if necessary for common functionality that have implementation in those classes. making them pure abstract classes will avoid problems with multiple inheritance and easier to extend in case of different behaviour","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/305","comments":0,"milestone":null,"number":305,"html_url":"https://github.com/openframeworks/openFrameworks/issues/305","assignee":null,"title":"no implementation in ofBaseTypes","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-10T06:36:27Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":516844,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-05T21:59:59Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/302","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":302,"html_url":"https://github.com/openframeworks/openFrameworks/issues/302","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"Remove Poco CppUnit from all projects ( done on os x )","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-01-10T02:39:28Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":516565,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-25T01:06:09Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/299","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/6","closed_issues":0,"number":6,"title":"0073 Release","due_on":"2012-07-30T07:00:00Z","open_issues":5,"created_at":"2011-12-03T15:37:49Z","state":"open","description":"","id":62090},"number":299,"html_url":"https://github.com/openframeworks/openFrameworks/issues/299","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"freetype-2.4.4 for linux","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2011-01-10T02:38:08Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":516560,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-25T01:06:08Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/298","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/6","closed_issues":0,"number":6,"title":"0073 Release","due_on":"2012-07-30T07:00:00Z","open_issues":5,"created_at":"2011-12-03T15:37:49Z","state":"open","description":"","id":62090},"number":298,"html_url":"https://github.com/openframeworks/openFrameworks/issues/298","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"freetype-2.4.4 for windows","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-01-10T02:37:49Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":516559,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-05T21:59:27Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/296","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","closed_issues":21,"number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":296,"html_url":"https://github.com/openframeworks/openFrameworks/issues/296","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"FreeImage 3141 build for windows","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"}],"closed_at":null,"created_at":"2011-01-10T02:36:58Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":144000},"id":516556,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-01-09T20:46:43Z","body":"I think the pixeltype, the gltypeinternal and the gltype should be accessible to the user as well as the loadData(void * data, int w, int h, int glDataType) which is actually protected.\r\n\r\nActual implementation is only limited to a few  choice of internalFormat which lead to choice of pixeltype and gltype. It thus doesn't allow from user specific type.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/292","comments":0,"milestone":null,"number":292,"html_url":"https://github.com/openframeworks/openFrameworks/issues/292","assignee":null,"title":"ofTexture should be more flexible","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2011-01-09T20:46:43Z","state":"open","user":{"url":"https://api.github.com/users/I33N","gravatar_id":"ba8d7c3b4532d3747c30b9be91dc20d5","login":"I33N","avatar_url":"https://secure.gravatar.com/avatar/ba8d7c3b4532d3747c30b9be91dc20d5?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":520375},"id":516071,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-12-03T10:49:15Z","body":"ofImage::getWidth()/getHeight() are just getters that do absolutely nothing but return a copy of the width and height. these methods should be marked const.\r\n\r\n[added]: there are hacks inside ofxCv that i've had to make because getWidth/getHeight are not const correct. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/288","comments":6,"milestone":null,"number":288,"html_url":"https://github.com/openframeworks/openFrameworks/issues/288","assignee":null,"title":"const correctness - add const to getWidth/getHeight","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2011-01-08T02:14:03Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":513779,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2010-11-30T05:13:10Z","body":"This is giving me some crashes. There needs to be a way to disable this when making custom windows. I have tried to do atexit(NULL); but the callback in ofRunApp(ofBaseApp * OFSA) is still being called. \r\n\r\nmaybe something like:\r\n\r\nvoid ofRunApp(ofBaseApp * OFSA, bool useExitCallback);\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/275","comments":0,"milestone":null,"number":275,"html_url":"https://github.com/openframeworks/openFrameworks/issues/275","assignee":null,"title":"atexit(ofExitCallback);","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-11-30T05:13:10Z","state":"open","user":{"url":"https://api.github.com/users/vanderlin","gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","login":"vanderlin","avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":149997},"id":445829,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-03-17T02:02:25Z","body":"bottom left corner is inconsistent with every other drawing command in OF, should be top left instead.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/271","comments":7,"milestone":null,"number":271,"html_url":"https://github.com/openframeworks/openFrameworks/issues/271","assignee":null,"title":"ofDrawBitmapString draws from bottom left","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-11-22T21:30:40Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":433297,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-06-03T19:04:08Z","body":"test if this is really useful:\r\n\r\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=7&t=4889&view=unread#unread\r\n\r\nhe adds a queue just before the color conversion","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/265","comments":0,"milestone":null,"number":265,"html_url":"https://github.com/openframeworks/openFrameworks/issues/265","assignee":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"title":"linux videograbber stopping after some time","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2010-11-18T12:07:46Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":48240},"id":426050,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-19T22:47:21Z","body":"ofClear(r,g,b) is inconsistent with ofBackground(r,g,b) because the alpha is 0 by default -- meaning you always have to explicitly declare the alpha to clear the background.\r\n\r\nfurthermore, because all the arguments have default values there is not/cannot exist an ofClear(gray, alpha) to match ofSetColor style","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/264","comments":5,"milestone":null,"number":264,"html_url":"https://github.com/openframeworks/openFrameworks/issues/264","assignee":null,"title":"ofClear uses inconsistent arguments","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2010-11-18T06:15:47Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","id":157106},"id":425675,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=13
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4931'), ('content-length', '46291'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="next", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=14>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=12>; rel="prev"'), ('etag', '"bf7e6718fe6b733d04e77e00e220150f"'), ('date', 'Tue, 29 May 2012 19:27:22 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2011-12-05T21:58:33Z","body":"A lot of OF files are including ofMain / ofConstants.h - this makes compiles super slow. Try to have files only include what they need. Or find a way to break things up into the most often used ( windows.h etc ) and less used. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/255","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":255,"html_url":"https://github.com/openframeworks/openFrameworks/issues/255","assignee":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"title":"COMPILE SPEED UP - cleanup internal includes to avoid ofMain.h and ofConstants.h","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2010-11-11T21:14:05Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":413771,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T20:11:33Z","body":"ofHideCursor()/ofShowCursor()\r\n\r\nofEnableArbTex()\r\nofEnableSetupScreen()\r\nofEnableDataPath()\r\nofEnableAlphaBlending()\r\nofEnableSmoothing()\r\n\r\nofSetFullscreen() + ofToggleFullscreen()\r\nofSetVerticalSync()\r\n\r\netc.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/249","comments":1,"milestone":null,"number":249,"html_url":"https://github.com/openframeworks/openFrameworks/issues/249","assignee":null,"title":"normalize option nomenclature (hide/enable/set/etc.)","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2010-11-03T22:52:08Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":399214,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T22:03:41Z","body":"some video to test:\r\n\r\nmmsh://live.camstreams.com/cscamglobal16?MSWMExt=.asf\r\n\r\nit works ok with totem so it should be a problem in ofGstUtils","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/245","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":245,"html_url":"https://github.com/openframeworks/openFrameworks/issues/245","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"gstreamer problems with streaming of microsoft video","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2010-10-13T16:33:06Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":360885,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-03-13T20:13:07Z","body":"I found an annoying bug in ofVideoPlayer.\nThis module do not like to be dynamically created or destroyed.\nCheck this little example :\n\nhttp://knu.free.fr/bug_ofVideoPlayer.zip\n\nLeft-click to create an object playing video.\nRight-click to suppress the last video.\n\nhere are the phenomenons I am facing on my Win7 machine :\n\n- \nIf you create an object, and then you suppress it, and then try to create an object again, the app will crash.\n\n- \nIf you create some objects (lets say 8), and then you suppress all of them, the app will crash before the last one (not always, but most of the time).\n\n\n\nNow in OF source tree, try replacing ofVideoPlayer.cpp with FIX_ofVideoPlayer.cpp (at the root of the zip)\nRebuild the project.\nNow everything should be working as expected.\n\n\nThe modifications I made in the source are marked by : //###############\n\nI do not have time to fully read and understand the quicktime API, so there are chances this workaround is fucking dirty.\nBut at least it seems to work.\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/244","comments":1,"milestone":null,"number":244,"html_url":"https://github.com/openframeworks/openFrameworks/issues/244","assignee":null,"title":"bug in ofVideoPlayer","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/windows","name":"windows","color":"244569"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2010-10-11T19:56:46Z","state":"open","user":{"url":"https://api.github.com/users/fmauclere","avatar_url":"https://secure.gravatar.com/avatar/1c7dcbab3712f1a4d90bd2c3aa9a3e3d?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"1c7dcbab3712f1a4d90bd2c3aa9a3e3d","login":"fmauclere","id":435720},"id":357395,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-10T05:06:06Z","body":"Check out this code - also check if latest ffmpeg is better optimized for iphone.\r\nhttp://github.com/jgh-/FFmpeg-for-iOS","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/240","comments":0,"milestone":null,"number":240,"html_url":"https://github.com/openframeworks/openFrameworks/issues/240","assignee":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"title":"iphone video player - ffmpeg and audioqueues","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-10-06T17:19:57Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":349886,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-10T05:08:56Z","body":"XCode: 3.2.4\nOF: github master @24 Sep 2010\nCompiled as: device base SDK 4.1 release arm7 deployment target 3.2\n\nWeird error: Build ofAudioOutputExample. Add a void testApp::exit() to see if it is called. Run app on ipod touch 2010 version with 4.1 installed.\n\nApp runs OK yet pressing the exit button on front of device quits the app, but xcode keeps running. Digging in a bit it appears not only testApp::exit, but ofExitCallback is not getting called.\n\nSwitch to iPad (no other settings changed) and app runs fine, and exits properly.\n\nSwitch to BaseSDK 3.2 and example runs fine and exits fine on both iPad and iPod.\n\nIdeas? Is this just me? I'm fairly new to OF, XCode and iPhone\n\n[edit]\nOK I worked out that pressing the \"close\" button in 4.1 calls applicationWillResignActive in ofxiPhoneAppDelegate.mm. As a hacky workaround as my app just needs to exit, not sit in background, I added exit(0); to the end of applicationWillResignActive and it seems to work.\n\nWould like to know how to do this properly though.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/236","comments":1,"milestone":null,"number":236,"html_url":"https://github.com/openframeworks/openFrameworks/issues/236","assignee":{"url":"https://api.github.com/users/julapy","avatar_url":"https://secure.gravatar.com/avatar/8dca8d8de1b5950c895fb72e0527c6f0?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"8dca8d8de1b5950c895fb72e0527c6f0","login":"julapy","id":331382},"title":"ofExitCallback not being called on iphone4.1?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-09-25T01:55:49Z","state":"open","user":{"url":"https://api.github.com/users/DavidDC","avatar_url":"https://secure.gravatar.com/avatar/a6fdad0c31fcd273a1ba89434fec0419?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"a6fdad0c31fcd273a1ba89434fec0419","login":"DavidDC","id":415101},"id":332379,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-04-19T00:32:33Z","body":"related to #221: texData.bAllocated is only used in the isAllocated method which can be changed from:\r\n\r\n    bool ofTexture::bAllocated(){\r\n        return texData.bAllocated;\r\n    }\r\n\r\nto\r\n\r\n    bool ofTexture::bAllocated(){\r\n        return texData.textureID!=0;\r\n    }\r\n\r\navoiding problems like #221 since we don't have two flags for the same thing","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/228","comments":4,"milestone":null,"number":228,"html_url":"https://github.com/openframeworks/openFrameworks/issues/228","assignee":null,"title":"remove bAllocated in ofTexture?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2010-09-09T14:20:55Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":309191,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T15:45:27Z","body":"Segfault when playing .ogv files on 64 bit linux.\nSee forum post - http://www.openframeworks.cc/forum/viewtopic.php?f=7&t=4582","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/227","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":227,"html_url":"https://github.com/openframeworks/openFrameworks/issues/227","assignee":null,"title":"Ubuntu 64-bit conflict with FMOD when playing ogg theora files","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/linux","name":"linux","color":"27607f"}],"closed_at":null,"created_at":"2010-09-08T14:54:33Z","state":"open","user":{"url":"https://api.github.com/users/pierrep","avatar_url":"https://secure.gravatar.com/avatar/be11c9de8242e7aef0446eceaa289e01?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"be11c9de8242e7aef0446eceaa289e01","login":"pierrep","id":392160},"id":307684,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2010-08-31T10:54:19Z","body":"It would be nice to have:\r\n\r\n\tconst ofxVec2f xunit2f(1, 0), yunit2f(0, 1);\r\n\tconst ofxVec3f xunit3f(1, 0, 0), yunit3f(0, 1, 0), zunit3f(0, 0, 1);\r\n\r\nOr something similar that allows for more elegant notation when you're multiplying or adding by an axis.","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/225","comments":0,"milestone":null,"number":225,"html_url":"https://github.com/openframeworks/openFrameworks/issues/225","assignee":null,"title":"ofxVectorMath constants","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-08-31T10:54:19Z","state":"open","user":{"url":"https://api.github.com/users/kylemcdonald","avatar_url":"https://secure.gravatar.com/avatar/e5d92e48e175112e9df112e2418bd528?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"e5d92e48e175112e9df112e2418bd528","login":"kylemcdonald","id":157106},"id":295913,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-26T18:37:47Z","body":"can this be useful?\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=25&t=4500\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/224","comments":1,"milestone":null,"number":224,"html_url":"https://github.com/openframeworks/openFrameworks/issues/224","assignee":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"title":"gaussian noise","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bitesize","name":"bitesize","color":"65a300"}],"closed_at":null,"created_at":"2010-08-26T10:21:24Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":290973,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-10-17T13:58:53Z","body":"ofxOsc causes a memory access violation in VS2008, when you use sendMessage(ofxOscMessage) from within a class.\r\nNo error when you run that from main ofApp","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/214","comments":1,"milestone":null,"number":214,"html_url":"https://github.com/openframeworks/openFrameworks/issues/214","assignee":null,"title":"ofxOsc memory access violation. namespace issue?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-08-04T05:59:22Z","state":"open","user":{"url":"https://api.github.com/users/elliotwoods","avatar_url":"https://secure.gravatar.com/avatar/bea30676dca310e7f38269f245214944?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"bea30676dca310e7f38269f245214944","login":"elliotwoods","id":328294},"id":268332,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-14T15:12:26Z","body":"e) get arturo's script to work, or rewrite a new one to just clobber a given directory (and not pull from git, etc as it's doing now). \r\n\r\ntheo - might be good to have two scripts?\r\n1) to pull from git \r\n2) to remove everything not related to a platform - or maybe better just copies the files into a folder for that platform. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/199","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":199,"html_url":"https://github.com/openframeworks/openFrameworks/issues/199","assignee":null,"title":"script that doesn't pull everything from git","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-06-01T13:28:54Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":211418,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2010-05-25T14:54:52Z","body":"\r\nas per: \r\n\r\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=8&t=3962&p=20661#p20661\r\n\r\nwe should explain how to use it properly. \r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/194","comments":0,"milestone":null,"number":194,"html_url":"https://github.com/openframeworks/openFrameworks/issues/194","assignee":null,"title":"ofGetAppPtr documentation is wrong ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/documentation","name":"documentation","color":"cccc29"}],"closed_at":null,"created_at":"2010-05-25T14:54:52Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","login":"ofZach","id":142897},"id":205935,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:58:22Z","body":"http://www.glfw.org/release-2.6.html","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/193","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":193,"html_url":"https://github.com/openframeworks/openFrameworks/issues/193","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"look at glfw - just got updated","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-05-23T21:04:25Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":204247,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T19:20:16Z","body":"I had the L.A.S.E.R. tag software up and running great on my new MacBook Pro but recently my computer did a software update and now something is wrong and I can't properly use the program. I have snow leopard 10.6.3 OS. I'm not totally sure if it was the auto update that caused the issue but it seems like it stopped working after the update. Below I listed the suspected updates. Seems weird to me 2 digital camera RAW updates.\r\n\r\n3/27/10 Digital Camera RAW update 2.7\r\n3/27/10 Safari 4.0.5\r\n3/27/10 Digital Camera RAW update 3.1\r\n3/27/10 iMovie update 8.0.6\r\n\r\n0   com.apple.QuickTime           \t0x9408e179 QTMLGrabMutex + 18\r\n1   com.apple.QuickTime           \t0x9421b6a3 QTWorkContextCopyForMediaContextID + 28\r\n2   ...uickTimeStreaming.component\t0x14f77c15 HTTPDhlr_CheckForFatalError + 254\r\n3   ...uickTimeStreaming.component\t0x14f77cc6 HTTPDhlr_ReadSYNC + 165\r\n4   ...uickTimeStreaming.component\t0x14f7ab01 HTTPDataHandler_ScheduleData64 + 452\r\n5   ...ple.CoreServices.CarbonCore\t0x949a2d05 callComponentStorage_4444444 + 63\r\n6   ...ple.CoreServices.CarbonCore\t0x949976f0 CallComponentFunctionCommonWithStorage(char**, ComponentParameters*, long (*)(), unsigned long) + 54\r\n7   ...uickTimeStreaming.component\t0x14f784c7 HTTPDataHandler_ComponentDispatch + 110\r\n8   ...ple.CoreServices.CarbonCore\t0x9498fd87 CallComponentDispatch + 29\r\n9   com.apple.QuickTime           \t0x94093540 DataHScheduleData64 + 73\r\n10  com.apple.QuickTime           \t0x940b5704 NewMovieFromDataRefPriv_priv + 8296\r\n11  com.apple.QuickTime           \t0x9419e613 NewMovieFromDataRef_priv + 54\r\n12  com.apple.QuickTime           \t0x942fb95e NewMovieFromDataRef + 52\r\n13  com.yourcompany.openFrameworks\t0x0000aa2a createMovieFromURL(std::string, MovieType**&) + 112\r\n14  com.yourcompany.openFrameworks\t0x0000abe2 ofVideoPlayer::loadMovie(std::string) + 182\r\n15  com.yourcompany.openFrameworks\t0x0002fe03 appController::setup() + 2169\r\n16  com.yourcompany.openFrameworks\t0x00002864 ofRunApp(ofSimpleApp*) + 170\r\n17  com.yourcompany.openFrameworks\t0x0003dc06 main + 90\r\n18  com.yourcompany.openFrameworks\t0x00001da2 _start + 216\r\n19  com.yourcompany.openFrameworks\t0x00001cc9 start + 41","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/182","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":182,"html_url":"https://github.com/openframeworks/openFrameworks/issues/182","assignee":null,"title":"ofVideoPlayer - createMovieFromURL broken in 10.6.3 with specific updates?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-04-15T16:20:25Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":172424,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2010-04-14T15:48:19Z","body":"can we add moments to the blob. \n\nadd CvMoments moments to blob class\n\nand in ofxCvContourFinder.cpp line 119\n\n\t        blobs[i].moments.m00 = myMoments->m00;\n\t\tblobs[i].moments.m10 = myMoments->m10;\n\t\tblobs[i].moments.m01 = myMoments->m01;\n\t\tblobs[i].moments.m20 = myMoments->m20;\n\t\tblobs[i].moments.m11 = myMoments->m11;\n\t\tblobs[i].moments.m02 = myMoments->m02;\n\t\tblobs[i].moments.m30 = myMoments->m30;\n\t\tblobs[i].moments.m21 = myMoments->m21;\n\t\tblobs[i].moments.m12 = myMoments->m12;\n\t\tblobs[i].moments.m03 = myMoments->m03;\n\t\t\n\t\tblobs[i].moments.mu20 = myMoments->mu20;\n\t\tblobs[i].moments.mu11 = myMoments->mu11;\n\t\tblobs[i].moments.mu02 = myMoments->mu02;\n\t\tblobs[i].moments.mu30 = myMoments->mu30;\n\t\tblobs[i].moments.mu21 = myMoments->mu21;\n\t\tblobs[i].moments.mu12 = myMoments->mu12;\n\t\tblobs[i].moments.mu03 = myMoments->mu03;\n\n\nthis is good for finding the angle and other info about the contour.\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/181","comments":2,"milestone":null,"number":181,"html_url":"https://github.com/openframeworks/openFrameworks/issues/181","assignee":null,"title":"ofxCvBlobs","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2010-04-14T15:42:22Z","state":"open","user":{"url":"https://api.github.com/users/vanderlin","avatar_url":"https://secure.gravatar.com/avatar/96c91dba0113ea847ee43b0961d24b3a?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"96c91dba0113ea847ee43b0961d24b3a","login":"vanderlin","id":149997},"id":171615,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-05-29T15:04:04Z","body":"Buffer is 512 but should be 276 ( or something )\r\nSetting it to 256 says the buffer size should be 176 ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/178","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":178,"html_url":"https://github.com/openframeworks/openFrameworks/issues/178","assignee":null,"title":"iPhone sound bug with 1st gen ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/iOS","name":"iOS","color":"2babad"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-04-11T10:18:58Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":169176,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T19:18:14Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/175","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":175,"html_url":"https://github.com/openframeworks/openFrameworks/issues/175","assignee":null,"title":"bring examples up to date - make sexy","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"}],"closed_at":null,"created_at":"2010-04-06T19:44:04Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":166214,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-02T19:14:03Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/174","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":174,"html_url":"https://github.com/openframeworks/openFrameworks/issues/174","assignee":null,"title":"vertical sync on for mac by default","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-04-06T19:43:21Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":166212,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:58:10Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/173","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":173,"html_url":"https://github.com/openframeworks/openFrameworks/issues/173","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"ofAlphaBlending default on","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2010-04-06T19:42:34Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":166211,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:57:50Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/172","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":172,"html_url":"https://github.com/openframeworks/openFrameworks/issues/172","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"rgb + alpha -> blit to texture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-04-06T19:40:28Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":166209,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:57:36Z","body":"","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/171","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":171,"html_url":"https://github.com/openframeworks/openFrameworks/issues/171","assignee":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"title":"sexy shader example","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"}],"closed_at":null,"created_at":"2010-04-06T19:38:51Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":166208,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2012-03-03T19:40:33Z","body":"can we do it?\r\nwe need cross platform:\r\nplayback \r\nstreaming\r\npitch\r\npan \r\nmultiplay \r\n\r\nfor us to be compatible with what exists. \r\nOpenAL seems like the best choice.\r\nWhat other options are there?","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/167","comments":5,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/8","number":8,"title":"0080 Release","due_on":"2013-01-01T08:00:00Z","closed_issues":0,"open_issues":3,"created_at":"2012-02-25T01:34:28Z","state":"open","description":"","id":88731},"number":167,"html_url":"https://github.com/openframeworks/openFrameworks/issues/167","assignee":{"url":"https://api.github.com/users/damiannz","avatar_url":"https://secure.gravatar.com/avatar/d1e060fe75a68836bf8a3209a9066bbe?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"d1e060fe75a68836bf8a3209a9066bbe","login":"damiannz","id":144366},"title":"replace fmod","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-sound","name":"section-sound","color":"DDDDDD"}],"closed_at":null,"created_at":"2010-04-06T12:13:31Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":165898,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:56:41Z","body":"i have this working for 3d with selection buffer although it's meant to be slow i haven't had any problems","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/160","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":160,"html_url":"https://github.com/openframeworks/openFrameworks/issues/160","assignee":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"title":"ofIsUnderMouse?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2010-04-05T21:39:19Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","login":"arturoc","id":48240},"id":165537,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}},{"updated_at":"2011-12-05T21:54:57Z","body":"Theo: I have this code uses the selection buffer. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/153","comments":0,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","due_on":"2012-06-25T07:00:00Z","closed_issues":21,"open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":153,"html_url":"https://github.com/openframeworks/openFrameworks/issues/153","assignee":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"title":"ofIsOnScreen - ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/fix-proposed","name":"fix-proposed","color":"31e03a"}],"closed_at":null,"created_at":"2010-04-05T18:49:10Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","login":"ofTheo","id":144000},"id":165409,"pull_request":{"html_url":null,"patch_url":null,"diff_url":null}}]

https
GET
api.github.com
None
/repos/openframeworks/openFrameworks/issues?page=14
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
None
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4930'), ('content-length', '13008'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('Link', '<https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="last", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=1>; rel="first", <https://api.github.com/repos/openframeworks/openFrameworks/issues?page=13>; rel="prev"'), ('etag', '"a63cf45ee23c003caf863065072ec4bb"'), ('date', 'Tue, 29 May 2012 19:27:23 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-02-29T11:13:10Z","body":"check out - http://www.openframeworks.cc/forum/viewtopic.php?p=19169#p19169\r\npossible integration into core. ","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/140","comments":4,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":140,"html_url":"https://github.com/openframeworks/openFrameworks/issues/140","assignee":null,"title":"texture compression and mipmaps for of texture","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-04-02T19:43:00Z","state":"open","user":{"url":"https://api.github.com/users/ofTheo","gravatar_id":"3b0860ec0180f7fb7ac4d2cd9252ec3f","avatar_url":"https://secure.gravatar.com/avatar/3b0860ec0180f7fb7ac4d2cd9252ec3f?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofTheo","id":144000},"id":163959,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-03-12T16:15:52Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=10&t=3319","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/128","comments":4,"milestone":null,"number":128,"html_url":"https://github.com/openframeworks/openFrameworks/issues/128","assignee":null,"title":"ofxTCPServer doesn't manage connected clients correcly","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/addon","name":"addon","color":"d68e22"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"}],"closed_at":null,"created_at":"2010-02-14T09:40:13Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"arturoc","id":48240},"id":132671,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T12:31:57Z","body":"Something that easily converts vector direction to openGL degrees?\r\nI find myself constantly trying to guess 270 - atan2(y, x)*RAD_TO_DEG ..... etc\r\nTo rotate something along a vector. \r\n\r\nMight be good to have it be aware of the GL world orientation - or have it so you pass in the up \r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/126","comments":2,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":126,"html_url":"https://github.com/openframeworks/openFrameworks/issues/126","assignee":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"title":"ofATan2GL  /  ofVecToGL ?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-02-13T14:22:51Z","state":"open","user":{"url":"https://api.github.com/users/openframeworks","gravatar_id":"a858611b044a8302ab14cfe752e17369","avatar_url":"https://secure.gravatar.com/avatar/a858611b044a8302ab14cfe752e17369?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"openframeworks","id":142866},"id":132377,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-04-22T15:51:57Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=7&t=3299&p=17852#p17852","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/124","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/6","number":6,"title":"0073 Release","closed_issues":0,"due_on":"2012-07-30T07:00:00Z","open_issues":5,"created_at":"2011-12-03T15:37:49Z","state":"open","description":"","id":62090},"number":124,"html_url":"https://github.com/openframeworks/openFrameworks/issues/124","assignee":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"title":"TTF type rendering in OF - fix fuzziness ","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-typography","name":"section-typography","color":"DDDDDD"}],"closed_at":null,"created_at":"2010-02-13T14:15:25Z","state":"open","user":{"url":"https://api.github.com/users/openframeworks","gravatar_id":"a858611b044a8302ab14cfe752e17369","avatar_url":"https://secure.gravatar.com/avatar/a858611b044a8302ab14cfe752e17369?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"openframeworks","id":142866},"id":132373,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T12:30:14Z","body":"http://www.openframeworks.cc/forum/viewtopic.php?f=8&t=1374","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/121","comments":1,"milestone":{"creator":{"url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"bilderbuchi","id":327442},"url":"https://api.github.com/repos/openframeworks/openFrameworks/milestones/5","number":5,"title":"0072 Release","closed_issues":21,"due_on":"2012-06-25T07:00:00Z","open_issues":81,"created_at":"2011-12-02T15:29:48Z","state":"open","description":"","id":61810},"number":121,"html_url":"https://github.com/openframeworks/openFrameworks/issues/121","assignee":null,"title":"video: loop is not working unless you call play first","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/core","name":"core","color":"db6a1f"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/bug","name":"bug","color":"b31d1d"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/section-video","name":"section-video","color":"DDDDDD"}],"closed_at":null,"created_at":"2010-02-10T23:16:23Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"arturoc","id":48240},"id":130269,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-27T12:30:49Z","body":"it would make sense to have an opengl stress test app, that can test some basic about wether or not someone has ARB support, how fast their systems are, etc.   I can imagine that for 0.07, we'll be helping people debug shaders and FBOs, having some way to gauge what kind of system they are on and what it can take, will be helpful. \r\n\r\nHere's a simple test app from the Lua-AV folks that looks like a reasonable system: \r\n\r\nhttp://img191.imageshack.us/img191/1659/picture3po.png","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/115","comments":0,"milestone":null,"number":115,"html_url":"https://github.com/openframeworks/openFrameworks/issues/115","assignee":null,"title":"opengl stress test example","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2010-01-12T02:56:21Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"id":111018,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2012-02-28T14:02:04Z","body":"at the moment, we've got it like:\r\n\r\nofAppGlutWindow::ofAppGlutWindow(){\r\n\tfps\t\t\t\t= 60.0; //give a realistic starting value - win32 issues\r\n\tbFrameRateSet\t\t= false;\r\n}\r\n\r\nbut I personally prefer all apps to start with some kind of similar frame rate (ie, examples running really fast on mac, etc).  see for example: \r\n\r\nhttp://www.openframeworks.cc/forum/viewtopic.php?p=16520&#p16520\r\n\r\nthis kind of thing leads to less \"cross-platform-ness\" and more confusion from beginners, no? \r\n\r\n- z\r\n\r\n\r\n","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/107","comments":8,"milestone":null,"number":107,"html_url":"https://github.com/openframeworks/openFrameworks/issues/107","assignee":null,"title":"should we start all OF apps with a frame rate set?","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/example","name":"example","color":"d1af26"},{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/development-strategy","name":"development-strategy","color":"37c200"}],"closed_at":null,"created_at":"2009-12-31T15:10:45Z","state":"open","user":{"url":"https://api.github.com/users/ofZach","gravatar_id":"04ffd573ed878bc5b8c818c3aeaa2d71","avatar_url":"https://secure.gravatar.com/avatar/04ffd573ed878bc5b8c818c3aeaa2d71?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"ofZach","id":142897},"id":104702,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}},{"updated_at":"2011-09-27T15:47:45Z","body":"videoGrabber and serial listDevices should return a vector of strings apart from printing to console","url":"https://api.github.com/repos/openframeworks/openFrameworks/issues/91","comments":4,"milestone":null,"number":91,"html_url":"https://github.com/openframeworks/openFrameworks/issues/91","assignee":null,"title":"listDevices should return a list of strings","labels":[{"url":"https://api.github.com/repos/openframeworks/openFrameworks/labels/feature","name":"feature","color":"622425"}],"closed_at":null,"created_at":"2009-12-09T17:11:40Z","state":"open","user":{"url":"https://api.github.com/users/arturoc","gravatar_id":"84c985e7168027f833fd837f3afd9f3e","avatar_url":"https://secure.gravatar.com/avatar/84c985e7168027f833fd837f3afd9f3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","login":"arturoc","id":48240},"id":94898,"pull_request":{"diff_url":null,"html_url":null,"patch_url":null}}]

