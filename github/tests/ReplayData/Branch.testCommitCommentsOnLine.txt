https
GET
api.github.com
None
/repos/jacquev6/PyGithub/commits/6945921c529be14c3a8f566dd1e483674516d46d
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
null
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4965'), ('content-length', '30760'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '"9ee846f5bd9913285569443607fd134e"'), ('date', 'Fri, 18 May 2012 20:12:21 GMT'), ('content-type', 'application/json; charset=utf-8')]
{"author":{"avatar_url":"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","login":"jacquev6","id":327146},"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/6945921c529be14c3a8f566dd1e483674516d46d","stats":{"deletions":53,"additions":48,"total":101},"committer":{"avatar_url":"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","login":"jacquev6","id":327146},"files":[{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/codegen/templates/GithubObject.MethodBody.UseResult.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/codegen/templates/GithubObject.MethodBody.UseResult.py","changes":2,"deletions":1,"filename":"codegen/templates/GithubObject.MethodBody.UseResult.py","patch":"@@ -23,7 +23,7 @@\n {% else %}\r\n \r\n {% if method.type.cardinality == \"scalar\" %}\r\n-        return {% if method.type.name != class.name %}{{ method.type.name }}.{% endif %}{{ method.type.name }}( self.__requester, data, completion = LazyCompletion )\r\n+        return {% if method.type.name != class.name %}{{ method.type.name }}.{% endif %}{{ method.type.name }}( self.__requester, data, completion = NoCompletion )\r\n {% endif %}\r\n \r\n {% if method.type.cardinality == \"list\" %}\r","additions":1,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/AuthenticatedUser.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/AuthenticatedUser.py","changes":16,"deletions":8,"filename":"src/github/AuthenticatedUser.py","patch":"@@ -187,7 +187,7 @@ def create_authorization( self, scopes = DefaultValueForOptionalParameters, note\n             None,\n             post_parameters\n         )\n-        return Authorization.Authorization( self.__requester, data, completion = LazyCompletion )\n+        return Authorization.Authorization( self.__requester, data, completion = NoCompletion )\n \n     def create_fork( self, repo ):\n         status, headers, data = self.__requester.request(\n@@ -196,7 +196,7 @@ def create_fork( self, repo ):\n             None,\n             None\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def create_gist( self, public, files, description = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -211,7 +211,7 @@ def create_gist( self, public, files, description = DefaultValueForOptionalParam\n             None,\n             post_parameters\n         )\n-        return Gist.Gist( self.__requester, data, completion = LazyCompletion )\n+        return Gist.Gist( self.__requester, data, completion = NoCompletion )\n \n     def create_key( self, title, key ):\n         post_parameters = {\n@@ -224,7 +224,7 @@ def create_key( self, title, key ):\n             None,\n             post_parameters\n         )\n-        return UserKey.UserKey( self.__requester, data, completion = LazyCompletion )\n+        return UserKey.UserKey( self.__requester, data, completion = NoCompletion )\n \n     def create_repo( self, name, description = DefaultValueForOptionalParameters, homepage = DefaultValueForOptionalParameters, private = DefaultValueForOptionalParameters, has_issues = DefaultValueForOptionalParameters, has_wiki = DefaultValueForOptionalParameters, has_downloads = DefaultValueForOptionalParameters, team_id = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -250,7 +250,7 @@ def create_repo( self, name, description = DefaultValueForOptionalParameters, ho\n             None,\n             post_parameters\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def edit( self, name = DefaultValueForOptionalParameters, email = DefaultValueForOptionalParameters, blog = DefaultValueForOptionalParameters, company = DefaultValueForOptionalParameters, location = DefaultValueForOptionalParameters, hireable = DefaultValueForOptionalParameters, bio = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -284,7 +284,7 @@ def get_authorization( self, id ):\n             None,\n             None\n         )\n-        return Authorization.Authorization( self.__requester, data, completion = LazyCompletion )\n+        return Authorization.Authorization( self.__requester, data, completion = NoCompletion )\n \n     def get_authorizations( self ):\n         status, headers, data = self.__requester.request(\n@@ -386,7 +386,7 @@ def get_key( self, id ):\n             None,\n             None\n         )\n-        return UserKey.UserKey( self.__requester, data, completion = LazyCompletion )\n+        return UserKey.UserKey( self.__requester, data, completion = NoCompletion )\n \n     def get_keys( self ):\n         status, headers, data = self.__requester.request(\n@@ -437,7 +437,7 @@ def get_repo( self, name ):\n             None,\n             None\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def get_repos( self, type = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(","additions":8,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Commit.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Commit.py","changes":2,"deletions":1,"filename":"src/github/Commit.py","patch":"@@ -77,7 +77,7 @@ def create_comment( self, body, commit_id = DefaultValueForOptionalParameters, l\n             None,\n             post_parameters\n         )\n-        return CommitComment.CommitComment( self.__requester, data, completion = LazyCompletion )\n+        return CommitComment.CommitComment( self.__requester, data, completion = NoCompletion )\n \n     def get_comments( self ):\n         status, headers, data = self.__requester.request(","additions":1,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Gist.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Gist.py","changes":6,"deletions":3,"filename":"src/github/Gist.py","patch":"@@ -96,7 +96,7 @@ def create_comment( self, body ):\n             None,\n             post_parameters\n         )\n-        return GistComment.GistComment( self.__requester, data, completion = LazyCompletion )\n+        return GistComment.GistComment( self.__requester, data, completion = NoCompletion )\n \n     def create_fork( self ):\n         status, headers, data = self.__requester.request(\n@@ -105,7 +105,7 @@ def create_fork( self ):\n             None,\n             None\n         )\n-        return Gist( self.__requester, data, completion = LazyCompletion )\n+        return Gist( self.__requester, data, completion = NoCompletion )\n \n     def delete( self ):\n         status, headers, data = self.__requester.request(\n@@ -137,7 +137,7 @@ def get_comment( self, id ):\n             None,\n             None\n         )\n-        return GistComment.GistComment( self.__requester, data, completion = LazyCompletion )\n+        return GistComment.GistComment( self.__requester, data, completion = NoCompletion )\n \n     def get_comments( self ):\n         status, headers, data = self.__requester.request(","additions":3,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Issue.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Issue.py","changes":4,"deletions":2,"filename":"src/github/Issue.py","patch":"@@ -122,7 +122,7 @@ def create_comment( self, body ):\n             None,\n             post_parameters\n         )\n-        return IssueComment.IssueComment( self.__requester, data, completion = LazyCompletion )\n+        return IssueComment.IssueComment( self.__requester, data, completion = NoCompletion )\n \n     def delete_labels( self ):\n         pass\n@@ -157,7 +157,7 @@ def get_comment( self, id ):\n             None,\n             None\n         )\n-        return IssueComment.IssueComment( self.__requester, data, completion = LazyCompletion )\n+        return IssueComment.IssueComment( self.__requester, data, completion = NoCompletion )\n \n     def get_comments( self ):\n         status, headers, data = self.__requester.request(","additions":2,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/NamedUser.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/NamedUser.py","changes":4,"deletions":2,"filename":"src/github/NamedUser.py","patch":"@@ -161,7 +161,7 @@ def create_gist( self, public, files, description = DefaultValueForOptionalParam\n             None,\n             post_parameters\n         )\n-        return Gist.Gist( self.__requester, data, completion = LazyCompletion )\n+        return Gist.Gist( self.__requester, data, completion = NoCompletion )\n \n     def get_events( self ):\n         status, headers, data = self.__requester.request(\n@@ -282,7 +282,7 @@ def get_repo( self, name ):\n             None,\n             None\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def get_repos( self, type = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(","additions":2,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Organization.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Organization.py","changes":8,"deletions":4,"filename":"src/github/Organization.py","patch":"@@ -156,7 +156,7 @@ def create_fork( self, repo ):\n             url_parameters,\n             None\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def create_repo( self, name, description = DefaultValueForOptionalParameters, homepage = DefaultValueForOptionalParameters, private = DefaultValueForOptionalParameters, has_issues = DefaultValueForOptionalParameters, has_wiki = DefaultValueForOptionalParameters, has_downloads = DefaultValueForOptionalParameters, team_id = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -182,7 +182,7 @@ def create_repo( self, name, description = DefaultValueForOptionalParameters, ho\n             None,\n             post_parameters\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def create_team( self, name, repo_names = DefaultValueForOptionalParameters, permission = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -198,7 +198,7 @@ def create_team( self, name, repo_names = DefaultValueForOptionalParameters, per\n             None,\n             post_parameters\n         )\n-        return Team.Team( self.__requester, data, completion = LazyCompletion )\n+        return Team.Team( self.__requester, data, completion = NoCompletion )\n \n     def edit( self, billing_email = DefaultValueForOptionalParameters, blog = DefaultValueForOptionalParameters, company = DefaultValueForOptionalParameters, email = DefaultValueForOptionalParameters, location = DefaultValueForOptionalParameters, name = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -272,7 +272,7 @@ def get_repo( self, name ):\n             None,\n             None\n         )\n-        return Repository.Repository( self.__requester, data, completion = LazyCompletion )\n+        return Repository.Repository( self.__requester, data, completion = NoCompletion )\n \n     def get_repos( self, type = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(","additions":4,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/PullRequest.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/PullRequest.py","changes":2,"deletions":1,"filename":"src/github/PullRequest.py","patch":"@@ -171,7 +171,7 @@ def get_comment( self, id ):\n             None,\n             None\n         )\n-        return PullRequestComment.PullRequestComment( self.__requester, data, completion = LazyCompletion )\n+        return PullRequestComment.PullRequestComment( self.__requester, data, completion = NoCompletion )\n \n     def get_comments( self ):\n         status, headers, data = self.__requester.request(","additions":1,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Repository.py","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/src/github/Repository.py","changes":52,"deletions":26,"filename":"src/github/Repository.py","patch":"@@ -218,7 +218,7 @@ def create_download( self, name, size, description = DefaultValueForOptionalPara\n             None,\n             post_parameters\n         )\n-        return Download.Download( self.__requester, data, completion = LazyCompletion )\n+        return Download.Download( self.__requester, data, completion = NoCompletion )\n \n     def create_git_blob( self, content, encoding ):\n         post_parameters = {\n@@ -231,7 +231,7 @@ def create_git_blob( self, content, encoding ):\n             None,\n             post_parameters\n         )\n-        return GitBlob.GitBlob( self.__requester, data, completion = LazyCompletion )\n+        return GitBlob.GitBlob( self.__requester, data, completion = NoCompletion )\n \n     def create_git_commit( self, message, tree, parents, author = DefaultValueForOptionalParameters, committer = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -249,7 +249,7 @@ def create_git_commit( self, message, tree, parents, author = DefaultValueForOpt\n             None,\n             post_parameters\n         )\n-        return GitCommit.GitCommit( self.__requester, data, completion = LazyCompletion )\n+        return GitCommit.GitCommit( self.__requester, data, completion = NoCompletion )\n \n     def create_git_ref( self, ref, sha ):\n         post_parameters = {\n@@ -262,7 +262,7 @@ def create_git_ref( self, ref, sha ):\n             None,\n             post_parameters\n         )\n-        return GitRef.GitRef( self.__requester, data, completion = LazyCompletion )\n+        return GitRef.GitRef( self.__requester, data, completion = NoCompletion )\n \n     def create_git_tag( self, tag, message, object, type, tagger = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -279,7 +279,7 @@ def create_git_tag( self, tag, message, object, type, tagger = DefaultValueForOp\n             None,\n             post_parameters\n         )\n-        return GitTag.GitTag( self.__requester, data, completion = LazyCompletion )\n+        return GitTag.GitTag( self.__requester, data, completion = NoCompletion )\n \n     def create_git_tree( self, tree, base_tree = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -293,7 +293,7 @@ def create_git_tree( self, tree, base_tree = DefaultValueForOptionalParameters )\n             None,\n             post_parameters\n         )\n-        return GitTree.GitTree( self.__requester, data, completion = LazyCompletion )\n+        return GitTree.GitTree( self.__requester, data, completion = NoCompletion )\n \n     def create_hook( self, name, config, events = DefaultValueForOptionalParameters, active = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -310,7 +310,7 @@ def create_hook( self, name, config, events = DefaultValueForOptionalParameters,\n             None,\n             post_parameters\n         )\n-        return Hook.Hook( self.__requester, data, completion = LazyCompletion )\n+        return Hook.Hook( self.__requester, data, completion = NoCompletion )\n \n     def create_issue( self, title, body = DefaultValueForOptionalParameters, assignee = DefaultValueForOptionalParameters, milestone = DefaultValueForOptionalParameters, labels = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -330,7 +330,7 @@ def create_issue( self, title, body = DefaultValueForOptionalParameters, assigne\n             None,\n             post_parameters\n         )\n-        return Issue.Issue( self.__requester, data, completion = LazyCompletion )\n+        return Issue.Issue( self.__requester, data, completion = NoCompletion )\n \n     def create_key( self, title, key ):\n         post_parameters = {\n@@ -343,7 +343,7 @@ def create_key( self, title, key ):\n             None,\n             post_parameters\n         )\n-        return RepositoryKey.RepositoryKey( self.__requester, data, completion = LazyCompletion )\n+        return RepositoryKey.RepositoryKey( self.__requester, data, completion = NoCompletion )\n \n     def create_label( self, name, color ):\n         post_parameters = {\n@@ -356,7 +356,7 @@ def create_label( self, name, color ):\n             None,\n             post_parameters\n         )\n-        return Label.Label( self.__requester, data, completion = LazyCompletion )\n+        return Label.Label( self.__requester, data, completion = NoCompletion )\n \n     def create_milestone( self, title, state = DefaultValueForOptionalParameters, description = DefaultValueForOptionalParameters, due_on = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -374,7 +374,7 @@ def create_milestone( self, title, state = DefaultValueForOptionalParameters, de\n             None,\n             post_parameters\n         )\n-        return Milestone.Milestone( self.__requester, data, completion = LazyCompletion )\n+        return Milestone.Milestone( self.__requester, data, completion = NoCompletion )\n \n     def edit( self, name, description = DefaultValueForOptionalParameters, homepage = DefaultValueForOptionalParameters, public = DefaultValueForOptionalParameters, has_issues = DefaultValueForOptionalParameters, has_wiki = DefaultValueForOptionalParameters, has_downloads = DefaultValueForOptionalParameters ):\n         post_parameters = {\n@@ -435,7 +435,7 @@ def get_comment( self, id ):\n             None,\n             None\n         )\n-        return CommitComment.CommitComment( self.__requester, data, completion = LazyCompletion )\n+        return CommitComment.CommitComment( self.__requester, data, completion = NoCompletion )\n \n     def get_comments( self ):\n         status, headers, data = self.__requester.request(\n@@ -458,7 +458,7 @@ def get_commit( self, sha ):\n             None,\n             None\n         )\n-        return Commit.Commit( self.__requester, data, completion = LazyCompletion )\n+        return Commit.Commit( self.__requester, data, completion = NoCompletion )\n \n     def get_commits( self, sha = DefaultValueForOptionalParameters, path = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(\n@@ -495,7 +495,7 @@ def get_download( self, id ):\n             None,\n             None\n         )\n-        return Download.Download( self.__requester, data, completion = LazyCompletion )\n+        return Download.Download( self.__requester, data, completion = NoCompletion )\n \n     def get_downloads( self ):\n         status, headers, data = self.__requester.request(\n@@ -546,7 +546,7 @@ def get_git_blob( self, sha ):\n             None,\n             None\n         )\n-        return GitBlob.GitBlob( self.__requester, data, completion = LazyCompletion )\n+        return GitBlob.GitBlob( self.__requester, data, completion = NoCompletion )\n \n     def get_git_commit( self, sha ):\n         status, headers, data = self.__requester.request(\n@@ -555,7 +555,7 @@ def get_git_commit( self, sha ):\n             None,\n             None\n         )\n-        return GitCommit.GitCommit( self.__requester, data, completion = LazyCompletion )\n+        return GitCommit.GitCommit( self.__requester, data, completion = NoCompletion )\n \n     def get_git_ref( self, ref ):\n         status, headers, data = self.__requester.request(\n@@ -564,7 +564,7 @@ def get_git_ref( self, ref ):\n             None,\n             None\n         )\n-        return GitRef.GitRef( self.__requester, data, completion = LazyCompletion )\n+        return GitRef.GitRef( self.__requester, data, completion = NoCompletion )\n \n     def get_git_refs( self ):\n         status, headers, data = self.__requester.request(\n@@ -587,7 +587,7 @@ def get_git_tag( self, sha ):\n             None,\n             None\n         )\n-        return GitTag.GitTag( self.__requester, data, completion = LazyCompletion )\n+        return GitTag.GitTag( self.__requester, data, completion = NoCompletion )\n \n     def get_git_tree( self, sha, recursive = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(\n@@ -596,7 +596,7 @@ def get_git_tree( self, sha, recursive = DefaultValueForOptionalParameters ):\n             None,\n             None\n         )\n-        return GitTree.GitTree( self.__requester, data, completion = LazyCompletion )\n+        return GitTree.GitTree( self.__requester, data, completion = NoCompletion )\n \n     def get_hook( self, id ):\n         status, headers, data = self.__requester.request(\n@@ -605,7 +605,7 @@ def get_hook( self, id ):\n             None,\n             None\n         )\n-        return Hook.Hook( self.__requester, data, completion = LazyCompletion )\n+        return Hook.Hook( self.__requester, data, completion = NoCompletion )\n \n     def get_hooks( self ):\n         status, headers, data = self.__requester.request(\n@@ -628,7 +628,7 @@ def get_issue( self, number ):\n             None,\n             None\n         )\n-        return Issue.Issue( self.__requester, data, completion = LazyCompletion )\n+        return Issue.Issue( self.__requester, data, completion = NoCompletion )\n \n     def get_issues( self, milestone = DefaultValueForOptionalParameters, state = DefaultValueForOptionalParameters, assignee = DefaultValueForOptionalParameters, mentioned = DefaultValueForOptionalParameters, labels = DefaultValueForOptionalParameters, sort = DefaultValueForOptionalParameters, direction = DefaultValueForOptionalParameters, since = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(\n@@ -651,7 +651,7 @@ def get_issues_event( self, id ):\n             None,\n             None\n         )\n-        return IssueEvent.IssueEvent( self.__requester, data, completion = LazyCompletion )\n+        return IssueEvent.IssueEvent( self.__requester, data, completion = NoCompletion )\n \n     def get_issues_events( self ):\n         status, headers, data = self.__requester.request(\n@@ -674,7 +674,7 @@ def get_key( self, id ):\n             None,\n             None\n         )\n-        return RepositoryKey.RepositoryKey( self.__requester, data, completion = LazyCompletion )\n+        return RepositoryKey.RepositoryKey( self.__requester, data, completion = NoCompletion )\n \n     def get_keys( self ):\n         status, headers, data = self.__requester.request(\n@@ -697,7 +697,7 @@ def get_label( self, name ):\n             None,\n             None\n         )\n-        return Label.Label( self.__requester, data, completion = LazyCompletion )\n+        return Label.Label( self.__requester, data, completion = NoCompletion )\n \n     def get_labels( self ):\n         status, headers, data = self.__requester.request(\n@@ -729,7 +729,7 @@ def get_milestone( self, number ):\n             None,\n             None\n         )\n-        return Milestone.Milestone( self.__requester, data, completion = LazyCompletion )\n+        return Milestone.Milestone( self.__requester, data, completion = NoCompletion )\n \n     def get_milestones( self, state = DefaultValueForOptionalParameters, sort = DefaultValueForOptionalParameters, direction = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(\n@@ -766,7 +766,7 @@ def get_pull( self, number ):\n             None,\n             None\n         )\n-        return PullRequest.PullRequest( self.__requester, data, completion = LazyCompletion )\n+        return PullRequest.PullRequest( self.__requester, data, completion = NoCompletion )\n \n     def get_pulls( self, state = DefaultValueForOptionalParameters ):\n         status, headers, data = self.__requester.request(","additions":26,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"},{"raw_url":"https://github.com/jacquev6/PyGithub/raw/6945921c529be14c3a8f566dd1e483674516d46d/test/ReplayData/Repository.testAttributes.txt","status":"modified","blob_url":"https://github.com/jacquev6/PyGithub/blob/6945921c529be14c3a8f566dd1e483674516d46d/test/ReplayData/Repository.testAttributes.txt","changes":5,"deletions":5,"filename":"test/ReplayData/Repository.testAttributes.txt","patch":"@@ -3,8 +3,3 @@ GET /repos/jacquev6/PyGithub {} null\n [('status', '200 OK'), ('x-ratelimit-remaining', '4995'), ('content-length', '1097'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"8b91cd1456a5d4ef451946f882d9161e\"'), ('date', 'Wed, 09 May 2012 10:26:15 GMT'), ('content-type', 'application/json; charset=utf-8')]\r\n {\"mirror_url\":null,\"homepage\":\"http://vincent-jacques.net/PyGithub\",\"clone_url\":\"https://github.com/jacquev6/PyGithub.git\",\"html_url\":\"https://github.com/jacquev6/PyGithub\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub\",\"has_downloads\":true,\"watchers\":13,\"permissions\":{\"admin\":true,\"pull\":true,\"push\":true},\"has_wiki\":false,\"has_issues\":true,\"fork\":false,\"forks\":2,\"language\":\"Python\",\"size\":212,\"description\":\"Python library implementing the full Github API v3\",\"git_url\":\"git://github.com/jacquev6/PyGithub.git\",\"private\":false,\"created_at\":\"2012-02-25T12:53:47Z\",\"open_issues\":15,\"svn_url\":\"https://github.com/jacquev6/PyGithub\",\"owner\":{\"url\":\"https://api.github.com/users/jacquev6\",\"login\":\"jacquev6\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"id\":327146},\"name\":\"PyGithub\",\"pushed_at\":\"2012-05-08T19:27:43Z\",\"id\":3544490,\"ssh_url\":\"git@github.com:jacquev6/PyGithub.git\",\"updated_at\":\"2012-05-08T19:27:43Z\"}\r\n \r\n-GET /repos/jacquev6/PyGithub {'Authorization': 'Basic login_and_password_removed'} null\r\n-200\r\n-[('status', '200 OK'), ('x-ratelimit-remaining', '4995'), ('content-length', '1097'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '\"8b91cd1456a5d4ef451946f882d9161e\"'), ('date', 'Wed, 09 May 2012 10:26:15 GMT'), ('content-type', 'application/json; charset=utf-8')]\r\n-{\"mirror_url\":null,\"homepage\":\"http://vincent-jacques.net/PyGithub\",\"clone_url\":\"https://github.com/jacquev6/PyGithub.git\",\"html_url\":\"https://github.com/jacquev6/PyGithub\",\"url\":\"https://api.github.com/repos/jacquev6/PyGithub\",\"has_downloads\":true,\"watchers\":13,\"permissions\":{\"admin\":true,\"pull\":true,\"push\":true},\"has_wiki\":false,\"has_issues\":true,\"fork\":false,\"forks\":2,\"language\":\"Python\",\"size\":212,\"description\":\"Python library implementing the full Github API v3\",\"git_url\":\"git://github.com/jacquev6/PyGithub.git\",\"private\":false,\"created_at\":\"2012-02-25T12:53:47Z\",\"open_issues\":15,\"svn_url\":\"https://github.com/jacquev6/PyGithub\",\"owner\":{\"url\":\"https://api.github.com/users/jacquev6\",\"login\":\"jacquev6\",\"gravatar_id\":\"b68de5ae38616c296fa345d2b9df2225\",\"avatar_url\":\"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\"id\":327146},\"name\":\"PyGithub\",\"pushed_at\":\"2012-05-08T19:27:43Z\",\"id\":3544490,\"ssh_url\":\"git@github.com:jacquev6/PyGithub.git\",\"updated_at\":\"2012-05-08T19:27:43Z\"}\r\n-\r","additions":0,"sha":"6945921c529be14c3a8f566dd1e483674516d46d"}],"sha":"6945921c529be14c3a8f566dd1e483674516d46d","parents":[{"url":"https://api.github.com/repos/jacquev6/PyGithub/commits/a72d8b135841aa00158054d229c8e18333075cd4","sha":"a72d8b135841aa00158054d229c8e18333075cd4"}],"commit":{"author":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques","date":"2012-05-12T06:29:15-07:00"},"url":"https://api.github.com/repos/jacquev6/PyGithub/git/commits/6945921c529be14c3a8f566dd1e483674516d46d","message":"Use NoCompletion when creating an object from the result of a request","committer":{"email":"vincent@vincent-jacques.net","name":"Vincent Jacques","date":"2012-05-12T06:29:15-07:00"},"tree":{"url":"https://api.github.com/repos/jacquev6/PyGithub/git/trees/793ba5982623f4723ad63706da9a483ac82b3411","sha":"793ba5982623f4723ad63706da9a483ac82b3411"}}}

https
GET
api.github.com
None
/repos/jacquev6/PyGithub/commits/6945921c529be14c3a8f566dd1e483674516d46d/comments
{'Authorization': 'Basic login_and_password_removed', 'User-Agent': 'PyGithub/Python'}
null
200
[('status', '200 OK'), ('x-ratelimit-remaining', '4964'), ('content-length', '4322'), ('server', 'nginx/1.0.13'), ('connection', 'keep-alive'), ('x-ratelimit-limit', '5000'), ('etag', '"eb6946c4ceb5d978e884888f62d28344"'), ('date', 'Fri, 18 May 2012 20:12:21 GMT'), ('content-type', 'application/json; charset=utf-8')]
[{"updated_at":"2012-05-18T08:46:09Z","position":null,"body":"probably a noob question: does this completion refer to autocompletion in IDE's/editors? \nI have observed that this is pretty erratic sometimes. I'm using PyDev+Eclipse.\nFor example, in the tutorial from the readme, `g.get_u` gets autocompleted correctly, but `g.get_user().get_r` (or any method or attribute applicable to NamedUsers/AuthenticatedUser, really) does not show autocompletion to `g.get_user().get_repo()`. Is that by design? It makes exploring the library/API a bit cumbersome. ","url":"https://api.github.com/repos/jacquev6/PyGithub/comments/1347033","commit_id":"6945921c529be14c3a8f566dd1e483674516d46d","html_url":"https://github.com/jacquev6/PyGithub/commit/6945921c529be14c3a8f566dd1e483674516d46d#commitcomment-1347033","created_at":"2012-05-18T08:46:09Z","path":null,"line":null,"user":{"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":1347033},{"updated_at":"2012-05-18T09:03:40Z","position":null,"body":"No, it has nothing to do with auto-completion in IDEs :D\n\nGithub API v3 sends only the main part of objects in reply to some requests. So, if the user wants an attribute that has not been received yet, I have to do another request to complete the object.\n\nYet, in version 1.0 (see the milesone), my library will be much more readable for IDEs and their auto-completion mechanisms, because I am giving up the meta-description that I used until 0.6, and I'm now generating much more traditional code, that you will be able to explore as if it was written manually.\n\nIf you want to take the time to open an issue about auto-completion in IDEs, I'll deal with it in milestone 1.0.\n\nThanks !","url":"https://api.github.com/repos/jacquev6/PyGithub/comments/1347083","commit_id":"6945921c529be14c3a8f566dd1e483674516d46d","html_url":"https://github.com/jacquev6/PyGithub/commit/6945921c529be14c3a8f566dd1e483674516d46d#commitcomment-1347083","created_at":"2012-05-18T08:59:28Z","path":null,"line":null,"user":{"avatar_url":"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","login":"jacquev6","id":327146},"id":1347083},{"updated_at":"2012-05-18T10:55:55Z","position":null,"body":"Ah, thanks for the clarification. :blush:\n\nI made issue #27 for the autocompletion. I already suspected something like this meta-description magic, since I tried to read some of the code and it was pretty arcane. I attributed that to my pythonic noobness, though. Thank you. ","url":"https://api.github.com/repos/jacquev6/PyGithub/comments/1347397","commit_id":"6945921c529be14c3a8f566dd1e483674516d46d","html_url":"https://github.com/jacquev6/PyGithub/commit/6945921c529be14c3a8f566dd1e483674516d46d#commitcomment-1347397","created_at":"2012-05-18T10:54:23Z","path":null,"line":null,"user":{"avatar_url":"https://secure.gravatar.com/avatar/2aed663a62fa8bf9f7aebe603d3998bb?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/bilderbuchi","gravatar_id":"2aed663a62fa8bf9f7aebe603d3998bb","login":"bilderbuchi","id":327442},"id":1347397},{"updated_at":"2012-05-18T20:11:17Z","position":3,"body":"This comment is here only to test PyGithub...","url":"https://api.github.com/repos/jacquev6/PyGithub/comments/1349654","commit_id":"6945921c529be14c3a8f566dd1e483674516d46d","html_url":"https://github.com/jacquev6/PyGithub/commit/6945921c529be14c3a8f566dd1e483674516d46d#commitcomment-1349654","created_at":"2012-05-18T20:11:17Z","path":"codegen/templates/GithubObject.MethodBody.UseResult.py","line":25,"user":{"avatar_url":"https://secure.gravatar.com/avatar/b68de5ae38616c296fa345d2b9df2225?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png","url":"https://api.github.com/users/jacquev6","gravatar_id":"b68de5ae38616c296fa345d2b9df2225","login":"jacquev6","id":327146},"id":1349654}]

