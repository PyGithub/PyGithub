from github.GithubObject import _NotSetType
from github.NamedUser import NamedUser
from github.Organization import Organization
from github.PaginatedList import PaginatedList
from github.Repository import Repository
from typing import (
    Dict,
    Optional,
    Union,
)


class Team:
    def __repr__(self) -> str: ...
    def _initAttributes(self) -> None: ...
    def _useAttributes(
        self,
        attributes: Dict[str, Union[str, int, Dict[str, Union[str, int, None]], Dict[str, Union[str, int]]]]
    ) -> None: ...
    def add_membership(self, member: NamedUser, role: str = ...) -> None: ...
    def add_to_members(self, member: NamedUser) -> None: ...
    def add_to_repos(self, repo: Repository) -> None: ...
    def delete(self) -> None: ...
    @property
    def description(self) -> str: ...
    def edit(
        self,
        name: str,
        description: Union[str, _NotSetType] = ...,
        permission: Union[str, _NotSetType] = ...,
        privacy: Union[str, _NotSetType] = ...
    ) -> None: ...
    def get_members(self, role: _NotSetType = ...) -> PaginatedList: ...
    def get_repos(self) -> PaginatedList: ...
    def has_in_members(self, member: NamedUser) -> bool: ...
    def has_in_repos(self, repo: Repository) -> bool: ...
    def invitations(self) -> PaginatedList: ...
    @property
    def members_count(self) -> int: ...
    @property
    def members_url(self) -> str: ...
    @property
    def name(self) -> str: ...
    @property
    def organization(self) -> Organization: ...
    @property
    def permission(self) -> str: ...
    @property
    def privacy(self) -> str: ...
    def remove_from_members(self, member: NamedUser) -> None: ...
    def remove_from_repos(self, repo: Repository) -> None: ...
    def remove_membership(self, member: NamedUser) -> None: ...
    @property
    def repos_count(self) -> int: ...
    @property
    def repositories_url(self) -> str: ...
    def set_repo_permission(self, repo: Repository, permission: str) -> None: ...
    @property
    def slug(self) -> str: ...
    @property
    def url(self) -> str: ...
