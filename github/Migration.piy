from datetime import datetime
from github.NamedUser import NamedUser
from github.Repository import Repository
from typing import (
    Dict,
    List,
    Optional,
    Union,
)


class Migration:
    def _initAttributes(self) -> None: ...
    def _useAttributes(
        self,
        attributes: Dict[str, Union[int, str, Dict[str, Union[str, int]], List[Dict[str, Union[int, str, Dict[str, Union[str, int]], None, Dict[str, bool]]]]]]
    ) -> None: ...
    @property
    def created_at(self) -> datetime: ...
    def delete(self) -> None: ...
    @property
    def exclude_attachments(self) -> bool: ...
    def get_archive_url(self) -> str: ...
    def get_status(self) -> str: ...
    @property
    def guid(self) -> str: ...
    @property
    def id(self) -> int: ...
    @property
    def lock_repositories(self) -> bool: ...
    @property
    def owner(self) -> NamedUser: ...
    @property
    def repositories(self) -> List[Repository]: ...
    @property
    def state(self) -> str: ...
    def unlock_repo(self, repo_name: str) -> None: ...
    @property
    def updated_at(self) -> datetime: ...
    @property
    def url(self) -> str: ...
