from __future__ import annotations

from typing import Any

from github.GithubObject import (
    Attribute,
    NonCompletableGithubObject,
    NotSet,
)


class GeneratedReleaseNotes(NonCompletableGithubObject):
    """
    This class represents the release notes generated by the release/generate-notes REST API endpoint.

    The reference can be found here:
    https://docs.github.com/en/rest/releases/releases#generate-release-notes-content-for-a-release

    The OpenAPI schema can be found at
    - /components/schemas/release-notes-content

    """

    def _initAttributes(self) -> None:
        self._body: Attribute[str] = NotSet
        self._name: Attribute[str] = NotSet

    def __repr__(self) -> str:
        return self.get__repr__({"name": self._name.value, "body": self._body.value})

    @property
    def body(self) -> str:
        return self._body.value

    @property
    def name(self) -> str:
        return self._name.value

    def _useAttributes(self, attributes: dict[str, Any]) -> None:
        if "body" in attributes:
            self._body = self._makeStringAttribute(attributes["body"])
        if "name" in attributes:
            self._name = self._makeStringAttribute(attributes["name"])
